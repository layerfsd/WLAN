Index: external/bluetooth/bluez/tools/hciattach.c
===================================================================
--- external/bluetooth/bluez/tools/hciattach.c	(revision 704)
+++ external/bluetooth/bluez/tools/hciattach.c	(working copy)
@@ -4,7 +4,7 @@
  *
  *  Copyright (C) 2000-2001  Qualcomm Incorporated
  *  Copyright (C) 2002-2003  Maxim Krasnyansky <maxk@qualcomm.com>
- *  Copyright (C) 2002-2010  Marcel Holtmann <marcel@holtmann.org>
+ *  Copyright (C) 2002-2009  Marcel Holtmann <marcel@holtmann.org>
  *
  *
  *  This program is free software; you can redistribute it and/or modify
@@ -45,14 +45,32 @@
 #include <sys/socket.h>
 #include <sys/uio.h>
 
-#include <bluetooth/bluetooth.h>
-#include <bluetooth/hci.h>
-#include <bluetooth/hci_lib.h>
+#include "bluetooth/bluetooth.h"
+#include "bluetooth/hci.h"
+#include "bluetooth/hci_lib.h"
 
 #include "hciattach.h"
 
+//#ifdef NEED_PPOLL
 #include "ppoll.h"
+//#endif
 
+
+#define BCM2048_SUPPORTED  TRUE
+#define BCM2048_DEBUG
+
+#define PATCHRAM_INCLUDED
+
+#define HCIUARTSETPROTO         _IOW('U', 200, int)
+#define HCIUARTGETPROTO         _IOR('U', 201, int)
+#define HCIUARTGETDEVICE        _IOR('U', 202, int)
+
+#define HCI_UART_H4     0
+#define HCI_UART_BCSP   1
+
+#define VERSION "1.02"
+
+
 struct uart_t {
 	char *type;
 	int  m_id;
@@ -68,8 +86,1390 @@
 
 #define FLOW_CTL	0x0001
 
+#ifdef BCM2048_SUPPORTED
+unsigned char bcm2048_patchram[] = {
+0x4C, 0xFC, 0x2C, 0x10, 0x74, 0x08, 0x00, 0x01, 0x08, 0x00, 0xEA, 0x00, 0x00,
+      0x62, 0x04, 0x00, 0x96, 0x1A, 0xFD, 0x04, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
+      0x40, 0x06, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x29, 0x43, 0x02, 0x0A, 0x00,
+      0x38, 0x74, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x4C, 0xFC, 0xFF, 0x38, 0x74, 0x08, 0x00, 0xC1, 0x62, 0x00, 0xC7, 0xD9, 0x14,
+      0x8F, 0x23, 0xC7, 0xD9, 0x14, 0x8F, 0x23, 0x39, 0x04, 0xB9, 0x04, 0xBA,
+      0x04, 0xBB, 0x04, 0xBC, 0x04, 0xBD, 0x04, 0xBE, 0x04, 0xBF, 0x04, 0xC0,
+      0x04, 0xC1, 0x04, 0xC2, 0x04, 0xC3, 0x04, 0xC4, 0x04, 0xC5, 0x04, 0xC6,
+      0x04, 0xC7, 0x04, 0xC8, 0x04, 0xC9, 0x04, 0xCA, 0x04, 0xCB, 0x04, 0xCC,
+      0x04, 0xCD, 0x04, 0xCE, 0x04, 0xCF, 0x04, 0xD0, 0x04, 0xD1, 0x04, 0xD2,
+      0x04, 0xD3, 0x04, 0xD4, 0x04, 0xD5, 0x04, 0xD6, 0x04, 0xD7, 0x04, 0xD8,
+      0x04, 0xD9, 0x04, 0xDA, 0x04, 0xDB, 0x04, 0xDC, 0x04, 0xDD, 0x04, 0xDE,
+      0x04, 0xDF, 0x04, 0xE0, 0x04, 0xE1, 0x04, 0xE2, 0x40, 0x00, 0x0A, 0xC3,
+      0x42, 0x00, 0x03, 0x6F, 0x04, 0x07, 0x07, 0x6B, 0x0A, 0x89, 0x0B, 0x77,
+      0x0C, 0x7C, 0x0D, 0x08, 0x0E, 0x1A, 0x11, 0x3F, 0x12, 0x66, 0x14, 0x2D,
+      0x18, 0x31, 0x19, 0x4E, 0x1A, 0x15, 0x1B, 0x67, 0x1E, 0x03, 0x1F, 0x0A,
+      0x20, 0x5F, 0x2B, 0x30, 0x2D, 0x04, 0x2F, 0x17, 0x30, 0x40, 0x38, 0xC3,
+      0x3C, 0x0F, 0x3E, 0x47, 0x43, 0xFF, 0x58, 0x64, 0x5E, 0x14, 0x5F, 0x13,
+      0x7C, 0x0F, 0x7E, 0x17, 0x28, 0x62, 0x06, 0x0B, 0xCF, 0x12, 0x00, 0x06,
+      0x60, 0x40, 0x08, 0xF0, 0xC0, 0x13, 0xF0, 0x30, 0x21, 0xF0, 0x00, 0x2E,
+      0xF0, 0x00, 0x3B, 0x04, 0x04, 0xC4, 0x28, 0x01, 0x54, 0xFD, 0x0E, 0x00,
+      0x56, 0x12, 0x00, 0x00, 0x58, 0xFD, 0x0E, 0x00, 0xDE, 0x9A, 0x00, 0x00,
+      0x30, 0xFC, 0x0E, 0x00, 0x63, 0x03, 0x00, 0x00, 0x94, 0xFC, 0x0E, 0x00,
+      0x5E, 0x02, 0x00, 0x00, 0x98, 0xFC, 0x0E, 0x00, 0x03, 0x80, 0x00, 0x00,
+      0x28, 0xFD, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0xFD, 0x0E, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x30,
+0x4C, 0xFC, 0xFF, 0x33, 0x75, 0x08, 0x00, 0xFD, 0x0E, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x34, 0xFD, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xFC, 0x0E,
+      0x00, 0x12, 0x00, 0x00, 0x00, 0x0C, 0xFD, 0x0E, 0x00, 0x10, 0x00, 0x00,
+      0x00, 0x14, 0xFD, 0x0E, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x1C, 0xFD, 0x0E,
+      0x00, 0x06, 0x00, 0x00, 0x00, 0x24, 0xFD, 0x0E, 0x00, 0x04, 0x00, 0x00,
+      0x00, 0x8C, 0xFC, 0x0E, 0x00, 0xFC, 0x07, 0x00, 0x00, 0x08, 0xFD, 0x0E,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xFD, 0x0E, 0x00, 0xFE, 0x07, 0x00,
+      0x00, 0x18, 0xFD, 0x0E, 0x00, 0x05, 0x00, 0x00, 0x00, 0x20, 0xFD, 0x0E,
+      0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0xFD, 0x0E, 0x00, 0x66, 0x02, 0x00,
+      0x00, 0xE8, 0xFC, 0x0E, 0x00, 0x00, 0x80, 0x00, 0x00, 0x88, 0xFC, 0x0E,
+      0x00, 0x00, 0x04, 0x00, 0x00, 0x2C, 0xFC, 0x0E, 0x00, 0x4B, 0x04, 0x00,
+      0x00, 0x70, 0xFC, 0x0E, 0x00, 0x0B, 0x09, 0x00, 0x00, 0x74, 0xFC, 0x0E,
+      0x00, 0x2E, 0x01, 0x00, 0x00, 0x58, 0xFC, 0x0E, 0x00, 0xA0, 0x72, 0x00,
+      0x00, 0xD0, 0xFC, 0x0E, 0x00, 0x0C, 0xC9, 0x00, 0x00, 0xA8, 0x42, 0x0F,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x47, 0x0F, 0x00, 0x30, 0x00, 0x00,
+      0x00, 0x78, 0x41, 0x0F, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x42, 0x0F,
+      0x00, 0xF0, 0x00, 0x00, 0x00, 0xB0, 0x41, 0x0F, 0x00, 0xA5, 0x00, 0x00,
+      0x00, 0xB4, 0x41, 0x0F, 0x00, 0xA1, 0x00, 0x00, 0x00, 0xDC, 0x09, 0x08,
+      0x00, 0xA9, 0xFF, 0xFF, 0xFF, 0x08, 0x0A, 0x08, 0x00, 0xC5, 0xFF, 0xFF,
+      0xFF, 0x74, 0x00, 0x08, 0x00, 0x23, 0xAC, 0x08, 0x00, 0x08, 0xFC, 0x0E,
+      0x00, 0x2E, 0x3E, 0x00, 0x00, 0xC0, 0x84, 0x00, 0x8C, 0x00, 0x0F, 0x00,
+      0x00, 0xF0, 0xFF, 0x0F, 0x00,
+0x4C, 0xFC, 0xFF, 0x2E, 0x76, 0x08, 0x00, 0x10, 0x11, 0x01, 0x78, 0x00, 0x0F,
+      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x19, 0x10, 0x19, 0x19, 0xB8, 0x00, 0x0F,
+      0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x88, 0x00, 0x0F,
+      0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x0F,
+      0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x19, 0x19, 0x6C, 0x00, 0x0F,
+      0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x19, 0x19, 0x19, 0x19, 0x8C, 0x00, 0x0F,
+      0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x0F,
+      0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x19, 0x19, 0xC8, 0x09, 0x08,
+      0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x88, 0x00, 0x0F,
+      0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x0F,
+      0x00, 0xFF, 0xFF, 0x00, 0x00, 0x19, 0x18, 0x00, 0x00, 0x1A, 0x23, 0x00,
+      0x01, 0x06, 0x06, 0x0B, 0xFF, 0x07, 0x90, 0x03, 0x55, 0xFF, 0x3A, 0xFB,
+      0x28, 0xF7, 0x1C, 0xF7, 0x1C, 0xF7, 0x1C, 0x0B, 0xFF, 0x07, 0x90, 0x03,
+      0x55, 0xFF, 0x3A, 0xFB, 0x28, 0xF7, 0x1C, 0xF7, 0x1C, 0xF7, 0x1C, 0xA9,
+      0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90,
+      0x04, 0x00, 0x40, 0x00, 0x00, 0x00, 0x69, 0x02, 0x00, 0xFA, 0x00, 0x7E,
+      0x04, 0x00, 0x0B, 0x00, 0x00, 0x80, 0x68, 0x04, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x8F, 0x03, 0x00, 0x43, 0x00, 0x00, 0x6F, 0x1C, 0x00, 0x02, 0x33,
+      0x19, 0x05, 0xCF, 0x01, 0x00, 0x00, 0xAA, 0x14, 0x7F, 0x8C, 0x00, 0xAA,
+      0x00, 0x00, 0x08, 0x92, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
+      0x00, 0x1E, 0xA8, 0x09, 0x00,
+0x4C, 0xFC, 0xFF, 0x29, 0x77, 0x08, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x16, 0xAE, 0x00, 0x00, 0x19, 0x02, 0xFF, 0x21, 0x03,
+      0xFF, 0x08, 0x04, 0xFF, 0x00, 0x12, 0xFF, 0x04, 0x13, 0xFF, 0x00, 0x14,
+      0xFF, 0x4A, 0x15, 0xFF, 0x00, 0x16, 0xFF, 0x02, 0x17, 0xFF, 0x00, 0x18,
+      0xFF, 0x05, 0x19, 0xFF, 0x00, 0x1B, 0xFF, 0x00, 0x1C, 0xFF, 0xF1, 0x1D,
+      0xFF, 0x13, 0x1E, 0xFF, 0x13, 0x1F, 0xFF, 0x00, 0x20, 0xFF, 0x02, 0x24,
+      0xFF, 0x02, 0x3D, 0xFF, 0x00, 0x39, 0xFF, 0x01, 0x40, 0xFF, 0x10, 0x44,
+      0xFF, 0x03, 0x45, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0xB0, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x39, 0xFF,
+      0x00, 0x12, 0xFF, 0x05, 0x44, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
+      0x39, 0xFF, 0x01, 0x12, 0xFF, 0x04, 0x44, 0xFF, 0x03, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x0B, 0x04, 0x00, 0x3C, 0xAD, 0x08, 0x00, 0x0B, 0x04, 0x00, 0xEC, 0xAD,
+      0x08, 0x00, 0x5F, 0x06, 0x00, 0x3C, 0x28, 0x01, 0x05, 0x00, 0x04, 0x0A,
+      0x40, 0x00, 0xAC, 0x4B, 0x08, 0x00, 0x10, 0xB5, 0x0C, 0x4A, 0x03, 0x21,
+      0xCC, 0x43, 0x0B, 0x4B, 0x19, 0x6B, 0x4B, 0x1C, 0x10, 0xD0, 0x13, 0x68,
+      0x23, 0x40, 0x8B, 0x42, 0x02, 0xD3, 0x13, 0x68, 0x23, 0x40, 0x04, 0xE0,
+      0x13, 0x68, 0x23, 0x40, 0xC9,
+0x4C, 0xFC, 0xFF, 0x24, 0x78, 0x08, 0x00, 0x1A, 0x01, 0x23, 0x1B, 0x07, 0x59,
+      0x1A, 0x89, 0x08, 0x43, 0x68, 0x5B, 0x18, 0x43, 0x60, 0x10, 0xBD, 0x88,
+      0x80, 0x0E, 0x00, 0xE4, 0x25, 0x08, 0x00, 0x08, 0x1B, 0x00, 0x00, 0x88,
+      0x8B, 0x00, 0x00, 0x82, 0xF0, 0x68, 0xFA, 0x0C, 0x00, 0x5C, 0xB0, 0x08,
+      0x00, 0x43, 0x60, 0x05, 0xB0, 0xF9, 0xF7, 0xA4, 0xFD, 0x7D, 0xF7, 0x92,
+      0xFD, 0x08, 0x2D, 0x00, 0x01, 0xD0, 0x91, 0x00, 0x00, 0x81, 0xF0, 0x4A,
+      0xFF, 0x1E, 0x00, 0x68, 0xB0, 0x08, 0x00, 0x00, 0x29, 0x02, 0xD1, 0x01,
+      0x21, 0x11, 0x70, 0x07, 0xE0, 0x01, 0x29, 0x05, 0xD1, 0x02, 0x21, 0x11,
+      0x70, 0x0F, 0xB4, 0x00, 0xF0, 0x0A, 0xF8, 0x0F, 0xBC, 0x7E, 0xF7, 0xAD,
+      0xF8, 0x08, 0x1D, 0x00, 0x02, 0x3C, 0x92, 0x00, 0x00, 0x81, 0xF0, 0x23,
+      0xFF, 0x0E, 0x00, 0x86, 0xB0, 0x08, 0x00, 0x09, 0xB4, 0x00, 0xF0, 0x20,
+      0xF8, 0x09, 0xBC, 0x7E, 0xF7, 0xD7, 0xF8, 0x00, 0x00, 0x08, 0x1F, 0x00,
+      0x03, 0x30, 0x82, 0x00, 0x00, 0x83, 0xF0, 0x14, 0xF8, 0x10, 0x00, 0x5C,
+      0xB2, 0x08, 0x00, 0xFF, 0xF7, 0x67, 0xFF, 0x20, 0x1C, 0x03, 0x9C, 0xA4,
+      0x46, 0x7C, 0xF7, 0xE5, 0xFF, 0x00, 0x00, 0x08, 0x67, 0x00, 0x04, 0x58,
+      0x83, 0x00, 0x00, 0x82, 0xF0, 0x92, 0xFF, 0x58, 0x00, 0x80, 0xB2, 0x08,
+      0x00, 0xA1, 0x68, 0x88, 0x42, 0x0A, 0xD1, 0x00, 0x29, 0x08, 0xD0, 0xE1,
+      0x69, 0x88, 0x42, 0x05, 0xD1, 0xE7, 0x61, 0x0E, 0x48, 0x01, 0x21, 0x00,
+      0x22, 0xA7, 0xF7, 0xEA, 0xFC, 0xE0, 0x68, 0x00, 0x28, 0x09, 0xD1, 0x0C,
+      0xE0, 0x81, 0x7B, 0x0A, 0x4E, 0x31, 0x60, 0x7D, 0xF7, 0x19, 0xF8, 0x02,
+      0xD1, 0x6B, 0x88, 0x99, 0x42, 0x03, 0xD2, 0x07, 0x4A, 0x13, 0x68, 0xDB,
+      0x06, 0xF2, 0xD4, 0xFF, 0xF7,
+0x4C, 0xFC, 0xFF, 0x1F, 0x79, 0x08, 0x00, 0x4A, 0xFF, 0x7D, 0xF7, 0x98, 0xF8,
+      0xC0, 0x46, 0xE4, 0x25, 0x08, 0x00, 0x28, 0x2E, 0x08, 0x00, 0x64, 0x82,
+      0x0E, 0x00, 0x08, 0x80, 0x0E, 0x00, 0x08, 0x23, 0x00, 0x05, 0x44, 0x6E,
+      0x02, 0x00, 0x64, 0xF0, 0x48, 0xFA, 0x14, 0x00, 0xD8, 0xB2, 0x08, 0x00,
+      0x05, 0xD0, 0x20, 0xB4, 0x00, 0xF0, 0x06, 0xF8, 0x20, 0xBC, 0x9B, 0xF7,
+      0xB2, 0xFD, 0x9B, 0xF7, 0xB3, 0xFD, 0x00, 0x00, 0x08, 0x27, 0x00, 0x06,
+      0xA4, 0x66, 0x02, 0x00, 0x64, 0xF0, 0x48, 0xFE, 0x18, 0x00, 0x38, 0xB3,
+      0x08, 0x00, 0x05, 0xD5, 0x08, 0x28, 0x03, 0xD0, 0x0C, 0x28, 0x01, 0xD0,
+      0x9B, 0xF7, 0xD9, 0xF9, 0x02, 0x20, 0xFF, 0x30, 0x9B, 0xF7, 0xAD, 0xF9,
+      0x00, 0x00, 0x08, 0x23, 0x00, 0x07, 0x54, 0xB6, 0x00, 0x00, 0x7F, 0xF0,
+      0x2E, 0xFF, 0x14, 0x00, 0xB4, 0xB4, 0x08, 0x00, 0x02, 0xB4, 0x00, 0xF0,
+      0x07, 0xF8, 0x02, 0xBC, 0x00, 0x29, 0x01, 0xD0, 0x80, 0xF7, 0xCA, 0xF8,
+      0x80, 0xF7, 0xDD, 0xF8, 0x08, 0x0F, 0x00, 0x08, 0xF8, 0x72, 0x03, 0x00,
+      0x40, 0x28, 0x0B, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x0F,
+      0x00, 0x09, 0x90, 0x6F, 0x03, 0x00, 0x31, 0x23, 0x18, 0x1C, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x08, 0x23, 0x00, 0x0A, 0xE0, 0x6F, 0x03, 0x00,
+      0x54, 0xF0, 0x5C, 0xFD, 0x14, 0x00, 0x9C, 0xBA, 0x08, 0x00, 0x00, 0x95,
+      0x01, 0x35, 0x28, 0x06, 0x00, 0x0E, 0xB8, 0x60, 0x28, 0x04, 0x01, 0x3D,
+      0xAB, 0xF7, 0x9E, 0xFA, 0x00, 0x00, 0x08, 0x17, 0x00, 0x0B, 0xC0, 0x79,
+      0x03, 0x00, 0x54, 0xF0, 0x9E, 0xF9, 0x08, 0x00, 0x00, 0xBD, 0x08, 0x00,
+      0xAB, 0xF7, 0xF8, 0xFB, 0xAB, 0xF7, 0x69, 0xFE, 0x08, 0x0F, 0x00, 0x0C,
+      0xF4, 0x74, 0x03, 0x00, 0x00,
+0x4C, 0xFC, 0xFF, 0x1A, 0x7A, 0x08, 0x00, 0xB5, 0x66, 0x49, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x08, 0x15, 0x00, 0x0D, 0xF8, 0x74, 0x03, 0x00, 0x54,
+      0xF0, 0x7C, 0xFC, 0x06, 0x00, 0xF4, 0xBD, 0x08, 0x00, 0xFF, 0xF7, 0xD0,
+      0xFF, 0x00, 0xBD, 0x08, 0x23, 0x00, 0x0E, 0xB8, 0x7D, 0x03, 0x00, 0x54,
+      0xF0, 0x1F, 0xF8, 0x14, 0x00, 0xFA, 0xBD, 0x08, 0x00, 0x24, 0x16, 0xFF,
+      0xF7, 0xD0, 0xFF, 0x05, 0x1C, 0xAB, 0xF7, 0xC2, 0xFF, 0xFF, 0xF7, 0x7F,
+      0xFF, 0xAB, 0xF7, 0xDB, 0xFF, 0x08, 0x27, 0x00, 0x0F, 0xA4, 0x75, 0x03,
+      0x00, 0x54, 0xF0, 0x38, 0xFC, 0x18, 0x00, 0x18, 0xBE, 0x08, 0x00, 0x03,
+      0x4B, 0x00, 0x20, 0x18, 0x60, 0x03, 0x4B, 0x18, 0x60, 0xAB, 0xF7, 0xCA,
+      0xFB, 0xC0, 0x46, 0xF4, 0x40, 0x0F, 0x00, 0xF0, 0x40, 0x0F, 0x00, 0x08,
+      0x19, 0x00, 0x10, 0x64, 0x7A, 0x03, 0x00, 0x54, 0xF0, 0xD3, 0xF9, 0x0A,
+      0x00, 0x0E, 0xBE, 0x08, 0x00, 0xFF, 0xF7, 0x7B, 0xFF, 0xAB, 0xF7, 0x2D,
+      0xFE, 0x00, 0x00, 0x08, 0x33, 0x00, 0x11, 0x64, 0x72, 0x03, 0x00, 0x54,
+      0xF0, 0xE4, 0xFD, 0x24, 0x00, 0x30, 0xBE, 0x08, 0x00, 0xD3, 0x73, 0x00,
+      0x20, 0x04, 0x49, 0x08, 0x60, 0x04, 0x49, 0x08, 0x60, 0x04, 0x49, 0x08,
+      0x60, 0x01, 0x20, 0xAB, 0xF7, 0x11, 0xFA, 0xC0, 0x46, 0x68, 0x63, 0x08,
+      0x00, 0xF4, 0x40, 0x0F, 0x00, 0xF0, 0x40, 0x0F, 0x00, 0x08, 0x17, 0x00,
+      0x12, 0x94, 0x74, 0x03, 0x00, 0x54, 0xF0, 0x0A, 0xFD, 0x08, 0x00, 0xAC,
+      0xBE, 0x08, 0x00, 0xFF, 0xF7, 0xD2, 0xFF, 0xAB, 0xF7, 0x1C, 0xFB, 0x08,
+      0x1F, 0x00, 0x13, 0x4C, 0x70, 0x03, 0x00, 0x54, 0xF0, 0x32, 0xFF, 0x10,
+      0x00, 0xB4, 0xBE, 0x08, 0x00, 0x2D, 0x20, 0xFF, 0x30, 0x1B, 0x18, 0x01,
+      0x92, 0x10, 0x20, 0xAB, 0xF7,
+0x4C, 0xFC, 0xFF, 0x15, 0x7B, 0x08, 0x00, 0xC7, 0xF8, 0x00, 0x00, 0x0B, 0x04,
+      0x00, 0x30, 0xB5, 0x08, 0x00, 0x08, 0x21, 0x00, 0x14, 0xB8, 0x6F, 0x01,
+      0x00, 0x74, 0xF0, 0x36, 0xFB, 0x12, 0x00, 0x28, 0xB6, 0x08, 0x00, 0x03,
+      0xA8, 0x8B, 0xF7, 0xD1, 0xFC, 0x03, 0xA8, 0x8B, 0xF7, 0x3B, 0xFD, 0x04,
+      0x1C, 0x8B, 0xF7, 0x9B, 0xFC, 0x08, 0x1D, 0x00, 0x15, 0x84, 0xCB, 0x02,
+      0x00, 0x5E, 0xF0, 0x77, 0xFE, 0x0E, 0x00, 0x76, 0xB8, 0x08, 0x00, 0x00,
+      0x93, 0x00, 0x27, 0x00, 0x20, 0xA1, 0xF7, 0x85, 0xF9, 0x98, 0x8A, 0x0E,
+      0x00, 0x08, 0x25, 0x00, 0x16, 0xB8, 0xCA, 0x02, 0x00, 0x5E, 0xF0, 0xD2,
+      0xFE, 0x16, 0x00, 0x60, 0xB8, 0x08, 0x00, 0x00, 0x24, 0x07, 0x49, 0x0B,
+      0x68, 0xBF, 0x22, 0x13, 0x40, 0x0B, 0x60, 0x00, 0x22, 0x13, 0x05, 0x1B,
+      0x0D, 0xA1, 0xF7, 0x23, 0xF9, 0x08, 0x19, 0x00, 0x17, 0x50, 0x23, 0x01,
+      0x00, 0x79, 0xF0, 0xFF, 0xFA, 0x0A, 0x00, 0x52, 0xB9, 0x08, 0x00, 0xAA,
+      0x2A, 0x00, 0xD9, 0xAA, 0x22, 0x86, 0xF7, 0xFD, 0xFC, 0x08, 0x23, 0x00,
+      0x18, 0xE4, 0xBA, 0x00, 0x00, 0x7F, 0xF0, 0x26, 0xFF, 0x14, 0x00, 0x34,
+      0xB9, 0x08, 0x00, 0x20, 0x1C, 0x01, 0x99, 0xFF, 0xF7, 0xA4, 0xFF, 0x01,
+      0x28, 0x01, 0xD0, 0x80, 0xF7, 0xE5, 0xF8, 0x80, 0xF7, 0xDA, 0xF8, 0x08,
+      0x19, 0x00, 0x19, 0x14, 0xB4, 0x00, 0x00, 0x80, 0xF0, 0x98, 0xFA, 0x0A,
+      0x00, 0x48, 0xB9, 0x08, 0x00, 0x20, 0x1C, 0xFF, 0xF7, 0xD3, 0xFF, 0x7F,
+      0xF7, 0x64, 0xFD, 0x0A, 0x05, 0x00, 0x8D, 0xD8, 0x08, 0x00, 0x19, 0x08,
+      0x1D, 0x00, 0x1A, 0x4C, 0x06, 0x01, 0x00, 0x7A, 0xF0, 0xFF, 0xFF, 0x0E,
+      0x00, 0x4E, 0xB6, 0x08, 0x00, 0x20, 0x1C, 0x00, 0xF0, 0x04, 0xF8, 0x31,
+      0x1C, 0x84, 0xF7, 0x7B, 0xFF,
+0x4C, 0xFC, 0xFF, 0x10, 0x7C, 0x08, 0x00, 0x00, 0x00, 0x08, 0x23, 0x00, 0x1B,
+      0x80, 0xA8, 0x00, 0x00, 0x80, 0xF0, 0xDB, 0xFE, 0x14, 0x00, 0x3A, 0xB6,
+      0x08, 0x00, 0x5C, 0x38, 0x81, 0x7B, 0x5C, 0x30, 0x00, 0x78, 0x0A, 0x29,
+      0x00, 0xD8, 0x00, 0x20, 0x00, 0x28, 0x7F, 0xF7, 0x1B, 0xF9, 0x08, 0x1F,
+      0x00, 0x1C, 0xCC, 0x05, 0x01, 0x00, 0x7B, 0xF0, 0x6E, 0xF8, 0x10, 0x00,
+      0xAC, 0xB6, 0x08, 0x00, 0x28, 0x1C, 0x98, 0xF7, 0x6B, 0xFD, 0x28, 0x1C,
+      0xFF, 0xF7, 0xD2, 0xFF, 0x77, 0xF7, 0x9D, 0xFE, 0x08, 0x33, 0x00, 0x1D,
+      0x78, 0x06, 0x01, 0x00, 0x7B, 0xF0, 0x3C, 0xF8, 0x24, 0x00, 0xF4, 0xB6,
+      0x08, 0x00, 0xDB, 0x01, 0x07, 0xD4, 0xE3, 0x6A, 0x00, 0x2B, 0x04, 0xD5,
+      0x20, 0x1C, 0x01, 0x21, 0x85, 0xF7, 0x98, 0xF8, 0x02, 0xE0, 0x20, 0x1C,
+      0x84, 0xF7, 0x84, 0xFD, 0x20, 0x1C, 0xFF, 0xF7, 0xA4, 0xFF, 0x77, 0xF7,
+      0x18, 0xFE, 0x08, 0x25, 0x00, 0x1E, 0xB8, 0x3F, 0x02, 0x00, 0x67, 0xF0,
+      0xAE, 0xFB, 0x16, 0x00, 0x18, 0xB7, 0x08, 0x00, 0x03, 0x98, 0x00, 0xF0,
+      0x21, 0xF8, 0x01, 0x28, 0x01, 0xD0, 0x98, 0xF7, 0x61, 0xFC, 0x30, 0x69,
+      0x03, 0x21, 0x98, 0xF7, 0x47, 0xFC, 0x08, 0x29, 0x00, 0x1F, 0x28, 0x43,
+      0x02, 0x00, 0x67, 0xF0, 0x01, 0xFA, 0x1A, 0x00, 0x2E, 0xB7, 0x08, 0x00,
+      0x9B, 0x07, 0x01, 0xD4, 0x98, 0xF7, 0xFB, 0xFD, 0x28, 0x1C, 0x81, 0xF7,
+      0x7F, 0xF9, 0x00, 0xF0, 0x10, 0xF8, 0x00, 0x28, 0xF6, 0xD0, 0x98, 0xF7,
+      0xF9, 0xFD, 0x08, 0x27, 0x00, 0x20, 0xF0, 0x4B, 0x02, 0x00, 0x66, 0xF0,
+      0xAA, 0xFD, 0x18, 0x00, 0x48, 0xB7, 0x08, 0x00, 0x02, 0xD4, 0x01, 0x21,
+      0x99, 0xF7, 0x52, 0xFA, 0x30, 0x7F, 0x81, 0xF7, 0x72, 0xF9, 0x00, 0xF0,
+      0x03, 0xF8, 0x00, 0x28, 0xF5,
+0x4C, 0xFC, 0xFF, 0x0B, 0x7D, 0x08, 0x00, 0xD0, 0x70, 0xBD, 0x08, 0x27, 0x00,
+      0x21, 0x54, 0xDA, 0x02, 0x00, 0x5D, 0xF0, 0x90, 0xFE, 0x18, 0x00, 0x78,
+      0xB7, 0x08, 0x00, 0x04, 0x4B, 0x1B, 0x68, 0xDB, 0x06, 0x03, 0xD4, 0x4B,
+      0x79, 0xFF, 0x2B, 0xA2, 0xF7, 0x68, 0xF9, 0xA2, 0xF7, 0x79, 0xF9, 0x08,
+      0x80, 0x0E, 0x00, 0x08, 0x23, 0x00, 0x22, 0xB8, 0x8B, 0x00, 0x00, 0x82,
+      0xF0, 0x18, 0xFE, 0x14, 0x00, 0xEC, 0xB7, 0x08, 0x00, 0x05, 0xD9, 0x20,
+      0x1C, 0x00, 0xF0, 0x06, 0xF8, 0x06, 0x1C, 0x7D, 0xF7, 0xFB, 0xF9, 0x7D,
+      0xF7, 0xE8, 0xF9, 0x00, 0x00, 0x08, 0x17, 0x00, 0x23, 0xDC, 0xE1, 0x01,
+      0x00, 0x6D, 0xF0, 0x04, 0xFC, 0x08, 0x00, 0xE8, 0xB9, 0x08, 0x00, 0xFF,
+      0xF7, 0xCC, 0xFF, 0x92, 0xF7, 0x13, 0xFC, 0x08, 0x0F, 0x00, 0x24, 0xC4,
+      0x6E, 0x01, 0x00, 0x14, 0x22, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x08, 0x0F, 0x00, 0x25, 0x8C, 0x6E, 0x01, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x2F, 0x00, 0x26, 0x30,
+      0x5B, 0x00, 0x00, 0x86, 0xF0, 0xFE, 0xF9, 0x20, 0x00, 0x30, 0xBF, 0x08,
+      0x00, 0x04, 0xB4, 0xFF, 0xF7, 0xDB, 0xFF, 0x04, 0xBC, 0x00, 0x28, 0x04,
+      0xD1, 0x10, 0x1C, 0xA0, 0x32, 0x13, 0x78, 0x79, 0xF7, 0xF7, 0xFD, 0x01,
+      0x1C, 0x10, 0x1C, 0x79, 0xF7, 0x16, 0xFE, 0x00, 0x00, 0x08, 0x23, 0x00,
+      0x27, 0xD8, 0x2D, 0x00, 0x00, 0x89, 0xF0, 0xA0, 0xF8, 0x14, 0x00, 0x1C,
+      0xBF, 0x08, 0x00, 0x20, 0x1C, 0xFF, 0xF7, 0xEC, 0xFF, 0x00, 0x28, 0x01,
+      0xD1, 0x76, 0xF7, 0x67, 0xFF, 0xA0, 0x68, 0x76, 0xF7, 0x56, 0xFF, 0x0B,
+      0x04, 0x00, 0xA8, 0xBF, 0x08, 0x00, 0x08, 0x0F, 0x00, 0x28, 0x38, 0xF6,
+      0x01, 0x00, 0x6C, 0xF0, 0xA6,
+0x4C, 0xFC, 0xFF, 0x06, 0x7E, 0x08, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x08, 0x21, 0x00, 0x29, 0xD0, 0x75, 0x00, 0x00, 0x84, 0xF0, 0xDC,
+      0xFD, 0x12, 0x00, 0x8C, 0xC1, 0x08, 0x00, 0x02, 0x9B, 0x9B, 0x07, 0x9B,
+      0x0F, 0x02, 0x93, 0x20, 0x1C, 0x7B, 0xF7, 0x7D, 0xFD, 0x7B, 0xF7, 0x1C,
+      0xFA, 0x0A, 0x74, 0x00, 0xE8, 0x4B, 0x08, 0x00, 0x30, 0xB5, 0x05, 0x1C,
+      0x19, 0x4C, 0x00, 0x20, 0x22, 0x7E, 0x00, 0x2A, 0x02, 0xD0, 0x02, 0x2A,
+      0x11, 0xD0, 0x28, 0xE0, 0x01, 0x29, 0x26, 0xD1, 0xA1, 0x68, 0x28, 0x1C,
+      0x8E, 0xF7, 0xC9, 0xFC, 0x00, 0x28, 0x04, 0xD0, 0xA3, 0x69, 0x01, 0x20,
+      0x80, 0x07, 0x03, 0x43, 0x0F, 0xE0, 0x28, 0x1C, 0x8E, 0xF7, 0x89, 0xFD,
+      0x16, 0xE0, 0x05, 0x29, 0x15, 0xD1, 0xA1, 0x68, 0x28, 0x1C, 0x8E, 0xF7,
+      0xB8, 0xFC, 0x00, 0x28, 0x0B, 0xD0, 0xA3, 0x69, 0x01, 0x20, 0x40, 0x07,
+      0x83, 0x43, 0xA3, 0x61, 0x35, 0x23, 0xA3, 0x76, 0x63, 0x76, 0x28, 0x1C,
+      0x8E, 0xF7, 0xEB, 0xFD, 0x02, 0xE0, 0x28, 0x1C, 0x8E, 0xF7, 0x44, 0xFD,
+      0x01, 0x20, 0x30, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0x08, 0x2E, 0x08, 0x00,
+      0x08, 0x1F, 0x00, 0x2A, 0x48, 0xA0, 0x00, 0x00, 0x82, 0xF0, 0xC6, 0xF8,
+      0x10, 0x00, 0xD8, 0xC1, 0x08, 0x00, 0x03, 0x98, 0x00, 0xF0, 0x05, 0xF8,
+      0x23, 0x68, 0x5B, 0x07, 0x7D, 0xF7, 0x33, 0xFF, 0x00, 0x00, 0x08, 0x1F,
+      0x00, 0x2B, 0xB8, 0x7C, 0x00, 0x00, 0x84, 0xF0, 0x71, 0xFA, 0x10, 0x00,
+      0x9E, 0xC1, 0x08, 0x00, 0xDD, 0x60, 0x1D, 0x1C, 0x60, 0x68, 0x00, 0xF0,
+      0x12, 0xF8, 0xA8, 0x60, 0x7B, 0xF7, 0x88, 0xFD, 0x08, 0x1B, 0x00, 0x2C,
+      0x8C, 0xC4, 0x02, 0x00, 0x5F, 0xF0, 0x8F, 0xFE, 0x0C, 0x00, 0xAE, 0xC1,
+      0x08, 0x00, 0xE0, 0x60, 0x48,
+0x4C, 0xFC, 0xFF, 0x01, 0x7F, 0x08, 0x00, 0x68, 0x00, 0xF0, 0x0B, 0xF8, 0xA0,
+      0xF7, 0x6B, 0xF9, 0x08, 0x21, 0x00, 0x2D, 0xEC, 0xD5, 0x02, 0x00, 0x5E,
+      0xF0, 0xE5, 0xFD, 0x12, 0x00, 0xBA, 0xC1, 0x08, 0x00, 0x69, 0x46, 0xA0,
+      0xF7, 0xE3, 0xF8, 0x01, 0x98, 0x00, 0xF0, 0x03, 0xF8, 0x03, 0x1C, 0xA1,
+      0xF7, 0x14, 0xFA, 0x08, 0x2D, 0x00, 0x2E, 0xF8, 0x6A, 0x00, 0x00, 0x85,
+      0xF0, 0xDB, 0xFB, 0x1E, 0x00, 0xB2, 0xC2, 0x08, 0x00, 0x63, 0x7C, 0x03,
+      0x2B, 0x02, 0xD0, 0x2B, 0x7F, 0x00, 0x2B, 0x01, 0xD0, 0x7A, 0xF7, 0x23,
+      0xFC, 0x20, 0x1C, 0x00, 0xF0, 0x04, 0xF8, 0x00, 0x28, 0xF8, 0xD0, 0x7A,
+      0xF7, 0x20, 0xFC, 0x08, 0x21, 0x00, 0x2F, 0x0C, 0xBD, 0x00, 0x00, 0x80,
+      0xF0, 0xC0, 0xFA, 0x12, 0x00, 0x90, 0xC2, 0x08, 0x00, 0x0E, 0x1C, 0xFF,
+      0xF7, 0xD3, 0xFF, 0x00, 0x28, 0x01, 0xD0, 0x7F, 0xF7, 0x52, 0xFD, 0x7F,
+      0xF7, 0xAA, 0xFD, 0x08, 0x1F, 0x00, 0x30, 0x8C, 0x9F, 0x00, 0x00, 0x82,
+      0xF0, 0x89, 0xF9, 0x10, 0x00, 0xA2, 0xC2, 0x08, 0x00, 0x38, 0x1C, 0x00,
+      0xF0, 0xF8, 0xFB, 0x23, 0x68, 0x58, 0x06, 0x00, 0x0F, 0x7D, 0xF7, 0x7F,
+      0xFE, 0x0A, 0x2C, 0x00, 0xDC, 0x0D, 0x08, 0x00, 0x00, 0xB5, 0x81, 0xB0,
+      0x04, 0xA3, 0x00, 0x93, 0x80, 0x22, 0x05, 0x49, 0x05, 0x48, 0x02, 0x23,
+      0xB1, 0xF7, 0xB1, 0xFA, 0x01, 0xB0, 0x00, 0xBD, 0x4C, 0x4D, 0x5F, 0x43,
+      0x4D, 0x44, 0x00, 0x00, 0xC4, 0xD7, 0x08, 0x00, 0xA4, 0x0D, 0x08, 0x00,
+      0x08, 0x17, 0x00, 0x31, 0x44, 0xD5, 0x00, 0x00, 0x7E, 0xF0, 0xD5, 0xFE,
+      0x08, 0x00, 0xF2, 0xC2, 0x08, 0x00, 0xF4, 0xF7, 0x73, 0xFD, 0x81, 0xF7,
+      0x2C, 0xF9, 0x08, 0x1B, 0x00, 0x32, 0xE4, 0xD7, 0x00, 0x00, 0x7E, 0xF0,
+      0x89, 0xFD, 0x0C, 0x00, 0xFA,
+0x4C, 0xFC, 0xFF, 0xFC, 0x7F, 0x08, 0x00, 0xC2, 0x08, 0x00, 0x00, 0xF0, 0x13,
+      0xF8, 0x87, 0xF7, 0x90, 0xF8, 0x81, 0xF7, 0x71, 0xFA, 0x08, 0x21, 0x00,
+      0x33, 0x28, 0xF0, 0x00, 0x00, 0x7D, 0xF0, 0x6D, 0xF9, 0x12, 0x00, 0x06,
+      0xC3, 0x08, 0x00, 0x20, 0x1C, 0x00, 0xF0, 0x10, 0xF8, 0x00, 0x28, 0x01,
+      0xD0, 0x82, 0xF7, 0x8C, 0xFE, 0x82, 0xF7, 0x95, 0xFE, 0x08, 0x1B, 0x00,
+      0x34, 0x58, 0xF4, 0x00, 0x00, 0x7C, 0xF0, 0x5E, 0xFF, 0x0C, 0x00, 0x18,
+      0xC3, 0x08, 0x00, 0x00, 0xF0, 0x20, 0xF8, 0xAB, 0x7B, 0x01, 0x2B, 0x83,
+      0xF7, 0x9C, 0xF8, 0x08, 0x23, 0x00, 0x35, 0x44, 0x42, 0x02, 0x00, 0x68,
+      0xF0, 0x9A, 0xF8, 0x14, 0x00, 0x7C, 0xC3, 0x08, 0x00, 0xEC, 0x60, 0x03,
+      0xB4, 0x38, 0x1C, 0x21, 0x1C, 0x00, 0xF0, 0x04, 0xF8, 0x03, 0xBC, 0x97,
+      0xF7, 0x5F, 0xFF, 0x00, 0x00, 0x08, 0x27, 0x00, 0x36, 0xA4, 0x63, 0x01,
+      0x00, 0x76, 0xF0, 0x40, 0xF8, 0x18, 0x00, 0x28, 0xC4, 0x08, 0x00, 0x00,
+      0xF0, 0x1B, 0xF8, 0x00, 0x28, 0x02, 0xD0, 0x02, 0x49, 0x89, 0xF7, 0xB9,
+      0xFF, 0x89, 0xF7, 0xBE, 0xFF, 0xC0, 0x46, 0x6C, 0x0D, 0x08, 0x00, 0x08,
+      0x83, 0x03, 0x37, 0x18, 0x18, 0x02, 0x00, 0x6A, 0xF0, 0x2E, 0xFE, 0x74,
+      0x03, 0x78, 0xC4, 0x08, 0x00, 0x00, 0xF0, 0x02, 0xF8, 0x10, 0xBD, 0xC0,
+      0x46, 0x78, 0x47, 0xC0, 0x46, 0xF0, 0x4F, 0x2D, 0xE9, 0x34, 0xD0, 0x4D,
+      0xE2, 0x30, 0x00, 0x8D, 0xE5, 0x80, 0x1F, 0x92, 0xE8, 0x60, 0x00, 0x91,
+      0xE8, 0x0D, 0xE0, 0xA0, 0xE1, 0x97, 0x25, 0x83, 0xE0, 0x00, 0x40, 0xA0,
+      0xE3, 0x98, 0x35, 0xA4, 0xE0, 0x00, 0x00, 0xA0, 0xE3, 0x97, 0x36, 0xA0,
+      0xE0, 0x0C, 0x00, 0xAE, 0xE8, 0x04, 0x20, 0x90, 0xE0, 0x01, 0x30, 0xA0,
+      0x23, 0x00, 0x30, 0xA0, 0x33,
+0x4C, 0xFC, 0xFF, 0xF7, 0x80, 0x08, 0x00, 0x98, 0x26, 0xA3, 0xE0, 0x00, 0x00,
+      0xA0, 0xE3, 0x99, 0x25, 0xA0, 0xE0, 0x00, 0x30, 0x93, 0xE0, 0x00, 0x40,
+      0xA0, 0xE3, 0x9A, 0x35, 0xA4, 0xE0, 0x00, 0x00, 0xA0, 0xE3, 0x99, 0x36,
+      0xA0, 0xE0, 0x0C, 0x00, 0xAE, 0xE8, 0x04, 0x20, 0xB0, 0xE0, 0x01, 0x30,
+      0xA0, 0x23, 0x00, 0x30, 0xA0, 0x33, 0x9A, 0x26, 0xA3, 0xE0, 0x00, 0x00,
+      0xA0, 0xE3, 0x9B, 0x25, 0xA0, 0xE0, 0x00, 0x30, 0x93, 0xE0, 0x00, 0x40,
+      0xA0, 0xE3, 0x9C, 0x35, 0xA4, 0xE0, 0x00, 0x00, 0xA0, 0xE3, 0x9B, 0x36,
+      0xA0, 0xE0, 0x0C, 0x00, 0xAE, 0xE8, 0x04, 0x20, 0xB0, 0xE0, 0x01, 0x30,
+      0xA0, 0x23, 0x00, 0x30, 0xA0, 0x33, 0x9C, 0x26, 0xA3, 0xE0, 0x0C, 0x00,
+      0xAE, 0xE8, 0x08, 0xE0, 0x8D, 0xE2, 0x0C, 0x00, 0x9E, 0xE8, 0x08, 0x10,
+      0x81, 0xE2, 0x60, 0x00, 0x91, 0xE8, 0x00, 0x00, 0xA0, 0xE3, 0x97, 0x25,
+      0xA0, 0xE0, 0x00, 0x30, 0x93, 0xE0, 0x00, 0x40, 0xA0, 0xE3, 0x98, 0x35,
+      0xA4, 0xE0, 0x00, 0x00, 0xA0, 0xE3, 0x97, 0x36, 0xA0, 0xE0, 0x08, 0xE0,
+      0x8D, 0xE2, 0x0C, 0x00, 0x8E, 0xE8, 0x04, 0x20, 0xB0, 0xE0, 0x01, 0x30,
+      0xA0, 0x23, 0x00, 0x30, 0xA0, 0x33, 0x98, 0x26, 0xA3, 0xE0, 0x10, 0xE0,
+      0x8D, 0xE2, 0x11, 0x00, 0x9E, 0xE8, 0x00, 0x20, 0x92, 0xE0, 0x04, 0x30,
+      0xB3, 0xE0, 0x01, 0xE0, 0xA0, 0x23, 0x00, 0xE0, 0xA0, 0x33, 0x00, 0x00,
+      0xA0, 0xE3, 0x99, 0x25, 0xA0, 0xE0, 0x00, 0x30, 0x93, 0xE0, 0x00, 0x40,
+      0xA0, 0xE3, 0x9A, 0x35, 0xA4, 0xE0, 0x00, 0x00, 0xA0, 0xE3, 0x99, 0x36,
+      0xA0, 0xE0, 0x04, 0x00, 0x2D, 0xE5, 0x14, 0x00, 0x8D, 0xE2, 0x0C, 0x00,
+      0x80, 0xE8, 0x04, 0x00, 0x9D, 0xE4, 0x04, 0x20, 0xB0, 0xE0, 0x01, 0x40,
+      0xA0, 0x23, 0x00, 0x40, 0xA0,
+0x4C, 0xFC, 0xFF, 0xF2, 0x81, 0x08, 0x00, 0x33, 0x0E, 0x20, 0x92, 0xE0, 0x00,
+      0x30, 0xA4, 0xE2, 0x9A, 0x26, 0xA3, 0xE0, 0x18, 0xE0, 0x8D, 0xE2, 0x11,
+      0x00, 0x9E, 0xE8, 0x00, 0x20, 0x92, 0xE0, 0x04, 0x30, 0xB3, 0xE0, 0x01,
+      0xE0, 0xA0, 0x23, 0x00, 0xE0, 0xA0, 0x33, 0x00, 0x00, 0xA0, 0xE3, 0x9B,
+      0x25, 0xA0, 0xE0, 0x00, 0x30, 0x93, 0xE0, 0x00, 0x40, 0xA0, 0xE3, 0x9C,
+      0x35, 0xA4, 0xE0, 0x00, 0x00, 0xA0, 0xE3, 0x9B, 0x36, 0xA0, 0xE0, 0x04,
+      0x00, 0x2D, 0xE5, 0x1C, 0x00, 0x8D, 0xE2, 0x0C, 0x00, 0x80, 0xE8, 0x04,
+      0x00, 0x9D, 0xE4, 0x04, 0x20, 0xB0, 0xE0, 0x01, 0x40, 0xA0, 0x23, 0x00,
+      0x40, 0xA0, 0x33, 0x0E, 0x20, 0x92, 0xE0, 0x00, 0x30, 0xA4, 0xE2, 0x9C,
+      0x26, 0xA3, 0xE0, 0x20, 0xE0, 0x8D, 0xE2, 0x0C, 0x00, 0x8E, 0xE8, 0x10,
+      0xE0, 0x8D, 0xE2, 0x0C, 0x00, 0x9E, 0xE8, 0x08, 0x10, 0x81, 0xE2, 0x60,
+      0x00, 0x91, 0xE8, 0x00, 0x00, 0xA0, 0xE3, 0x97, 0x25, 0xA0, 0xE0, 0x00,
+      0x30, 0x93, 0xE0, 0x00, 0x40, 0xA0, 0xE3, 0x98, 0x35, 0xA4, 0xE0, 0x00,
+      0x00, 0xA0, 0xE3, 0x97, 0x36, 0xA0, 0xE0, 0x10, 0xE0, 0x8D, 0xE2, 0x0C,
+      0x00, 0x8E, 0xE8, 0x04, 0x20, 0xB0, 0xE0, 0x01, 0x30, 0xA0, 0x23, 0x00,
+      0x30, 0xA0, 0x33, 0x98, 0x26, 0xA3, 0xE0, 0x18, 0xE0, 0x8D, 0xE2, 0x11,
+      0x00, 0x9E, 0xE8, 0x00, 0x20, 0x92, 0xE0, 0x04, 0x30, 0xB3, 0xE0, 0x01,
+      0xE0, 0xA0, 0x23, 0x00, 0xE0, 0xA0, 0x33, 0x00, 0x00, 0xA0, 0xE3, 0x99,
+      0x25, 0xA0, 0xE0, 0x00, 0x30, 0x93, 0xE0, 0x00, 0x40, 0xA0, 0xE3, 0x9A,
+      0x35, 0xA4, 0xE0, 0x00, 0x00, 0xA0, 0xE3, 0x99, 0x36, 0xA0, 0xE0, 0x04,
+      0x00, 0x2D, 0xE5, 0x1C, 0x00, 0x8D, 0xE2, 0x0C, 0x00, 0x80, 0xE8, 0x04,
+      0x00, 0x9D, 0xE4, 0x04, 0x20,
+0x4C, 0xFC, 0xFF, 0xED, 0x82, 0x08, 0x00, 0xB0, 0xE0, 0x01, 0x40, 0xA0, 0x23,
+      0x00, 0x40, 0xA0, 0x33, 0x0E, 0x20, 0x92, 0xE0, 0x00, 0x30, 0xA4, 0xE2,
+      0x9A, 0x26, 0xA3, 0xE0, 0x20, 0xE0, 0x8D, 0xE2, 0x11, 0x00, 0x9E, 0xE8,
+      0x00, 0x20, 0x92, 0xE0, 0x04, 0x30, 0xB3, 0xE0, 0x01, 0xE0, 0xA0, 0x23,
+      0x00, 0xE0, 0xA0, 0x33, 0x00, 0x00, 0xA0, 0xE3, 0x9B, 0x25, 0xA0, 0xE0,
+      0x00, 0x30, 0x93, 0xE0, 0x00, 0x40, 0xA0, 0xE3, 0x9C, 0x35, 0xA4, 0xE0,
+      0x00, 0x00, 0xA0, 0xE3, 0x9B, 0x36, 0xA0, 0xE0, 0x04, 0x40, 0xB0, 0xE0,
+      0x01, 0x50, 0xA0, 0x23, 0x00, 0x50, 0xA0, 0x33, 0x0E, 0x40, 0x94, 0xE0,
+      0x00, 0x50, 0xA5, 0xE2, 0x9C, 0x46, 0xA5, 0xE0, 0x05, 0xB0, 0xA0, 0xE1,
+      0x04, 0xA0, 0xA0, 0xE1, 0x03, 0x90, 0xA0, 0xE1, 0x02, 0x80, 0xA0, 0xE1,
+      0xFF, 0x00, 0x9D, 0xE8, 0x00, 0xC0, 0xA0, 0xE3, 0x06, 0x00, 0x90, 0xE0,
+      0x07, 0x10, 0xB1, 0xE0, 0x06, 0x20, 0xB2, 0xE0, 0x07, 0x30, 0xB3, 0xE0,
+      0x00, 0x40, 0xB4, 0xE2, 0x00, 0x50, 0xB5, 0xE2, 0x00, 0xC0, 0xAC, 0xE2,
+      0x08, 0x20, 0x92, 0xE0, 0x09, 0x30, 0xB3, 0xE0, 0x08, 0x40, 0xB4, 0xE0,
+      0x09, 0x50, 0xB5, 0xE0, 0x00, 0xC0, 0xAC, 0xE2, 0x0A, 0x00, 0x90, 0xE0,
+      0x0B, 0x10, 0xB1, 0xE0, 0x0A, 0x20, 0xB2, 0xE0, 0x0B, 0x30, 0xB3, 0xE0,
+      0x0A, 0x40, 0xB4, 0xE0, 0x0B, 0x50, 0xB5, 0xE0, 0x00, 0xC0, 0xAC, 0xE2,
+      0x0C, 0x00, 0x90, 0xE0, 0x00, 0x10, 0xB1, 0xE2, 0x0C, 0x20, 0x92, 0xE0,
+      0x00, 0x30, 0xB3, 0xE2, 0x00, 0x40, 0xB4, 0xE2, 0x00, 0x50, 0xB5, 0xE2,
+      0x09, 0x00, 0x00, 0x2A, 0x05, 0x60, 0x04, 0xE0, 0x03, 0x60, 0x06, 0xE0,
+      0x01, 0x00, 0x76, 0xE3, 0x0B, 0x00, 0x00, 0x3A, 0x02, 0x00, 0x72, 0xE3,
+      0x09, 0x00, 0x00, 0x3A, 0x02,
+0x4C, 0xFC, 0xFF, 0xE8, 0x83, 0x08, 0x00, 0x00, 0x00, 0xCA, 0x00, 0x60, 0x01,
+      0xE0, 0x01, 0x00, 0x76, 0xE3, 0x05, 0x00, 0x00, 0x3A, 0x01, 0x00, 0x90,
+      0xE2, 0x00, 0x10, 0xB1, 0xE2, 0x01, 0x20, 0xB2, 0xE2, 0x00, 0x30, 0xB3,
+      0xE2, 0x00, 0x40, 0xB4, 0xE2, 0x00, 0x50, 0xB5, 0xE2, 0x30, 0xC0, 0x9D,
+      0xE5, 0x3F, 0x00, 0x8C, 0xE8, 0x34, 0xD0, 0x8D, 0xE2, 0xF0, 0x4F, 0xBD,
+      0xE8, 0x1E, 0xFF, 0x2F, 0xE1, 0x08, 0x23, 0x00, 0x38, 0x0C, 0xD2, 0x01,
+      0x00, 0x6F, 0xF0, 0x16, 0xFB, 0x14, 0x00, 0x3C, 0xC8, 0x08, 0x00, 0x28,
+      0x1C, 0x39, 0x1C, 0xFF, 0xF7, 0xD4, 0xFF, 0x01, 0x28, 0x01, 0xD0, 0x90,
+      0xF7, 0x20, 0xFD, 0x90, 0xF7, 0x3F, 0xFE, 0x08, 0x1B, 0x00, 0x39, 0xC4,
+      0x7F, 0x00, 0x00, 0x84, 0xF0, 0x92, 0xFC, 0x0C, 0x00, 0xEC, 0xC8, 0x08,
+      0x00, 0x20, 0x1C, 0xFF, 0xF7, 0xAF, 0xFF, 0x7B, 0xF7, 0x6A, 0xFB, 0x00,
+      0x00, 0x08, 0x0F, 0x00, 0x3A, 0x08, 0xA1, 0x00, 0x00, 0x01, 0x23, 0x00,
+      0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x12, 0x00, 0x58, 0x4C,
+      0x08, 0x00, 0x5C, 0x49, 0x0B, 0x68, 0x03, 0x60, 0x5C, 0x49, 0x0B, 0x68,
+      0x43, 0x60, 0x70, 0x47, 0x0A, 0xB0, 0x00, 0x66, 0x4C, 0x08, 0x00, 0x70,
+      0xB5, 0x88, 0xB0, 0x05, 0x1C, 0x08, 0xF0, 0x16, 0xFD, 0x04, 0x1C, 0x58,
+      0x4E, 0x33, 0x68, 0x06, 0x93, 0x04, 0x3E, 0x33, 0x68, 0x07, 0x93, 0x02,
+      0xA8, 0xFF, 0xF7, 0xEA, 0xFF, 0x20, 0x1C, 0x08, 0xF0, 0x11, 0xFD, 0x04,
+      0xA9, 0x28, 0x1C, 0xA7, 0xF7, 0x7A, 0xFB, 0x04, 0xA8, 0x78, 0xC8, 0x5B,
+      0x19, 0x1A, 0x01, 0x12, 0x09, 0x06, 0x92, 0x31, 0x19, 0x08, 0x1C, 0x03,
+      0xE0, 0x01, 0x32, 0x06, 0x92, 0xC8, 0x1A, 0x01, 0x1C, 0x07, 0x90, 0xFF,
+      0x23, 0x38, 0x33, 0x99, 0x42,
+0x4C, 0xFC, 0xFF, 0xE3, 0x84, 0x08, 0x00, 0xF6, 0xD2, 0x08, 0xF0, 0xF1, 0xFC,
+      0x04, 0x1C, 0x45, 0x49, 0x0B, 0x68, 0x04, 0x93, 0x04, 0x39, 0x0B, 0x68,
+      0x05, 0x93, 0x68, 0x46, 0xFF, 0xF7, 0xC5, 0xFF, 0x00, 0x9B, 0x02, 0x98,
+      0x83, 0x42, 0x03, 0xD1, 0x01, 0x9B, 0x03, 0x98, 0x83, 0x42, 0x09, 0xD0,
+      0x02, 0xAB, 0x00, 0x98, 0x02, 0x90, 0x01, 0x98, 0x03, 0x90, 0x06, 0xA9,
+      0x00, 0x22, 0x10, 0x1C, 0xA7, 0xF7, 0xED, 0xFA, 0x20, 0x1C, 0x08, 0xF0,
+      0xDA, 0xFC, 0x06, 0x99, 0x04, 0x98, 0xA7, 0xF7, 0x55, 0xFA, 0x00, 0x28,
+      0x04, 0xDC, 0xD7, 0xD1, 0x05, 0x9B, 0x07, 0x98, 0x83, 0x42, 0xD3, 0xD3,
+      0x08, 0xB0, 0x70, 0xBD, 0x08, 0x17, 0x00, 0x3B, 0xF0, 0xC5, 0x02, 0x00,
+      0x60, 0xF0, 0x26, 0xFA, 0x08, 0x00, 0x40, 0xCA, 0x08, 0x00, 0xF8, 0xF7,
+      0x11, 0xF9, 0x9F, 0xF7, 0x07, 0xFE, 0x0A, 0x80, 0x00, 0x3E, 0x4D, 0x08,
+      0x00, 0x30, 0xB5, 0x82, 0xB0, 0x04, 0x1C, 0x24, 0x49, 0x0B, 0x7E, 0x00,
+      0x2B, 0x34, 0xD1, 0x23, 0x49, 0x0B, 0x68, 0x30, 0x20, 0x03, 0x40, 0x1D,
+      0x09, 0xA3, 0x7B, 0xAB, 0x42, 0x2C, 0xD0, 0x20, 0x49, 0x0B, 0x68, 0xFE,
+      0x20, 0x03, 0x40, 0x00, 0xD0, 0x01, 0x23, 0x00, 0x2B, 0x21, 0xD1, 0x1D,
+      0x49, 0x0B, 0x68, 0x9B, 0x06, 0x1D, 0xD4, 0x99, 0xF7, 0x11, 0xFB, 0x00,
+      0x28, 0x19, 0xD1, 0x69, 0x46, 0x28, 0x1C, 0xA7, 0xF7, 0x1C, 0xFB, 0x68,
+      0x46, 0xFF, 0xF7, 0xC4, 0xFF, 0x28, 0x1C, 0xA7, 0xF7, 0x5A, 0xFB, 0xA0,
+      0x7B, 0xA7, 0xF7, 0x65, 0xFB, 0x14, 0x48, 0x00, 0x23, 0x83, 0x62, 0xC3,
+      0x62, 0x00, 0x9B, 0x9B, 0x08, 0x9B, 0x00, 0x01, 0x6B, 0x59, 0x18, 0x0B,
+      0x01, 0x1B, 0x09, 0x03, 0x63, 0x02, 0xE0, 0xA0, 0x7B, 0xA7, 0xF7, 0x55,
+      0xFB, 0x02, 0xB0, 0x30, 0xBD,
+0x4C, 0xFC, 0xFF, 0xDE, 0x85, 0x08, 0x00, 0x0A, 0x30, 0x00, 0x12, 0x4D, 0x08,
+      0x00, 0x30, 0xB5, 0x2D, 0x4C, 0x02, 0x68, 0x23, 0x68, 0x9A, 0x42, 0x04,
+      0xD1, 0x41, 0x68, 0x2B, 0x4D, 0x2B, 0x68, 0x99, 0x42, 0x02, 0xD0, 0x22,
+      0x60, 0x40, 0x68, 0x04, 0xE0, 0x22, 0x60, 0x01, 0x20, 0x00, 0x29, 0x00,
+      0xD0, 0x48, 0x1E, 0x25, 0x49, 0x08, 0x60, 0x30, 0xBD, 0x08, 0x19, 0x00,
+      0x3C, 0xAC, 0x6C, 0x00, 0x00, 0x85, 0xF0, 0xCC, 0xFE, 0x0A, 0x00, 0x48,
+      0xCA, 0x08, 0x00, 0xF8, 0xF7, 0x79, 0xF9, 0x02, 0xB0, 0x7A, 0xF7, 0x62,
+      0xF9, 0x0A, 0x36, 0x00, 0xBA, 0x4D, 0x08, 0x00, 0x10, 0xB5, 0x0C, 0x1C,
+      0xA7, 0xF7, 0x5D, 0xFB, 0x20, 0x1C, 0xFF, 0xF7, 0xA5, 0xFF, 0x10, 0xBD,
+      0xC0, 0x46, 0xBC, 0xD7, 0x08, 0x00, 0xC0, 0xD7, 0x08, 0x00, 0x88, 0x80,
+      0x0E, 0x00, 0x08, 0x2E, 0x08, 0x00, 0xB4, 0x85, 0x0E, 0x00, 0x6C, 0x0D,
+      0x08, 0x00, 0x08, 0x80, 0x0E, 0x00, 0xE4, 0x25, 0x08, 0x00, 0x08, 0x19,
+      0x00, 0x3D, 0x64, 0xC7, 0x01, 0x00, 0x70, 0xF0, 0x75, 0xF9, 0x0A, 0x00,
+      0x52, 0xCA, 0x08, 0x00, 0xF8, 0xF7, 0xB2, 0xF9, 0x8F, 0xF7, 0x87, 0xFE,
+      0x00, 0x00, 0x08, 0x23, 0x00, 0x3E, 0xDC, 0xAA, 0x00, 0x00, 0x81, 0xF0,
+      0xD2, 0xFF, 0x14, 0x00, 0x84, 0xCA, 0x08, 0x00, 0x20, 0x1C, 0xFF, 0xF7,
+      0xE9, 0xFF, 0x00, 0x28, 0x01, 0xD0, 0x7E, 0xF7, 0x27, 0xF8, 0x7E, 0xF7,
+      0x3A, 0xF8, 0x00, 0x00, 0x08, 0x1D, 0x00, 0x3F, 0x78, 0xE1, 0x00, 0x00,
+      0x7E, 0xF0, 0xA5, 0xFC, 0x0E, 0x00, 0xC6, 0xCA, 0x08, 0x00, 0x20, 0x1C,
+      0xFF, 0xF7, 0xEE, 0xFF, 0x02, 0x1C, 0x81, 0xF7, 0x64, 0xFB, 0x00, 0x00,
+      0x08, 0x19, 0x00, 0x40, 0xC0, 0x49, 0x01, 0x00, 0x78, 0xF0, 0xBD, 0xF8,
+      0x0A, 0x00, 0x3E, 0xCB, 0x08,
+0x4C, 0xFC, 0xFF, 0xD9, 0x86, 0x08, 0x00, 0x00, 0x20, 0x1C, 0x00, 0xF0, 0x02,
+      0xF8, 0x87, 0xF7, 0x4D, 0xFF, 0x08, 0x29, 0x00, 0x41, 0xD8, 0xBD, 0x00,
+      0x00, 0x80, 0xF0, 0xA4, 0xFE, 0x1A, 0x00, 0x24, 0xCB, 0x08, 0x00, 0x20,
+      0x1C, 0x31, 0x1C, 0xFF, 0xF7, 0xD4, 0xFF, 0x00, 0x28, 0x01, 0xD0, 0x7F,
+      0xF7, 0x5F, 0xF9, 0x02, 0x23, 0x63, 0x72, 0xA3, 0x7F, 0x7F, 0xF7, 0x4F,
+      0xF9, 0x08, 0x0F, 0x00, 0x42, 0xE0, 0x44, 0x02, 0x00, 0x04, 0xE0, 0x00,
+      0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x0F, 0x00, 0x43, 0xDC,
+      0x5D, 0x00, 0x00, 0xFB, 0xD4, 0x03, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x08, 0x0F, 0x00, 0x44, 0xF0, 0x5E, 0x00, 0x00, 0x01, 0x23, 0x22,
+      0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x0F, 0x00, 0x45, 0x00,
+      0x5F, 0x00, 0x00, 0x00, 0x21, 0x26, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x08, 0x0F, 0x00, 0x46, 0x10, 0x5F, 0x00, 0x00, 0x30, 0xBD, 0x00,
+      0xB5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x17, 0x00, 0x47, 0x14,
+      0x5F, 0x00, 0x00, 0x86, 0xF0, 0x92, 0xFE, 0x08, 0x00, 0x3C, 0xCC, 0x08,
+      0x00, 0x00, 0xF0, 0x02, 0xF8, 0x00, 0xBD, 0x00, 0x00, 0x08, 0x2B, 0x00,
+      0x48, 0x3C, 0x5F, 0x00, 0x00, 0x86, 0xF0, 0x9A, 0xFE, 0x1C, 0x00, 0x74,
+      0xCC, 0x08, 0x00, 0x8B, 0x07, 0xD8, 0x0E, 0x06, 0x23, 0x03, 0x43, 0x02,
+      0x4C, 0x23, 0x60, 0x02, 0x48, 0x79, 0xF7, 0x5E, 0xF9, 0xC0, 0x46, 0x98,
+      0x8A, 0x0E, 0x00, 0x00, 0x2D, 0x08, 0x00, 0x08, 0x2B, 0x00, 0x49, 0x60,
+      0x5F, 0x00, 0x00, 0x86, 0xF0, 0x96, 0xFE, 0x1C, 0x00, 0x90, 0xCC, 0x08,
+      0x00, 0x93, 0x07, 0xD8, 0x0E, 0x06, 0x23, 0x03, 0x43, 0x02, 0x4C, 0x23,
+      0x60, 0x02, 0x48, 0x79, 0xF7,
+0x4C, 0xFC, 0xFF, 0xD4, 0x87, 0x08, 0x00, 0x62, 0xF9, 0xC0, 0x46, 0x98, 0x8A,
+      0x0E, 0x00, 0x00, 0x2D, 0x08, 0x00, 0x08, 0x1B, 0x00, 0x4A, 0xAC, 0xB9,
+      0x01, 0x00, 0x71, 0xF0, 0x7E, 0xF9, 0x0C, 0x00, 0xAC, 0xCC, 0x08, 0x00,
+      0xB3, 0x70, 0x28, 0x1C, 0x00, 0xF0, 0x02, 0xF8, 0x8E, 0xF7, 0xD2, 0xFE,
+      0x08, 0x0F, 0x00, 0x4B, 0xC8, 0x92, 0x01, 0x00, 0x00, 0xB5, 0xC0, 0x46,
+      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x23, 0x00, 0x4C, 0xCC, 0x92,
+      0x01, 0x00, 0x73, 0xF0, 0xAC, 0xFD, 0x14, 0x00, 0x28, 0xCE, 0x08, 0x00,
+      0x00, 0x23, 0x1E, 0x49, 0x1E, 0x4A, 0x0B, 0x70, 0x13, 0x70, 0x1E, 0x48,
+      0x03, 0x60, 0x1E, 0x48, 0x03, 0x60, 0x00, 0xBD, 0x08, 0x21, 0x00, 0x4D,
+      0xE0, 0x92, 0x01, 0x00, 0x73, 0xF0, 0xAC, 0xFD, 0x12, 0x00, 0x3C, 0xCE,
+      0x08, 0x00, 0x19, 0x4B, 0x1B, 0x78, 0x01, 0x93, 0x00, 0x2B, 0x01, 0xD1,
+      0x8C, 0xF7, 0x50, 0xFA, 0x8C, 0xF7, 0x89, 0xFA, 0x08, 0x17, 0x00, 0x4E,
+      0xF0, 0x93, 0x01, 0x00, 0x73, 0xF0, 0x2D, 0xFD, 0x08, 0x00, 0x4E, 0xCE,
+      0x08, 0x00, 0x15, 0x48, 0x01, 0x70, 0x8C, 0xF7, 0xCF, 0xFA, 0x08, 0x0F,
+      0x00, 0x4F, 0xF8, 0x93, 0x01, 0x00, 0xC0, 0x46, 0x00, 0xB5, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x00, 0x08, 0x15, 0x00, 0x50, 0xFC, 0x93, 0x01, 0x00,
+      0x73, 0xF0, 0x2B, 0xFD, 0x06, 0x00, 0x56, 0xCE, 0x08, 0x00, 0x00, 0xF0,
+      0x33, 0xF8, 0x00, 0xBD, 0x08, 0x37, 0x00, 0x51, 0x00, 0x38, 0x00, 0x00,
+      0x89, 0xF0, 0x2C, 0xFB, 0x28, 0x00, 0x5C, 0xCE, 0x08, 0x00, 0x38, 0x1C,
+      0xFF, 0xF7, 0xCA, 0xFF, 0x00, 0x28, 0x08, 0xD1, 0x68, 0x69, 0x4E, 0x23,
+      0xC1, 0x5E, 0x75, 0xF7, 0x79, 0xFE, 0x10, 0x48, 0x62, 0x21, 0x40, 0x18,
+      0x87, 0x46, 0x04, 0x1C, 0xFB,
+0x4C, 0xFC, 0xFF, 0xCF, 0x88, 0x08, 0x00, 0x00, 0x0E, 0x48, 0x1E, 0x18, 0x76,
+      0xF7, 0xD3, 0xFC, 0x08, 0x4B, 0x00, 0x52, 0x70, 0x38, 0x00, 0x00, 0x89,
+      0xF0, 0x08, 0xFB, 0x3C, 0x00, 0x84, 0xCE, 0x08, 0x00, 0x01, 0xB4, 0x38,
+      0x1C, 0xFF, 0xF7, 0xA4, 0xFF, 0x00, 0x28, 0x06, 0xD0, 0xFB, 0x00, 0x0A,
+      0x49, 0x5D, 0x18, 0x04, 0x1C, 0x01, 0xBC, 0x76, 0xF7, 0xF4, 0xFC, 0x01,
+      0xBC, 0x76, 0xF7, 0x29, 0xFD, 0x8F, 0xD8, 0x08, 0x00, 0x8E, 0xD8, 0x08,
+      0x00, 0x00, 0x0E, 0x0E, 0x00, 0x2C, 0x0E, 0x0E, 0x00, 0xF7, 0x37, 0x00,
+      0x00, 0x08, 0x0E, 0x0E, 0x00, 0x04, 0x0E, 0x0E, 0x00, 0x08, 0x17, 0x00,
+      0x53, 0x64, 0x2B, 0x00, 0x00, 0x8A, 0xF0, 0xD0, 0xF9, 0x08, 0x00, 0x08,
+      0xCF, 0x08, 0x00, 0x00, 0xF0, 0x02, 0xF8, 0x30, 0xBD, 0x00, 0x00, 0x08,
+      0x29, 0x00, 0x54, 0xC8, 0xBD, 0x00, 0x00, 0x81, 0xF0, 0xD3, 0xF8, 0x1A,
+      0x00, 0x72, 0xCF, 0x08, 0x00, 0x02, 0xB4, 0x20, 0x1C, 0x00, 0xF0, 0x09,
+      0xF8, 0x02, 0xBC, 0x01, 0x28, 0x01, 0xD0, 0x7E, 0xF7, 0x29, 0xFF, 0x08,
+      0x68, 0x43, 0x69, 0x7E, 0xF7, 0x20, 0xFF, 0x08, 0x29, 0x00, 0x55, 0x98,
+      0x24, 0x00, 0x00, 0x8A, 0xF0, 0x80, 0xFD, 0x1A, 0x00, 0x9C, 0xCF, 0x08,
+      0x00, 0x27, 0x1D, 0x21, 0x1C, 0xD2, 0x31, 0x08, 0x88, 0x76, 0xF7, 0x3F,
+      0xFB, 0x00, 0x28, 0x02, 0xD0, 0x20, 0x1C, 0x75, 0xF7, 0xEB, 0xFB, 0x75,
+      0xF7, 0x82, 0xFA, 0x08, 0x33, 0x00, 0x56, 0x80, 0x25, 0x00, 0x00, 0x8A,
+      0xF0, 0x19, 0xFD, 0x24, 0x00, 0xB6, 0xCF, 0x08, 0x00, 0x28, 0x06, 0x00,
+      0x0E, 0x8A, 0xF7, 0x3E, 0xF9, 0x28, 0x1C, 0x8B, 0xF7, 0xB0, 0xFF, 0x03,
+      0x98, 0xC0, 0x6A, 0xC0, 0x07, 0xC0, 0x0F, 0x04, 0x90, 0xB8, 0x6A, 0xC0,
+      0x07, 0xC0, 0x0F, 0x05, 0x90,
+0x4C, 0xFC, 0xFF, 0xCA, 0x89, 0x08, 0x00, 0x75, 0xF7, 0xEB, 0xFA, 0x08, 0x19,
+      0x00, 0x57, 0x0C, 0x27, 0x00, 0x00, 0x8A, 0xF0, 0x65, 0xFC, 0x0A, 0x00,
+      0xDA, 0xCF, 0x08, 0x00, 0x20, 0x1C, 0x00, 0xF0, 0x20, 0xF8, 0x75, 0xF7,
+      0xB2, 0xFB, 0x08, 0x19, 0x00, 0x58, 0xB4, 0x27, 0x00, 0x00, 0x8A, 0xF0,
+      0x16, 0xFC, 0x0A, 0x00, 0xE4, 0xCF, 0x08, 0x00, 0xB4, 0x3C, 0x20, 0x1C,
+      0x00, 0xF0, 0x45, 0xF8, 0x30, 0xBD, 0x08, 0x29, 0x00, 0x59, 0x0C, 0x92,
+      0x02, 0x00, 0x63, 0xF0, 0xEF, 0xFE, 0x1A, 0x00, 0xEE, 0xCF, 0x08, 0x00,
+      0x4B, 0x59, 0xDB, 0x04, 0x07, 0xD5, 0xE4, 0x21, 0x4B, 0x59, 0xDB, 0x04,
+      0xDB, 0x0E, 0x07, 0x2B, 0x01, 0xD3, 0x9C, 0xF7, 0x07, 0xF9, 0x9C, 0xF7,
+      0x1C, 0xF9, 0x08, 0x27, 0x00, 0x5A, 0xAC, 0x92, 0x02, 0x00, 0x63, 0xF0,
+      0xAC, 0xFE, 0x18, 0x00, 0x08, 0xD0, 0x08, 0x00, 0x08, 0xD5, 0x14, 0x31,
+      0x0B, 0x68, 0xDB, 0x04, 0xDB, 0x0E, 0x07, 0x2B, 0x02, 0xD3, 0xD2, 0x30,
+      0x9C, 0xF7, 0x4A, 0xF9, 0x9C, 0xF7, 0xAE, 0xF9, 0x08, 0x1F, 0x00, 0x5B,
+      0x40, 0x93, 0x00, 0x00, 0x83, 0xF0, 0xAE, 0xFE, 0x10, 0x00, 0xA0, 0xD0,
+      0x08, 0x00, 0x31, 0x1C, 0x00, 0x29, 0x00, 0xD0, 0x01, 0x21, 0x69, 0x74,
+      0x29, 0x1C, 0x7C, 0xF7, 0x4A, 0xF9, 0x58, 0x01, 0x00, 0x0F, 0x0A, 0x05,
+      0x00, 0xBF, 0x03, 0x08, 0x00, 0x84, 0x08, 0x1F, 0x00, 0x5C, 0xCC, 0xCD,
+      0x00, 0x00, 0x80, 0xF0, 0x96, 0xF9, 0x10, 0x00, 0xFC, 0xD0, 0x08, 0x00,
+      0xAB, 0x70, 0x20, 0x1C, 0x00, 0xF0, 0x04, 0xF8, 0x00, 0x9A, 0x7F, 0xF7,
+      0x63, 0xFE, 0x00, 0x00, 0x08, 0x0F, 0x00, 0x5D, 0x18, 0xFB, 0x00, 0x00,
+      0x4A, 0x78, 0x00, 0xB5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3B,
+      0x00, 0x5E, 0x1C, 0xFB, 0x00,
+0x4C, 0xFC, 0xD0, 0xC5, 0x8A, 0x08, 0x00, 0x00, 0x7D, 0xF0, 0x28, 0xFB, 0x2C,
+      0x00, 0x70, 0xD1, 0x08, 0x00, 0x08, 0xBC, 0x9E, 0x46, 0x20, 0x2A, 0x01,
+      0xD1, 0x05, 0x48, 0x70, 0x47, 0x1F, 0x2A, 0x01, 0xD1, 0x04, 0x48, 0x70,
+      0x47, 0x02, 0xD2, 0x04, 0x48, 0xD3, 0x00, 0x18, 0x18, 0x70, 0x47, 0xC0,
+      0x46, 0x1C, 0xD7, 0x08, 0x00, 0x14, 0xD7, 0x08, 0x00, 0x2C, 0xD2, 0x03,
+      0x00, 0x0A, 0x0A, 0x00, 0x86, 0xD8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x0A, 0x0A, 0x00, 0x80, 0xD8, 0x08, 0x00, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x08, 0x1F, 0x00, 0x5F, 0x6C, 0x0E, 0x01, 0x00, 0x7C,
+      0xF0, 0xB2, 0xFA, 0x10, 0x00, 0xD4, 0xD3, 0x08, 0x00, 0x03, 0xD3, 0x00,
+      0x23, 0x0B, 0x70, 0x89, 0xF7, 0x49, 0xFF, 0x00, 0xF0, 0x01, 0xF8, 0x30,
+      0xBD, 0x0A, 0x05, 0x00, 0x90, 0xD8, 0x08, 0x00, 0x0C, 0x08, 0x0F, 0x00,
+      0x60, 0xA4, 0x40, 0x02, 0x00, 0x69, 0xF0, 0x64, 0xFA, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x00, 0x41, 0x39, 0x00, 0x42, 0x43, 0x4D, 0x34, 0x33, 0x32,
+      0x39, 0x42, 0x31, 0x20, 0x33, 0x38, 0x2E, 0x34, 0x20, 0x4D, 0x48, 0x7A,
+      0x20, 0x43, 0x6C, 0x61, 0x73, 0x73, 0x20, 0x31, 0x2E, 0x35, 0x20, 0x4C,
+      0x47, 0x45, 0x20, 0x62, 0x75, 0x69, 0x6C, 0x64, 0x20, 0x66, 0x6F, 0x72,
+      0x20, 0x62, 0x72, 0x69, 0x6E, 0x67, 0x75, 0x70, 0x20, 0x62, 0x6F, 0x61,
+      0x72, 0x64, 0x00, 0xFE, 0x00, 0x00,
+0x4C, 0xFC, 0xFF, 0xE4, 0xAB, 0x08, 0x00, 0x00, 0xB5, 0x33, 0x4A, 0x53, 0x68,
+      0x19, 0x7B, 0x09, 0x06, 0x49, 0x0E, 0x0B, 0x29, 0x02, 0xD1, 0x01, 0xF0,
+      0x0A, 0xFB, 0x10, 0xE0, 0x26, 0x29, 0x02, 0xD1, 0x00, 0xF0, 0x5D, 0xFD,
+      0x08, 0xE0, 0x21, 0x29, 0x02, 0xD1, 0x02, 0xF0, 0xD3, 0xFA, 0x03, 0xE0,
+      0x22, 0x29, 0x03, 0xD1, 0x02, 0xF0, 0xD6, 0xFA, 0x01, 0x20, 0x00, 0xE0,
+      0x00, 0x20, 0x08, 0xBC, 0x18, 0x47, 0x00, 0x00, 0x70, 0xB5, 0x24, 0x4B,
+      0x25, 0x49, 0x0B, 0x60, 0x25, 0x4C, 0x25, 0x4B, 0xA3, 0x63, 0xDC, 0x34,
+      0x01, 0x21, 0x24, 0x4B, 0x0B, 0x43, 0x23, 0x60, 0x24, 0x49, 0x0B, 0x68,
+      0x5B, 0x04, 0x01, 0xD5, 0x00, 0xF0, 0x64, 0xFA, 0x22, 0x48, 0x22, 0x49,
+      0x23, 0x4A, 0x60, 0x67, 0xA1, 0x67, 0x22, 0x48, 0x42, 0x61, 0x22, 0x49,
+      0x23, 0x4B, 0x4B, 0x61, 0x23, 0x48, 0x23, 0x4B, 0x43, 0x61, 0x23, 0x4E,
+      0x24, 0x4B, 0x73, 0x61, 0x24, 0x4B, 0x8B, 0x60, 0x24, 0x4B, 0x0B, 0x60,
+      0x24, 0x4B, 0x24, 0x49, 0x0B, 0x61, 0x24, 0x4D, 0x25, 0x4B, 0x2B, 0x61,
+      0x25, 0x4C, 0x25, 0x4B, 0x23, 0x61, 0x25, 0x4B, 0x83, 0x61, 0x25, 0x4B,
+      0xC3, 0x61, 0x25, 0x4B, 0x43, 0x60, 0x00, 0xF0, 0x66, 0xFE, 0x24, 0x48,
+      0x03, 0x78, 0x02, 0x21, 0x0B, 0x43, 0x03, 0x70, 0x23, 0x4B, 0xF3, 0x61,
+      0x23, 0x4B, 0xA3, 0x60, 0x00, 0x23, 0x22, 0x48, 0x03, 0x60, 0x22, 0x48,
+      0x03, 0x60, 0x22, 0x4B, 0x6B, 0x61, 0x70, 0xBD, 0xC0, 0x46, 0x84, 0x3F,
+      0x08, 0x00, 0xE5, 0xAB, 0x08, 0x00, 0xC4, 0x0E, 0x08, 0x00, 0x24, 0x1B,
+      0x08, 0x00, 0x2D, 0xAE, 0x08, 0x00, 0x6C, 0xB2, 0x08, 0x00, 0x5C, 0x08,
+      0x08, 0x00, 0x65, 0xB3, 0x08, 0x00, 0x89, 0xB3, 0x08, 0x00, 0x55, 0xB4,
+      0x08, 0x00, 0x1C, 0x02, 0x08,
+0x4C, 0xFC, 0xFF, 0xDF, 0xAC, 0x08, 0x00, 0x00, 0x48, 0x02, 0x08, 0x00, 0x6D,
+      0xB4, 0x08, 0x00, 0xE0, 0x04, 0x08, 0x00, 0x85, 0xB4, 0x08, 0x00, 0xA4,
+      0x04, 0x08, 0x00, 0x9D, 0xB4, 0x08, 0x00, 0x91, 0xB7, 0x08, 0x00, 0xC3,
+      0xB7, 0x08, 0x00, 0x8B, 0xB5, 0x08, 0x00, 0x54, 0x01, 0x08, 0x00, 0x6C,
+      0x03, 0x08, 0x00, 0xC1, 0xB5, 0x08, 0x00, 0xB0, 0x02, 0x08, 0x00, 0xFD,
+      0xB5, 0x08, 0x00, 0xF1, 0xAE, 0x08, 0x00, 0xB1, 0xAF, 0x08, 0x00, 0x17,
+      0xB0, 0x08, 0x00, 0xA8, 0x03, 0x08, 0x00, 0x49, 0xC1, 0x08, 0x00, 0xF9,
+      0xC8, 0x08, 0x00, 0xBC, 0xD7, 0x08, 0x00, 0xC0, 0xD7, 0x08, 0x00, 0x75,
+      0xCB, 0x08, 0x00, 0x70, 0xB5, 0x0F, 0x49, 0x0F, 0x4B, 0x0B, 0x61, 0x00,
+      0x20, 0x0F, 0x4C, 0xC3, 0x00, 0xE3, 0x58, 0x5A, 0x09, 0x92, 0x00, 0xDB,
+      0x06, 0xDB, 0x0E, 0x01, 0x25, 0x9D, 0x40, 0x8B, 0x58, 0x2B, 0x43, 0x8B,
+      0x50, 0x0B, 0x69, 0x42, 0x00, 0xC5, 0x00, 0x64, 0x19, 0x64, 0x68, 0x01,
+      0x26, 0x34, 0x43, 0x47, 0x25, 0x6D, 0x03, 0x2C, 0x1B, 0x9C, 0x52, 0x01,
+      0x30, 0x08, 0x28, 0xE5, 0xDB, 0x70, 0xBD, 0xA4, 0x1C, 0x08, 0x00, 0x70,
+      0xD8, 0x08, 0x00, 0xBC, 0xD6, 0x08, 0x00, 0x10, 0xB5, 0x82, 0x78, 0x12,
+      0x02, 0x43, 0x78, 0x13, 0x43, 0x9A, 0x05, 0x92, 0x0D, 0x3F, 0x24, 0xA4,
+      0x02, 0x23, 0x40, 0x1B, 0x12, 0x0C, 0x2B, 0x0A, 0xD1, 0x5F, 0x2A, 0x02,
+      0xD0, 0x68, 0x2A, 0x03, 0xD0, 0x1B, 0xE0, 0x00, 0xF0, 0x30, 0xFB, 0x16,
+      0xE0, 0x02, 0xF0, 0x23, 0xFC, 0x13, 0xE0, 0xFC, 0x2B, 0x04, 0xD1, 0xA4,
+      0x2A, 0x11, 0xD1, 0x02, 0xF0, 0x48, 0xFC, 0x0C, 0xE0, 0x14, 0x2B, 0x04,
+      0xD1, 0x08, 0x2A, 0x0A, 0xD1, 0x01, 0xF0, 0x29, 0xF9, 0x05, 0xE0, 0x10,
+      0x2B, 0x05, 0xD1, 0x02, 0x2A,
+0x4C, 0xFC, 0xFF, 0xDA, 0xAD, 0x08, 0x00, 0x03, 0xD1, 0x01, 0xF0, 0x56, 0xF9,
+      0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x10, 0xBC, 0x08, 0xBC, 0x18, 0x47,
+      0x01, 0x48, 0x02, 0x49, 0x08, 0x60, 0x70, 0x47, 0x89, 0xAD, 0x08, 0x00,
+      0x4C, 0x13, 0x08, 0x00, 0x00, 0xB5, 0xA0, 0x23, 0x1A, 0x58, 0x12, 0x04,
+      0xD2, 0x0E, 0x01, 0xD0, 0x05, 0x2A, 0x09, 0xD1, 0x09, 0x29, 0x07, 0xD1,
+      0x05, 0x49, 0x0A, 0x68, 0x18, 0x21, 0x00, 0x23, 0x84, 0xF7, 0xFC, 0xFD,
+      0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x08, 0xBC, 0x18, 0x47, 0x00, 0x00,
+      0x5C, 0x40, 0x08, 0x00, 0xF0, 0xB5, 0x81, 0xB0, 0xA6, 0xF7, 0x14, 0xF9,
+      0x00, 0x28, 0x52, 0xD0, 0xC9, 0x20, 0xA2, 0xF7, 0xE7, 0xFF, 0x05, 0x1C,
+      0xCA, 0x20, 0xA2, 0xF7, 0xE3, 0xFF, 0x00, 0x90, 0xCB, 0x20, 0xA2, 0xF7,
+      0xDF, 0xFF, 0x06, 0x1C, 0xCD, 0x20, 0xA2, 0xF7, 0xDB, 0xFF, 0x07, 0x1C,
+      0x99, 0x20, 0xA2, 0xF7, 0xD7, 0xFF, 0x04, 0x1C, 0x49, 0x20, 0x00, 0x21,
+      0xA2, 0xF7, 0xC4, 0xFF, 0x4A, 0x20, 0x00, 0x21, 0xA2, 0xF7, 0xC0, 0xFF,
+      0x20, 0x21, 0x4B, 0x20, 0xA2, 0xF7, 0xBC, 0xFF, 0x34, 0x21, 0x4D, 0x20,
+      0xA2, 0xF7, 0xB8, 0xFF, 0x41, 0x20, 0x00, 0x21, 0xA2, 0xF7, 0xB4, 0xFF,
+      0x6E, 0x21, 0x19, 0x20, 0xA2, 0xF7, 0xB0, 0xFF, 0x28, 0x21, 0x47, 0x20,
+      0xA2, 0xF7, 0xAC, 0xFF, 0x28, 0x21, 0x46, 0x20, 0xA2, 0xF7, 0xA8, 0xFF,
+      0xC1, 0x20, 0xA2, 0xF7, 0xB3, 0xFF, 0x46, 0x20, 0x00, 0x21, 0xA2, 0xF7,
+      0xA1, 0xFF, 0x47, 0x20, 0x00, 0x21, 0xA2, 0xF7, 0x9D, 0xFF, 0x29, 0x1C,
+      0x49, 0x20, 0xA2, 0xF7, 0x99, 0xFF, 0x00, 0x99, 0x4A, 0x20, 0xA2, 0xF7,
+      0x95, 0xFF, 0x31, 0x1C, 0x4B, 0x20, 0xA2, 0xF7, 0x91, 0xFF, 0x39, 0x1C,
+      0x4D, 0x20, 0xA2, 0xF7, 0x8D,
+0x4C, 0xFC, 0xFF, 0xD5, 0xAE, 0x08, 0x00, 0xFF, 0x21, 0x1C, 0x19, 0x20, 0xA2,
+      0xF7, 0x89, 0xFF, 0xA6, 0xF7, 0xCB, 0xFF, 0xA1, 0xF7, 0x73, 0xFC, 0x01,
+      0xB0, 0xF0, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0x00, 0x00, 0xF0, 0xB5, 0x81,
+      0xB0, 0x00, 0x25, 0x04, 0x1C, 0xE5, 0x64, 0x7B, 0xF7, 0x21, 0xFB, 0x00,
+      0x28, 0x29, 0xD1, 0x26, 0x1C, 0x50, 0x36, 0x30, 0x78, 0x93, 0xF7, 0x14,
+      0xFD, 0x27, 0x1C, 0x28, 0x37, 0x38, 0x1C, 0x81, 0xF7, 0x4C, 0xF8, 0xA0,
+      0x7B, 0x45, 0x49, 0x08, 0x60, 0x4B, 0x68, 0x80, 0x21, 0x8B, 0x43, 0x44,
+      0x49, 0x0B, 0x60, 0x3B, 0x7B, 0x43, 0x49, 0x0B, 0x60, 0x39, 0x1C, 0x7B,
+      0xF7, 0xE3, 0xFB, 0x42, 0x48, 0x43, 0x8B, 0x00, 0x93, 0x41, 0x4B, 0x3A,
+      0x7A, 0x31, 0x78, 0x20, 0x1C, 0x91, 0xF7, 0x38, 0xFC, 0x20, 0x1C, 0x02,
+      0x21, 0x90, 0xF7, 0x8C, 0xFF, 0xFF, 0x21, 0x40, 0x20, 0x83, 0xF7, 0xFB,
+      0xFE, 0x23, 0xE0, 0xA3, 0x6C, 0x00, 0x2B, 0x04, 0xD0, 0x65, 0x74, 0x20,
+      0x1C, 0x7B, 0xF7, 0x45, 0xFE, 0x1B, 0xE0, 0x37, 0x48, 0x03, 0x78, 0x00,
+      0x2B, 0x04, 0xD1, 0x26, 0x1C, 0x50, 0x36, 0x73, 0x78, 0x00, 0x2B, 0x03,
+      0xD0, 0x20, 0x1C, 0x90, 0xF7, 0x83, 0xFF, 0x0E, 0xE0, 0xB3, 0x78, 0x00,
+      0x2B, 0x07, 0xD0, 0xF3, 0x78, 0x00, 0x2B, 0x04, 0xD1, 0x01, 0x23, 0xF3,
+      0x70, 0x20, 0x1C, 0x00, 0x21, 0x01, 0xE0, 0x20, 0x1C, 0x02, 0x21, 0x90,
+      0xF7, 0x63, 0xFF, 0x29, 0x49, 0x0D, 0x70, 0x01, 0x20, 0x96, 0xF7, 0xD2,
+      0xFF, 0x01, 0xB0, 0xF0, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0x70, 0xB5, 0x06,
+      0x1C, 0x01, 0x25, 0x34, 0x1C, 0x23, 0x48, 0x03, 0x68, 0x9B, 0x07, 0x22,
+      0xD5, 0x20, 0x48, 0x05, 0x70, 0x20, 0x48, 0x03, 0x68, 0x9B, 0x07, 0x0C,
+      0xD5, 0x1F, 0x48, 0x03, 0x68,
+0x4C, 0xFC, 0x90, 0xD0, 0xAF, 0x08, 0x00, 0x00, 0x2B, 0x00, 0xD0, 0x01, 0x23,
+      0x00, 0x2B, 0x03, 0xD0, 0x24, 0x23, 0x1D, 0x54, 0x7B, 0xF7, 0x06, 0xFE,
+      0x24, 0x23, 0x1D, 0x55, 0x1A, 0x4B, 0xA0, 0x7B, 0x19, 0x5C, 0x13, 0x20,
+      0x03, 0x29, 0x00, 0xD2, 0x1B, 0x20, 0x20, 0x74, 0x55, 0x23, 0x18, 0x5D,
+      0x00, 0x28, 0x03, 0xD0, 0x15, 0x48, 0x03, 0x68, 0x15, 0x48, 0x03, 0x60,
+      0x00, 0x23, 0xA3, 0x81, 0x30, 0x1C, 0x92, 0xF7, 0x61, 0xFA, 0x70, 0xBC,
+      0x08, 0xBC, 0x18, 0x47, 0x00, 0xB5, 0xC3, 0x6C, 0x00, 0x2B, 0x04, 0xDC,
+      0x83, 0x6C, 0x00, 0x2B, 0x01, 0xD1, 0xFF, 0xF7, 0x64, 0xFF, 0x08, 0xBC,
+      0x18, 0x47, 0x00, 0x00, 0xC0, 0x46, 0x64, 0x82, 0x0E, 0x00, 0x68, 0x82,
+      0x0E, 0x00, 0x84, 0x82, 0x0E, 0x00, 0xA0, 0x1E, 0x08, 0x00, 0x17, 0xC2,
+      0x01, 0x00, 0xB8, 0xD7, 0x08, 0x00, 0xAC, 0x8A, 0x0E, 0x00, 0xC4, 0x49,
+      0x08, 0x00, 0x64, 0x04, 0x08, 0x00, 0xD0, 0x04, 0x08, 0x00, 0x28, 0xFC,
+      0x0E, 0x00,
+0x4C, 0xFC, 0xFF, 0x94, 0xB0, 0x08, 0x00, 0x0F, 0x49, 0x0B, 0x78, 0x00, 0x2B,
+      0x16, 0xD0, 0x00, 0x23, 0x0B, 0x70, 0x01, 0x8C, 0xCB, 0x00, 0x43, 0x84,
+      0x4B, 0x1E, 0x0B, 0x4A, 0x13, 0x60, 0x26, 0x30, 0x00, 0x78, 0x0A, 0x4A,
+      0x13, 0x68, 0x00, 0x28, 0x03, 0xD1, 0xFC, 0x20, 0x83, 0x43, 0x13, 0x60,
+      0x04, 0xE0, 0xFC, 0x20, 0x83, 0x43, 0x80, 0x20, 0x18, 0x43, 0x10, 0x60,
+      0x70, 0x47, 0x01, 0x23, 0x01, 0x48, 0x03, 0x70, 0x70, 0x47, 0x8C, 0xD8,
+      0x08, 0x00, 0x60, 0x80, 0x0E, 0x00, 0x38, 0x86, 0x0E, 0x00, 0x10, 0xB5,
+      0x04, 0x1C, 0x52, 0x49, 0x0C, 0x70, 0x52, 0x49, 0x0B, 0x68, 0x9B, 0x04,
+      0x0D, 0xD5, 0x12, 0x20, 0xA6, 0xF7, 0x23, 0xFE, 0x01, 0x1C, 0x00, 0x2C,
+      0x02, 0xD0, 0xFE, 0x23, 0x19, 0x40, 0x01, 0xE0, 0x01, 0x20, 0x01, 0x43,
+      0x12, 0x20, 0xA6, 0xF7, 0x35, 0xFE, 0x10, 0xBD, 0x00, 0xB5, 0x48, 0x48,
+      0x03, 0x68, 0x01, 0x21, 0x49, 0x03, 0x0B, 0x43, 0x03, 0x60, 0x00, 0x20,
+      0xFF, 0xF7, 0xDF, 0xFF, 0x44, 0x48, 0x03, 0x68, 0x44, 0x49, 0x0B, 0x40,
+      0x03, 0x60, 0x00, 0xBD, 0x10, 0xB5, 0x3F, 0x48, 0x03, 0x78, 0x00, 0x2B,
+      0x0D, 0xD1, 0x40, 0x49, 0x88, 0x68, 0x03, 0x68, 0x9C, 0x6A, 0x00, 0x2C,
+      0x04, 0xD0, 0x08, 0x21, 0xB1, 0xF7, 0xD9, 0xFC, 0x01, 0x28, 0x02, 0xD0,
+      0x01, 0x20, 0xFF, 0xF7, 0xC6, 0xFF, 0x10, 0xBD, 0x30, 0xB5, 0x82, 0xB0,
+      0x35, 0x48, 0x03, 0x78, 0x01, 0x2B, 0x0F, 0xD1, 0x36, 0x49, 0x88, 0x68,
+      0x00, 0x28, 0x08, 0xD0, 0x01, 0x68, 0x8C, 0x6A, 0x00, 0x2C, 0x07, 0xD0,
+      0x08, 0x21, 0xB1, 0xF7, 0xC2, 0xFC, 0x01, 0x28, 0x02, 0xD1, 0x00, 0x20,
+      0xFF, 0xF7, 0xAF, 0xFF, 0x7B, 0xF7, 0x77, 0xF9, 0x2D, 0x4C, 0xA0, 0x68,
+      0x00, 0x28, 0x4B, 0xD0, 0x00,
+0x4C, 0xFC, 0xD1, 0x8F, 0xB1, 0x08, 0x00, 0x23, 0x83, 0x81, 0x01, 0x25, 0x81,
+      0x7C, 0x06, 0x29, 0x04, 0xD0, 0x08, 0x29, 0x02, 0xD0, 0x07, 0x29, 0x00,
+      0xD0, 0x00, 0x25, 0x00, 0x2D, 0x18, 0xD1, 0xE3, 0x69, 0x98, 0x42, 0x05,
+      0xD1, 0x00, 0x22, 0xE2, 0x61, 0x23, 0x48, 0x01, 0x21, 0xA7, 0xF7, 0x5B,
+      0xFD, 0xA0, 0x68, 0xE3, 0x68, 0x98, 0x42, 0x08, 0xD1, 0x01, 0x68, 0x8D,
+      0x68, 0x00, 0x2D, 0x04, 0xD0, 0x09, 0x23, 0x83, 0x74, 0x02, 0x21, 0xB1,
+      0xF7, 0x95, 0xFC, 0xA0, 0x68, 0x02, 0x23, 0x83, 0x74, 0x01, 0x68, 0x4D,
+      0x69, 0x00, 0x2D, 0x02, 0xD0, 0x00, 0x21, 0xB1, 0xF7, 0x8B, 0xFC, 0xA0,
+      0x68, 0x81, 0x7B, 0x15, 0x4D, 0x2B, 0x68, 0x30, 0x22, 0x13, 0x40, 0x1A,
+      0x09, 0x91, 0x42, 0x15, 0xD1, 0x13, 0x4D, 0x29, 0x60, 0x13, 0x4D, 0x2B,
+      0x68, 0x00, 0x93, 0x12, 0x4D, 0x2A, 0x68, 0x00, 0x92, 0x12, 0x4D, 0x29,
+      0x68, 0x01, 0x91, 0x93, 0x07, 0x9B, 0x0F, 0x03, 0x2B, 0x06, 0xD1, 0x0F,
+      0x4A, 0x13, 0x88, 0x99, 0x42, 0x02, 0xD3, 0x36, 0x34, 0x01, 0x21, 0x21,
+      0x70, 0x91, 0xF7, 0x25, 0xFD, 0x02, 0xB0, 0x30, 0xBD, 0xC0, 0x46, 0x24,
+      0xD7, 0x08, 0x00, 0x5C, 0x08, 0x08, 0x00, 0xFF, 0xDF, 0xFF, 0xFF, 0xE4,
+      0x25, 0x08, 0x00, 0x28, 0x2E, 0x08, 0x00, 0xB4, 0x85, 0x0E, 0x00, 0x64,
+      0x82, 0x0E, 0x00, 0x88, 0x80, 0x0E, 0x00, 0x3C, 0x93, 0x0E, 0x00, 0x8C,
+      0x82, 0x0E, 0x00, 0xDC, 0x01, 0x08, 0x00,
+0x4C, 0xFC, 0x18, 0x6C, 0xB2, 0x08, 0x00, 0x00, 0x27, 0x16, 0x4C, 0x20, 0x68,
+      0xE0, 0x60, 0xA1, 0x68, 0x21, 0x60, 0x00, 0x28, 0x20, 0xD0, 0x7D, 0xF7,
+      0x52, 0xF8,
+0x4C, 0xFC, 0x50, 0xEC, 0xB2, 0x08, 0x00, 0x70, 0xB5, 0x06, 0x1C, 0x00, 0x25,
+      0xFF, 0x20, 0x15, 0x30, 0x68, 0x43, 0x0E, 0x4B, 0xC4, 0x18, 0x21, 0x69,
+      0xCB, 0x02, 0x13, 0xD5, 0x08, 0x06, 0xC0, 0x0E, 0x08, 0x28, 0x01, 0xD0,
+      0x0C, 0x28, 0x0D, 0xD1, 0x87, 0x23, 0x18, 0x5D, 0x04, 0x28, 0x09, 0xD0,
+      0x31, 0x1C, 0x20, 0x1C, 0x1C, 0x30, 0x06, 0x22, 0x02, 0xF0, 0xAD, 0xF9,
+      0x00, 0x28, 0x01, 0xD1, 0x20, 0x1C, 0x03, 0xE0, 0x01, 0x35, 0x0A, 0x2D,
+      0xE0, 0xDB, 0x00, 0x20, 0x70, 0xBD, 0x4C, 0x32, 0x08, 0x00,
+0x4C, 0xFC, 0xFF, 0x50, 0xB3, 0x08, 0x00, 0x00, 0x27, 0x03, 0x4C, 0x20, 0x68,
+      0xE0, 0x60, 0xA1, 0x68, 0x21, 0x60, 0x7C, 0xF7, 0xE0, 0xFF, 0xE4, 0x25,
+      0x08, 0x00, 0x00, 0xB5, 0xA1, 0xF7, 0x7F, 0xF9, 0xA1, 0xF7, 0x7D, 0xF9,
+      0xA1, 0xF7, 0x7B, 0xF9, 0x00, 0x23, 0x03, 0x49, 0x0B, 0x60, 0x04, 0x39,
+      0x0B, 0x60, 0x08, 0xBC, 0x18, 0x47, 0x00, 0x00, 0xC0, 0x46, 0x70, 0x82,
+      0x0E, 0x00, 0x30, 0xB5, 0x1F, 0x4D, 0x2B, 0x7D, 0xFF, 0x2B, 0x11, 0xD0,
+      0x1E, 0x48, 0xC3, 0x6A, 0x9B, 0x01, 0x9B, 0x0F, 0x0C, 0xD1, 0x90, 0xF7,
+      0xB3, 0xF9, 0x90, 0xF7, 0x12, 0xFD, 0x28, 0x7D, 0x81, 0xF7, 0xE3, 0xFA,
+      0x81, 0xF7, 0x64, 0xFA, 0xFF, 0x23, 0x2B, 0x75, 0x00, 0x24, 0x23, 0xE0,
+      0x15, 0x48, 0x03, 0x69, 0x5B, 0x01, 0x03, 0xD5, 0x81, 0xF7, 0x1F, 0xFB,
+      0x00, 0x28, 0x1C, 0xD1, 0x11, 0x49, 0xCC, 0x6A, 0xA4, 0x01, 0xA4, 0x0F,
+      0xE8, 0x7C, 0x60, 0x40, 0xC0, 0x07, 0x07, 0xD5, 0xE3, 0x07, 0x03, 0xD5,
+      0x28, 0x7D, 0x90, 0xF7, 0xCE, 0xF9, 0x01, 0xE0, 0x90, 0xF7, 0x90, 0xF9,
+      0xE8, 0x7C, 0x60, 0x40, 0x80, 0x07, 0x07, 0xD5, 0xA3, 0x07, 0x03, 0xD5,
+      0x28, 0x7D, 0x90, 0xF7, 0x20, 0xFD, 0x01, 0xE0, 0x90, 0xF7, 0xE5, 0xFC,
+      0xEC, 0x74, 0x30, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0xC0, 0x46, 0xF0, 0x2D,
+      0x08, 0x00, 0xA0, 0x1E, 0x08, 0x00, 0x30, 0xB5, 0x05, 0x1C, 0x0C, 0x1C,
+      0x28, 0x23, 0x01, 0x20, 0x58, 0x55, 0x20, 0x79, 0x00, 0x02, 0xE1, 0x78,
+      0x08, 0x43, 0x81, 0xF7, 0xB1, 0xF8, 0xFF, 0x28, 0x02, 0xD0, 0x63, 0x79,
+      0x00, 0x2B, 0x02, 0xD0, 0x12, 0x23, 0x2B, 0x70, 0x0A, 0xE0, 0x43, 0x01,
+      0x05, 0x49, 0x59, 0x18, 0x0B, 0x7E, 0x03, 0x2B, 0x01, 0xD1, 0x0C, 0x23,
+      0xF5, 0xE7, 0x03, 0x21, 0x98,
+0x4C, 0xFC, 0x6D, 0x4B, 0xB4, 0x08, 0x00, 0xF7, 0x7E, 0xFE, 0x30, 0xBD, 0x14,
+      0x24, 0x08, 0x00, 0x10, 0xB5, 0x0C, 0x1C, 0x7D, 0xF7, 0x20, 0xFF, 0x00,
+      0x2C, 0x02, 0xD1, 0x02, 0x20, 0x80, 0xF7, 0x03, 0xFE, 0x10, 0xBC, 0x08,
+      0xBC, 0x18, 0x47, 0x10, 0xB5, 0x0C, 0x1C, 0x7E, 0xF7, 0xD0, 0xF8, 0x00,
+      0x2C, 0x02, 0xD1, 0x02, 0x20, 0x80, 0xF7, 0xF7, 0xFD, 0x10, 0xBC, 0x08,
+      0xBC, 0x18, 0x47, 0x10, 0xB5, 0x0C, 0x1C, 0x90, 0xF7, 0x76, 0xFF, 0x00,
+      0x2C, 0x02, 0xD1, 0x02, 0x20, 0x80, 0xF7, 0xEB, 0xFD, 0x10, 0xBC, 0x08,
+      0xBC, 0x18, 0x47, 0x10, 0xB5, 0x0C, 0x1C, 0x90, 0xF7, 0x62, 0xFC, 0x00,
+      0x2C, 0x02, 0xD1, 0x02, 0x20, 0x80, 0xF7, 0xDF, 0xFD, 0x10, 0xBC, 0x08,
+      0xBC, 0x18, 0x47,
+0x4C, 0xFC, 0xFF, 0xC8, 0xB4, 0x08, 0x00, 0x58, 0x30, 0x42, 0x78, 0x07, 0x2A,
+      0x01, 0xD1, 0x01, 0x21, 0x07, 0xE0, 0x0C, 0x2A, 0x01, 0xD1, 0x02, 0x21,
+      0x03, 0xE0, 0x00, 0x21, 0x0D, 0x2A, 0x00, 0xD1, 0x03, 0x21, 0x01, 0x70,
+      0x70, 0x47, 0x00, 0x22, 0x13, 0x29, 0x1F, 0xD1, 0x00, 0x23, 0x11, 0x49,
+      0x0B, 0x60, 0x5C, 0x30, 0x00, 0x7F, 0x43, 0x01, 0x10, 0x48, 0xC0, 0x58,
+      0x00, 0x28, 0x0D, 0xD0, 0x83, 0x68, 0x1B, 0x0C, 0x01, 0x8A, 0x5A, 0x1A,
+      0x00, 0xD0, 0x01, 0x22, 0x00, 0xE0, 0x01, 0x32, 0x00, 0x68, 0x00, 0x28,
+      0xFB, 0xD1, 0x01, 0x2A, 0x00, 0xD1, 0x00, 0x22, 0x13, 0x04, 0x07, 0x48,
+      0x18, 0x40, 0x01, 0x23, 0x9B, 0x07, 0x18, 0x43, 0x03, 0x49, 0x08, 0x60,
+      0x70, 0x47, 0x04, 0x48, 0x05, 0x49, 0x48, 0x67, 0x70, 0x47, 0xF0, 0x80,
+      0x0E, 0x00, 0x14, 0x24, 0x08, 0x00, 0x00, 0x00, 0xFF, 0x3F, 0xE9, 0xB4,
+      0x08, 0x00, 0x24, 0x1B, 0x08, 0x00, 0x30, 0xB5, 0x86, 0xB0, 0x04, 0x1C,
+      0x31, 0x4D, 0x0C, 0x22, 0x31, 0x49, 0x03, 0xA8, 0xB0, 0xF7, 0x41, 0xFE,
+      0x0C, 0x22, 0x2F, 0x49, 0x68, 0x46, 0xB0, 0xF7, 0x3C, 0xFE, 0x28, 0x68,
+      0x80, 0x09, 0x80, 0x01, 0x69, 0x68, 0xC9, 0x08, 0xC9, 0x00, 0xA3, 0x00,
+      0x03, 0xAA, 0xD2, 0x58, 0x10, 0x43, 0x28, 0x60, 0x6A, 0x46, 0xD0, 0x58,
+      0x08, 0x43, 0x68, 0x60, 0x06, 0xB0, 0x30, 0xBD, 0x30, 0xB5, 0x04, 0x1C,
+      0x0D, 0x1C, 0x7A, 0xF7, 0x16, 0xF8, 0xE0, 0x7B, 0x68, 0x40, 0x0F, 0xD0,
+      0x22, 0x49, 0x08, 0x68, 0x43, 0x04, 0xD8, 0x0E, 0x08, 0x28, 0x01, 0xD8,
+      0x00, 0x23, 0x03, 0xE0, 0x02, 0x23, 0x0B, 0x28, 0x00, 0xD8, 0x01, 0x23,
+      0x18, 0x06, 0x00, 0x0E, 0xFF, 0xF7, 0xC9, 0xFF, 0x30, 0xBC, 0x08, 0xBC,
+      0x18, 0x47, 0x30, 0xB5, 0x04,
+0x4C, 0xFC, 0x7B, 0xC3, 0xB5, 0x08, 0x00, 0x1C, 0x0D, 0x1C, 0x7F, 0xF7, 0x42,
+      0xFF, 0xE0, 0x7B, 0x68, 0x40, 0x12, 0xD0, 0x14, 0x49, 0x08, 0x68, 0x43,
+      0x04, 0xD8, 0x0E, 0x28, 0x34, 0x63, 0x7F, 0x03, 0x2B, 0x01, 0xD0, 0x00,
+      0x20, 0x06, 0xE0, 0x17, 0x28, 0x01, 0xD0, 0x18, 0x28, 0x01, 0xD1, 0x01,
+      0x20, 0x00, 0xE0, 0x02, 0x20, 0xFF, 0xF7, 0xAB, 0xFF, 0x30, 0xBC, 0x08,
+      0xBC, 0x18, 0x47, 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x7E, 0xF7, 0xD3,
+      0xFB, 0xE0, 0x7B, 0x68, 0x40, 0x02, 0xD0, 0x00, 0x20, 0xFF, 0xF7, 0x9D,
+      0xFF, 0x30, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0x94, 0xFC, 0x0E, 0x00, 0xFC,
+      0xD6, 0x08, 0x00, 0x08, 0xD7, 0x08, 0x00, 0x4C, 0x8A, 0x0E, 0x00, 0x03,
+      0xA8, 0x8B, 0xF7, 0xD1, 0xFC, 0x03, 0xA8, 0x8B, 0xF7, 0x3B, 0xFD, 0x04,
+      0x1C, 0x8B, 0xF7, 0x9B, 0xFC,
+0x4C, 0xFC, 0x54, 0x5C, 0xB6, 0x08, 0x00, 0xFF, 0x21, 0x10, 0x31, 0x41, 0x5C,
+      0x02, 0x29, 0x16, 0xD3, 0x03, 0xD0, 0x04, 0x29, 0x06, 0xD3, 0x0A, 0xD0,
+      0x11, 0xE0, 0x83, 0x6A, 0x09, 0x49, 0x0B, 0x40, 0x09, 0x49, 0x08, 0xE0,
+      0x83, 0x6A, 0x08, 0x49, 0x0B, 0x40, 0x08, 0x49, 0x03, 0xE0, 0x83, 0x6A,
+      0x06, 0x49, 0x0B, 0x40, 0x07, 0x49, 0x83, 0x62, 0xC3, 0x6A, 0x0B, 0x40,
+      0xC3, 0x62, 0x70, 0x47, 0xC0, 0x46, 0xFF, 0xFF, 0x8F, 0xF8, 0x1B, 0x18,
+      0x00, 0x80, 0xFF, 0xFF, 0x8F, 0xFE, 0x9B, 0xF9, 0x00, 0x80, 0x9B, 0xFF,
+      0x79, 0x87,
+0x4C, 0xFC, 0x3C, 0xBC, 0xB6, 0x08, 0x00, 0x00, 0xB5, 0x0C, 0x4A, 0x51, 0x68,
+      0xFF, 0x22, 0x10, 0x32, 0x83, 0x18, 0x4A, 0x7B, 0x1A, 0x70, 0xCA, 0x7B,
+      0x12, 0x02, 0x8B, 0x7B, 0x13, 0x43, 0x83, 0x84, 0x4A, 0x7C, 0x12, 0x02,
+      0x09, 0x7C, 0x0A, 0x43, 0xC2, 0x84, 0x03, 0x69, 0x01, 0x21, 0x49, 0x06,
+      0x0B, 0x43, 0x03, 0x61, 0xFF, 0xF7, 0xB7, 0xFF, 0x00, 0xBD, 0x84, 0x3F,
+      0x08, 0x00,
+0x4C, 0xFC, 0x1C, 0x60, 0xB7, 0x08, 0x00, 0x03, 0x69, 0x9B, 0x01, 0x04, 0xD5,
+      0xFF, 0x21, 0x10, 0x31, 0x40, 0x5C, 0x03, 0x28, 0x01, 0xD8, 0x00, 0x20,
+      0x00, 0xE0, 0x01, 0x20, 0x70, 0x47,
+0x4C, 0xFC, 0x60, 0x90, 0xB7, 0x08, 0x00, 0x30, 0xB5, 0x04, 0x1C, 0xA3, 0x7C,
+      0x00, 0x2B, 0x10, 0xD0, 0x01, 0x29, 0x0E, 0xD1, 0x12, 0x4A, 0x15, 0x68,
+      0x20, 0x1C, 0x01, 0x21, 0x7D, 0xF7, 0x0A, 0xFF, 0x01, 0x2D, 0x06, 0xD8,
+      0x45, 0x23, 0x18, 0x5D, 0x00, 0x28, 0x02, 0xD0, 0x20, 0x1C, 0x7B, 0xF7,
+      0x61, 0xF9, 0x30, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0x00, 0xB5, 0x01, 0x1C,
+      0x08, 0x4A, 0x13, 0x68, 0x01, 0x2B, 0x06, 0xD8, 0x45, 0x23, 0x1A, 0x5C,
+      0x00, 0x2A, 0x02, 0xD0, 0x7B, 0xF7, 0x52, 0xF9, 0x02, 0xE0, 0x08, 0x1C,
+      0x7D, 0xF7, 0xE7, 0xFD, 0x08, 0xBC, 0x18, 0x47, 0x00, 0x00, 0x58, 0x80,
+      0x0E, 0x00,
+0x4C, 0xFC, 0x64, 0x00, 0xB8, 0x08, 0x00, 0xF0, 0xB5, 0x01, 0x68, 0x8C, 0x6A,
+      0x05, 0x1C, 0x03, 0x21, 0xB1, 0xF7, 0x77, 0xF9, 0x04, 0x1C, 0x28, 0x68,
+      0x86, 0x6A, 0x28, 0x1C, 0x02, 0x21, 0xB1, 0xF7, 0x6E, 0xF9, 0x06, 0x1C,
+      0xA8, 0x7B, 0x0C, 0x4F, 0x38, 0x60, 0x0C, 0x4F, 0x3D, 0x68, 0x0C, 0x4F,
+      0x3D, 0x68, 0x21, 0x68, 0x68, 0x08, 0xA0, 0xF7, 0xA2, 0xFC, 0x76, 0x89,
+      0x01, 0x1C, 0x30, 0x1C, 0xB0, 0xF7, 0xD5, 0xFF, 0x43, 0x1C, 0x73, 0x43,
+      0x20, 0x68, 0xC0, 0x18, 0x40, 0x01, 0x40, 0x09, 0x20, 0x60, 0x69, 0x08,
+      0xA0, 0xF7, 0x93, 0xFC, 0xF0, 0xBD, 0x64, 0x82, 0x0E, 0x00, 0x88, 0x80,
+      0x0E, 0x00, 0x3C, 0x93, 0x0E, 0x00,
+0x4C, 0xFC, 0xB4, 0x84, 0xB8, 0x08, 0x00, 0x30, 0xB5, 0x82, 0x6C, 0x30, 0x23,
+      0x1C, 0x5C, 0x02, 0x2C, 0x09, 0xD1, 0x93, 0x7B, 0x15, 0x4D, 0x2B, 0x60,
+      0x15, 0x4D, 0x2B, 0x68, 0x15, 0x4D, 0x2B, 0x68, 0x8C, 0x32, 0x5B, 0x08,
+      0x13, 0x60, 0x01, 0x2C, 0x08, 0xD1, 0xC3, 0x7B, 0x00, 0x2B, 0x05, 0xD1,
+      0x02, 0x1C, 0x60, 0x32, 0x13, 0x7C, 0x01, 0x24, 0x23, 0x43, 0x13, 0x74,
+      0x02, 0x1C, 0x60, 0x32, 0x14, 0x7C, 0x00, 0x2C, 0x07, 0xD0, 0xC3, 0x7B,
+      0x00, 0x2B, 0x04, 0xD1, 0x03, 0x7C, 0x04, 0x2B, 0x01, 0xD1, 0x0B, 0x23,
+      0x03, 0x74, 0x13, 0x78, 0x99, 0x42, 0x03, 0xDA, 0x00, 0x2C, 0x01, 0xD1,
+      0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x30, 0xBD, 0xC0, 0x46, 0x64, 0x82,
+      0x0E, 0x00, 0x88, 0x80, 0x0E, 0x00, 0x3C, 0x93, 0x0E, 0x00, 0x0D, 0x49,
+      0x0B, 0x68, 0x00, 0x2B, 0x10, 0xD0, 0x02, 0x1C, 0x70, 0x32, 0x13, 0x78,
+      0x00, 0x2B, 0x0B, 0xD1, 0x04, 0x23, 0x03, 0x74, 0xC3, 0x7B, 0x01, 0x2B,
+      0x08, 0xD1, 0x07, 0x4B, 0x19, 0x78, 0x8B, 0x1E, 0x01, 0x21, 0x99, 0x40,
+      0x11, 0x70, 0x01, 0xE0, 0x0B, 0x23, 0x03, 0x74, 0x6C, 0x30, 0x01, 0x21,
+      0x01, 0x70, 0x70, 0x47, 0xC0, 0x46, 0x74, 0x0D, 0x08, 0x00, 0x68, 0x03,
+      0x08, 0x00,
+0x4C, 0xFC, 0x90, 0x5C, 0xB9, 0x08, 0x00, 0x06, 0x4A, 0x10, 0x78, 0x64, 0x23,
+      0x58, 0x43, 0x05, 0x49, 0x0B, 0x88, 0x1B, 0x18, 0x0B, 0x80, 0x04, 0x49,
+      0x0B, 0x88, 0x1B, 0x18, 0x0B, 0x80, 0x70, 0x47, 0xC0, 0x46, 0x8D, 0xD8,
+      0x08, 0x00, 0x62, 0x08, 0x08, 0x00, 0xB0, 0x69, 0x08, 0x00, 0x10, 0xB5,
+      0x11, 0x4C, 0x11, 0x4A, 0x13, 0x68, 0x1B, 0x03, 0x1C, 0xD5, 0x00, 0x29,
+      0x06, 0xD1, 0x06, 0x21, 0x93, 0xF7, 0xDA, 0xFD, 0x0E, 0x48, 0x60, 0x60,
+      0x20, 0x60, 0x13, 0xE0, 0x23, 0x68, 0x0C, 0x48, 0x03, 0x40, 0x23, 0x60,
+      0x60, 0x68, 0x0A, 0x49, 0x08, 0x40, 0x60, 0x60, 0x23, 0x68, 0x09, 0x48,
+      0x03, 0x43, 0x23, 0x60, 0x60, 0x68, 0x07, 0x49, 0x08, 0x43, 0x60, 0x60,
+      0x07, 0x4B, 0x23, 0x60, 0x07, 0x48, 0x60, 0x60, 0x10, 0xBD, 0xA8, 0x80,
+      0x0E, 0x00, 0x18, 0x12, 0x08, 0x00, 0x00, 0x00, 0xFF, 0x09, 0xFF, 0xFF,
+      0xFF, 0xF7, 0x00, 0x00, 0x00, 0x04, 0x7A, 0xA1, 0x37, 0x13, 0x7A, 0xA1,
+      0x37, 0x93,
+0x4C, 0xFC, 0xFF, 0xF0, 0xB9, 0x08, 0x00, 0x68, 0x46, 0x01, 0x1D, 0x00, 0xB5,
+      0x00, 0xF0, 0x03, 0xF8, 0x00, 0x20, 0x00, 0xBD, 0x00, 0x00, 0xF0, 0xB5,
+      0x05, 0x1C, 0x0E, 0x1C, 0x20, 0x4F, 0xAE, 0xF7, 0xF1, 0xFF, 0x44, 0x08,
+      0x3B, 0x68, 0x5B, 0x06, 0x5B, 0x0A, 0x79, 0x68, 0x09, 0x02, 0x0B, 0x43,
+      0xB8, 0x68, 0x18, 0x43, 0x80, 0x12, 0xC0, 0x03, 0x1A, 0x4A, 0x13, 0x68,
+      0x38, 0x21, 0x0B, 0x40, 0xDF, 0x08, 0x04, 0x2F, 0x01, 0xD1, 0x05, 0x27,
+      0x08, 0xE0, 0x02, 0x2F, 0x01, 0xD1, 0x06, 0x27, 0x04, 0xE0, 0x63, 0x21,
+      0x01, 0x2F, 0x00, 0xD1, 0x07, 0x21, 0x0F, 0x1C, 0x47, 0x43, 0xE0, 0x0F,
+      0x00, 0x19, 0x40, 0x10, 0xC1, 0x19, 0x20, 0x1C, 0xB0, 0xF7, 0xF1, 0xFE,
+      0x60, 0x43, 0x38, 0x1A, 0xC3, 0x17, 0x58, 0x40, 0xC0, 0x1A, 0x0B, 0x49,
+      0x00, 0x23, 0x88, 0x42, 0x00, 0xDC, 0x01, 0x23, 0x33, 0x60, 0x09, 0x49,
+      0x0B, 0x68, 0x5B, 0x06, 0x08, 0xD5, 0x08, 0x4A, 0x10, 0x68, 0x40, 0x21,
+      0x08, 0x40, 0x00, 0x23, 0x00, 0x28, 0x00, 0xD1, 0x01, 0x23, 0x2B, 0x60,
+      0xF0, 0xBD, 0xD0, 0x42, 0x0F, 0x00, 0xD8, 0x43, 0x0F, 0x00, 0x40, 0x42,
+      0x0F, 0x00, 0xC8, 0x09, 0x08, 0x00, 0xC0, 0x42, 0x0F, 0x00, 0x00, 0x95,
+      0x01, 0x35, 0x28, 0x06, 0x00, 0x0E, 0xB8, 0x60, 0x28, 0x04, 0x01, 0x3D,
+      0xAB, 0xF7, 0x9E, 0xFA, 0x00, 0x00, 0x10, 0xB5, 0x1D, 0x48, 0x2A, 0x23,
+      0x03, 0x60, 0x4A, 0x21, 0x41, 0x60, 0x24, 0x21, 0x81, 0x60, 0x00, 0x21,
+      0x01, 0x61, 0xEA, 0x21, 0xC1, 0x60, 0x60, 0x21, 0x41, 0x61, 0x00, 0x21,
+      0x01, 0x64, 0x13, 0x21, 0x41, 0x64, 0x04, 0x21, 0x81, 0x64, 0x14, 0x49,
+      0x08, 0x68, 0x00, 0x07, 0x00, 0x0F, 0x50, 0x22, 0x10, 0x43, 0x08, 0x60,
+      0x12, 0x49, 0x04, 0x20, 0xAA,
+0x4C, 0xFC, 0xFF, 0xEB, 0xBA, 0x08, 0x00, 0xF7, 0x3E, 0xFC, 0x0A, 0x22, 0x10,
+      0x49, 0x0D, 0x20, 0xAA, 0xF7, 0x39, 0xFC, 0x0A, 0x22, 0x0F, 0x49, 0x0C,
+      0x20, 0xAA, 0xF7, 0x34, 0xFC, 0x0E, 0x4B, 0x0E, 0x48, 0x03, 0x60, 0xAD,
+      0x23, 0x0E, 0x4C, 0x23, 0x60, 0xAB, 0x23, 0x63, 0x60, 0x0D, 0x23, 0x5B,
+      0x02, 0x0C, 0x4C, 0x23, 0x60, 0xD2, 0x23, 0x0B, 0x4C, 0x23, 0x60, 0x10,
+      0xBC, 0x08, 0xBC, 0x18, 0x47, 0xC0, 0x46, 0xC4, 0x40, 0x0F, 0x00, 0x50,
+      0x42, 0x0F, 0x00, 0x55, 0xD7, 0x08, 0x00, 0x25, 0xD7, 0x08, 0x00, 0x3D,
+      0xD7, 0x08, 0x00, 0xA4, 0x64, 0x01, 0x00, 0xE4, 0x09, 0x08, 0x00, 0xB0,
+      0x41, 0x0F, 0x00, 0xD4, 0x09, 0x08, 0x00, 0x18, 0x0A, 0x08, 0x00, 0x10,
+      0xB5, 0x0C, 0x4C, 0x20, 0x68, 0x40, 0x21, 0x01, 0x40, 0x0A, 0x22, 0x0C,
+      0x20, 0x00, 0x29, 0x04, 0xD0, 0x09, 0x49, 0xAA, 0xF7, 0x01, 0xFC, 0x08,
+      0x49, 0x03, 0xE0, 0x08, 0x49, 0xAA, 0xF7, 0xFC, 0xFB, 0x08, 0x49, 0x0A,
+      0x22, 0x0D, 0x20, 0xAA, 0xF7, 0xF7, 0xFB, 0x10, 0xBC, 0x08, 0xBC, 0x18,
+      0x47, 0xC0, 0x46, 0x14, 0x40, 0x0F, 0x00, 0x49, 0xD7, 0x08, 0x00, 0x31,
+      0xD7, 0x08, 0x00, 0x3D, 0xD7, 0x08, 0x00, 0x25, 0xD7, 0x08, 0x00, 0x00,
+      0xB5, 0x21, 0x49, 0x48, 0x78, 0x00, 0x28, 0x26, 0xD0, 0x09, 0x28, 0x19,
+      0xD0, 0x0C, 0x28, 0x08, 0xD0, 0x10, 0x28, 0x06, 0xD0, 0x14, 0x28, 0x04,
+      0xD0, 0x64, 0x28, 0x25, 0xD0, 0x6E, 0x28, 0x28, 0xD0, 0x2D, 0xE0, 0x19,
+      0x4A, 0x10, 0x68, 0x43, 0x06, 0x5B, 0x0E, 0x58, 0x42, 0x08, 0x74, 0x00,
+      0x06, 0x00, 0x16, 0x77, 0x23, 0xDB, 0x43, 0x98, 0x42, 0x21, 0xDD, 0x07,
+      0x38, 0x08, 0x74, 0x1E, 0xE0, 0x13, 0x48, 0x03, 0x78, 0x00, 0x2B, 0x1A,
+      0xD1, 0x12, 0x48, 0x03, 0x68,
+0x4C, 0xFC, 0xFF, 0xE6, 0xBB, 0x08, 0x00, 0x5B, 0x06, 0x5B, 0x0E, 0x11, 0x48,
+      0x03, 0x70, 0x13, 0xE0, 0x10, 0x48, 0x03, 0x68, 0x00, 0x2B, 0x0D, 0xD0,
+      0xFF, 0x20, 0x00, 0x02, 0xAA, 0xF7, 0xBE, 0xFD, 0x08, 0xE0, 0x0D, 0x48,
+      0x00, 0x23, 0x19, 0x1C, 0x0A, 0xC0, 0x05, 0xE0, 0x00, 0xF0, 0x47, 0xF8,
+      0x00, 0x28, 0x01, 0xD0, 0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x08, 0xBC,
+      0x18, 0x47, 0x00, 0x00, 0xB0, 0x5F, 0x08, 0x00, 0x1C, 0x40, 0x0F, 0x00,
+      0x04, 0x6E, 0x08, 0x00, 0xF8, 0x40, 0x0F, 0x00, 0x05, 0x6E, 0x08, 0x00,
+      0xD4, 0x09, 0x08, 0x00, 0x08, 0x6E, 0x08, 0x00, 0x20, 0xB5, 0x29, 0x48,
+      0x29, 0x49, 0x03, 0x68, 0x0B, 0x71, 0x01, 0x23, 0xCB, 0x70, 0x28, 0x4D,
+      0x2B, 0x68, 0x1A, 0x06, 0x12, 0x0E, 0x8A, 0x70, 0x43, 0x6A, 0x4B, 0x70,
+      0x03, 0x6A, 0x0B, 0x70, 0x1E, 0x21, 0x8A, 0x43, 0x10, 0x21, 0x11, 0x43,
+      0x29, 0x60, 0x01, 0x21, 0x01, 0x62, 0x00, 0x21, 0x41, 0x62, 0x03, 0x68,
+      0x20, 0x21, 0x0B, 0x43, 0x03, 0x60, 0x1E, 0x4D, 0x28, 0x68, 0xAA, 0xF7,
+      0x7F, 0xFD, 0x20, 0xBD, 0x10, 0xB5, 0x18, 0x49, 0x18, 0x48, 0x00, 0x23,
+      0xC3, 0x70, 0x83, 0x78, 0x17, 0x4C, 0x23, 0x60, 0x03, 0x79, 0x0B, 0x60,
+      0x42, 0x78, 0x4A, 0x62, 0x00, 0x78, 0x08, 0x62, 0x10, 0xBD, 0x10, 0xB5,
+      0x00, 0x24, 0x11, 0x49, 0xC8, 0x78, 0x00, 0x28, 0x04, 0xD0, 0xAB, 0xF7,
+      0x04, 0xFE, 0xFF, 0xF7, 0xE7, 0xFF, 0x15, 0xE0, 0x0F, 0x49, 0x08, 0x68,
+      0x01, 0x28, 0x01, 0xD0, 0x07, 0x28, 0x0F, 0xD1, 0x0D, 0x49, 0x08, 0x68,
+      0x03, 0x02, 0x04, 0x39, 0x08, 0x68, 0x18, 0x18, 0x0B, 0x49, 0x0B, 0x68,
+      0x98, 0x42, 0x03, 0xD2, 0x01, 0x24, 0xFF, 0xF7, 0xB1, 0xFF, 0x01, 0xE0,
+      0xAB, 0xF7, 0xEB, 0xFD, 0x20,
+0x4C, 0xFC, 0x23, 0xE1, 0xBC, 0x08, 0x00, 0x1C, 0x10, 0xBD, 0xC0, 0x41, 0x0F,
+      0x00, 0x08, 0x6E, 0x08, 0x00, 0x84, 0x40, 0x0F, 0x00, 0x18, 0x0A, 0x08,
+      0x00, 0xDC, 0x42, 0x0F, 0x00, 0x94, 0x42, 0x0F, 0x00, 0xA8, 0xD7, 0x08,
+      0x00,
+0x4C, 0xFC, 0xF0, 0x08, 0xBD, 0x08, 0x00, 0xF0, 0xB5, 0x32, 0x4C, 0x32, 0x4D,
+      0x01, 0x20, 0xC6, 0x43, 0x00, 0xF0, 0x45, 0xF8, 0x31, 0x49, 0x00, 0x22,
+      0x8F, 0x56, 0xC2, 0x1B, 0x00, 0x06, 0x00, 0x16, 0x12, 0x06, 0x12, 0x16,
+      0x2E, 0x49, 0x0B, 0x78, 0x64, 0x2B, 0x01, 0xD9, 0x02, 0x21, 0x03, 0xE0,
+      0x00, 0x21, 0x1E, 0x2B, 0x00, 0xD2, 0x31, 0x1C, 0x21, 0x70, 0x29, 0x4E,
+      0x00, 0x23, 0xF3, 0x56, 0x98, 0x42, 0x0A, 0xDA, 0x3A, 0x2F, 0x08, 0xD1,
+      0x27, 0x4A, 0x00, 0x27, 0xD0, 0x57, 0x0B, 0x18, 0x80, 0x20, 0x18, 0x43,
+      0x28, 0x60, 0x2F, 0x71, 0x1C, 0xE0, 0x23, 0x4F, 0x38, 0x1C, 0x01, 0x23,
+      0xC6, 0x56, 0xB2, 0x42, 0x01, 0xDB, 0x38, 0x78, 0x10, 0xE0, 0x03, 0x23,
+      0xC4, 0x56, 0xA2, 0x42, 0x03, 0xDB, 0xB2, 0x42, 0x01, 0xDA, 0x80, 0x78,
+      0x08, 0xE0, 0x05, 0x23, 0xC3, 0x56, 0x9A, 0x42, 0x03, 0xDB, 0xA2, 0x42,
+      0x01, 0xDA, 0x00, 0x79, 0x00, 0xE0, 0x80, 0x79, 0x08, 0x18, 0x28, 0x71,
+      0x00, 0x23, 0x2B, 0x60, 0xF0, 0xBD, 0x15, 0x49, 0x00, 0x23, 0xC8, 0x56,
+      0x70, 0x47, 0x90, 0xB5, 0x0C, 0x4C, 0x0C, 0x49, 0x08, 0x7B, 0x40, 0x06,
+      0x40, 0x0E, 0x42, 0x06, 0x02, 0xD5, 0x80, 0x30, 0x00, 0x06, 0x00, 0x16,
+      0x0B, 0x68, 0x00, 0x27, 0xE2, 0x57, 0x1B, 0x06, 0x05, 0xD5, 0x09, 0x4B,
+      0xD9, 0x57, 0x53, 0x18, 0xC0, 0x1A, 0x18, 0x38, 0x02, 0xE0, 0x09, 0x79,
+      0x51, 0x18, 0x40, 0x1A, 0x90, 0xBD, 0xAC, 0xD7, 0x08, 0x00, 0xF0, 0x40,
+      0x0F, 0x00, 0x05, 0x6E, 0x08, 0x00, 0xE6, 0x12, 0x08, 0x00, 0xAE, 0xD7,
+      0x08, 0x00, 0xAD, 0xD7, 0x08, 0x00, 0xB0, 0xD7, 0x08, 0x00, 0x3C, 0x40,
+      0x0F, 0x00,
+0x4C, 0xFC, 0x80, 0x30, 0xBE, 0x08, 0x00, 0xD3, 0x73, 0x00, 0x20, 0x04, 0x49,
+      0x08, 0x60, 0x04, 0x49, 0x08, 0x60, 0x04, 0x49, 0x08, 0x60, 0x01, 0x20,
+      0xAB, 0xF7, 0x11, 0xFA, 0xC0, 0x46, 0x68, 0x63, 0x08, 0x00, 0xF4, 0x40,
+      0x0F, 0x00, 0xF0, 0x40, 0x0F, 0x00, 0xB0, 0xB5, 0x12, 0x49, 0x00, 0x20,
+      0x0B, 0x68, 0x1F, 0x1C, 0x1A, 0x01, 0x14, 0x0F, 0x08, 0xD1, 0x5B, 0x17,
+      0x01, 0x33, 0x01, 0x22, 0x92, 0x07, 0x97, 0x43, 0xDA, 0x07, 0x52, 0x08,
+      0x17, 0x43, 0x0F, 0x60, 0x01, 0x34, 0x0B, 0x68, 0x0A, 0x4A, 0x93, 0x43,
+      0x22, 0x07, 0x12, 0x09, 0x13, 0x43, 0x0B, 0x60, 0x1C, 0x1C, 0x1B, 0x01,
+      0x1B, 0x0F, 0x06, 0x4D, 0x2A, 0x78, 0x93, 0x42, 0x03, 0xD1, 0x03, 0x48,
+      0x84, 0x43, 0x0C, 0x60, 0x01, 0x20, 0xB0, 0xBD, 0xC0, 0x46, 0x68, 0x63,
+      0x08, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x04, 0x0A, 0x08, 0x00,
+0x4C, 0xFC, 0x5C, 0xC4, 0xBE, 0x08, 0x00, 0x00, 0xB5, 0x07, 0x48, 0x03, 0x68,
+      0xDB, 0x07, 0x09, 0xD4, 0x3D, 0x21, 0x89, 0x03, 0x08, 0x68, 0xC0, 0x07,
+      0xC0, 0x0F, 0x03, 0xD1, 0x03, 0x49, 0x08, 0x60, 0xAA, 0xF7, 0xC7, 0xFC,
+      0x00, 0xBD, 0xAC, 0x42, 0x0F, 0x00, 0x14, 0x40, 0x0F, 0x00, 0x00, 0x20,
+      0x0A, 0x4A, 0x13, 0x68, 0x1B, 0x07, 0x00, 0xD5, 0x0A, 0x20, 0x70, 0x47,
+      0x00, 0xB5, 0x02, 0x1C, 0x06, 0x49, 0x08, 0x68, 0x08, 0x23, 0x18, 0x40,
+      0x05, 0xD0, 0x4C, 0x23, 0x99, 0x5A, 0x10, 0x1C, 0x76, 0xF7, 0x00, 0xFE,
+      0x01, 0x20, 0x00, 0xBD, 0xC0, 0x46, 0xB0, 0x07, 0x08, 0x00,
+0x4C, 0xFC, 0xFF, 0x50, 0xBF, 0x08, 0x00, 0x00, 0x26, 0x07, 0x1C, 0x10, 0x4C,
+      0x23, 0x78, 0x00, 0x2B, 0x01, 0xD1, 0x02, 0xB0, 0xF0, 0xBD, 0x00, 0x23,
+      0x0E, 0x4D, 0x2B, 0x60, 0x0E, 0x4B, 0x5C, 0x5C, 0x0F, 0x2C, 0x01, 0xD0,
+      0x01, 0x2C, 0x08, 0xD1, 0x78, 0x21, 0x71, 0x5C, 0x01, 0x22, 0x8A, 0x40,
+      0x0A, 0x49, 0x09, 0x68, 0x0A, 0x40, 0x00, 0xD0, 0x04, 0x24, 0x93, 0xF7,
+      0xF9, 0xFA, 0x31, 0x1C, 0x3A, 0x1C, 0x5C, 0x3A, 0x00, 0xF0, 0x11, 0xF8,
+      0x06, 0x1C, 0x93, 0xF7, 0x5D, 0xFB, 0x66, 0x12, 0x08, 0x00, 0xF0, 0x80,
+      0x0E, 0x00, 0x00, 0x06, 0x08, 0x00, 0x30, 0x01, 0x08, 0x00, 0x01, 0x21,
+      0x1A, 0x4B, 0x0B, 0x43, 0x1A, 0x49, 0x4B, 0x66, 0x70, 0x47, 0x70, 0xB5,
+      0x05, 0x1C, 0x0C, 0x1C, 0x5C, 0x32, 0x10, 0x7F, 0x43, 0x01, 0x16, 0x49,
+      0x5E, 0x18, 0x80, 0xF7, 0x39, 0xFD, 0x00, 0x2D, 0x20, 0xD0, 0x33, 0x7E,
+      0x00, 0x2B, 0x13, 0xD1, 0x06, 0x1C, 0x84, 0x36, 0x33, 0x88, 0x00, 0x2B,
+      0x0E, 0xD0, 0xEB, 0x68, 0x10, 0x49, 0x8B, 0x42, 0x0A, 0xD0, 0x77, 0xF7,
+      0xEF, 0xFE, 0xE9, 0x68, 0xA0, 0xF7, 0xC5, 0xF8, 0x31, 0x88, 0x30, 0x39,
+      0x88, 0x42, 0x01, 0xD3, 0x07, 0x24, 0x09, 0xE0, 0x07, 0x2C, 0x02, 0xD1,
+      0x06, 0xE0, 0x01, 0x34, 0x2D, 0x68, 0x00, 0x2D, 0xFB, 0xD1, 0x01, 0x2C,
+      0x00, 0xD1, 0x00, 0x24, 0x20, 0x1C, 0x70, 0xBD, 0xC0, 0x46, 0x50, 0xBF,
+      0x08, 0x00, 0x24, 0x1B, 0x08, 0x00, 0x14, 0x24, 0x08, 0x00, 0xFE, 0xFE,
+      0xFE, 0xFE, 0x70, 0xB5, 0x05, 0x1C, 0x0C, 0x1C, 0x2E, 0x1C, 0x08, 0x36,
+      0x20, 0x79, 0x00, 0x02, 0xE1, 0x78, 0x08, 0x43, 0x80, 0xF7, 0xA8, 0xFA,
+      0xFF, 0x28, 0x0B, 0xD0, 0x80, 0xF7, 0x7A, 0xFE, 0x01, 0x28, 0x07, 0xD1,
+      0x20, 0x79, 0x00, 0x02, 0xE1,
+0x4C, 0xFC, 0xFF, 0x4B, 0xC0, 0x08, 0x00, 0x78, 0x08, 0x43, 0x80, 0xF7, 0x60,
+      0xFA, 0x00, 0x28, 0x02, 0xD1, 0x12, 0x23, 0x2B, 0x70, 0x16, 0xE0, 0x8C,
+      0x21, 0x0B, 0x58, 0xDB, 0x00, 0x01, 0xD4, 0x2F, 0x23, 0xF7, 0xE7, 0x93,
+      0x30, 0x00, 0x78, 0x30, 0x72, 0x20, 0x79, 0x00, 0x02, 0xE1, 0x78, 0x08,
+      0x43, 0xB0, 0x71, 0x03, 0x0A, 0xF3, 0x71, 0x00, 0x23, 0x2B, 0x70, 0x28,
+      0x23, 0x02, 0x20, 0x58, 0x55, 0x03, 0x23, 0xEB, 0x70, 0x70, 0xBD, 0x10,
+      0xB5, 0x90, 0xB0, 0x04, 0x1C, 0x28, 0x23, 0x00, 0x20, 0x18, 0x55, 0x40,
+      0x22, 0x68, 0x46, 0x00, 0x21, 0x01, 0xF0, 0xF5, 0xFA, 0xFF, 0x23, 0x68,
+      0x46, 0x03, 0x70, 0x43, 0x70, 0x83, 0x70, 0x03, 0x23, 0xC3, 0x70, 0xFE,
+      0x23, 0x01, 0xA8, 0x03, 0x70, 0xFF, 0x23, 0x43, 0x70, 0xEF, 0x23, 0x83,
+      0x70, 0xFF, 0x23, 0xC3, 0x70, 0x02, 0xA8, 0x03, 0x70, 0x43, 0x70, 0xEF,
+      0x23, 0x83, 0x70, 0x1F, 0x23, 0xC3, 0x70, 0xF2, 0x23, 0x03, 0xA8, 0x03,
+      0x70, 0x0F, 0x23, 0x43, 0x70, 0xE8, 0x23, 0x83, 0x70, 0xFE, 0x23, 0xC3,
+      0x70, 0x3F, 0x23, 0x04, 0xA8, 0x03, 0x70, 0x00, 0x22, 0x15, 0x48, 0x01,
+      0x78, 0x04, 0x20, 0x08, 0x40, 0x00, 0xD0, 0xF7, 0x22, 0x04, 0xAB, 0x5A,
+      0x70, 0x00, 0x22, 0x00, 0x28, 0x00, 0xD0, 0x8F, 0x22, 0x04, 0xAB, 0x9A,
+      0x70, 0x00, 0x22, 0x00, 0x28, 0x00, 0xD0, 0xFF, 0x22, 0x04, 0xAB, 0xDA,
+      0x70, 0x00, 0x22, 0x00, 0x28, 0x00, 0xD0, 0x0C, 0x22, 0x00, 0x20, 0x8B,
+      0x07, 0x00, 0xD5, 0x10, 0x20, 0x02, 0x43, 0x05, 0xA8, 0x02, 0x70, 0x8B,
+      0x07, 0xDB, 0x0F, 0x06, 0xA8, 0x03, 0x70, 0x6B, 0x46, 0x40, 0x22, 0x21,
+      0x78, 0x03, 0x48, 0x99, 0xF7, 0xEC, 0xFB, 0x10, 0xB0, 0x10, 0xBD, 0xA8,
+      0x03, 0x08, 0x00, 0x02, 0x10,
+0x4C, 0xFC, 0x4A, 0x46, 0xC1, 0x08, 0x00, 0x00, 0x00, 0x30, 0xB5, 0x05, 0x1C,
+      0x2C, 0x1C, 0x0D, 0x48, 0x03, 0x68, 0x9B, 0x07, 0x0E, 0xD5, 0x0C, 0x48,
+      0x03, 0x68, 0x00, 0x2B, 0x00, 0xD0, 0x01, 0x23, 0x00, 0x2B, 0x04, 0xD0,
+      0x24, 0x21, 0x01, 0x23, 0x0B, 0x54, 0x7A, 0xF7, 0x40, 0xFD, 0x18, 0x34,
+      0x01, 0x23, 0x23, 0x73, 0x00, 0x23, 0xAB, 0x81, 0x28, 0x1C, 0x91, 0xF7,
+      0xAA, 0xF9, 0x30, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0xAC, 0x8A, 0x0E, 0x00,
+      0x14, 0x4A, 0x08, 0x00,
+0x4C, 0xFC, 0x10, 0xCC, 0xC1, 0x08, 0x00, 0xFF, 0x23, 0x37, 0x33, 0x98, 0x42,
+      0x00, 0xD9, 0x18, 0x1C, 0x70, 0x47,
+0x4C, 0xFC, 0xAC, 0xE8, 0xC1, 0x08, 0x00, 0x81, 0x7B, 0x05, 0x4A, 0x11, 0x60,
+      0x05, 0x4A, 0x11, 0x68, 0x05, 0x4A, 0x11, 0x68, 0x8C, 0x30, 0x49, 0x08,
+      0x01, 0x60, 0x70, 0x47, 0xC0, 0x46, 0x64, 0x82, 0x0E, 0x00, 0x88, 0x80,
+      0x0E, 0x00, 0x3C, 0x93, 0x0E, 0x00, 0x00, 0xB5, 0x03, 0x69, 0x1B, 0x04,
+      0x0E, 0xD5, 0x08, 0x49, 0x0B, 0x68, 0x00, 0x2B, 0x0A, 0xD1, 0x90, 0x23,
+      0x19, 0x5C, 0x04, 0x29, 0x06, 0xD1, 0x0B, 0x21, 0x06, 0x23, 0x00, 0x22,
+      0x83, 0xF7, 0x0C, 0xFC, 0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x00, 0xBD,
+      0xC0, 0x46, 0x5C, 0x40, 0x08, 0x00, 0x03, 0x68, 0x59, 0x06, 0x09, 0x0F,
+      0x01, 0x29, 0x04, 0xD9, 0x4B, 0x1F, 0x03, 0x2B, 0x01, 0xD3, 0x09, 0x29,
+      0x1A, 0xD1, 0x03, 0x68, 0x9B, 0x05, 0xDB, 0x0F, 0x82, 0x7F, 0x93, 0x42,
+      0x04, 0xD1, 0xC3, 0x68, 0xFF, 0x22, 0x01, 0x32, 0x93, 0x43, 0xC3, 0x60,
+      0x01, 0x29, 0x02, 0xD8, 0x02, 0x23, 0x43, 0x72, 0x05, 0xE0, 0x03, 0x23,
+      0x43, 0x72, 0x06, 0x20, 0x4B, 0x1F, 0x03, 0x2B, 0x00, 0xD3, 0x05, 0x20,
+      0x03, 0x49, 0x08, 0x70, 0x00, 0x20, 0x00, 0xE0, 0x01, 0x20, 0x70, 0x47,
+      0xC0, 0x46, 0xB7, 0x6A, 0x08, 0x00,
+0x4C, 0xFC, 0x26, 0xD0, 0xC2, 0x08, 0x00, 0x83, 0x7C, 0x07, 0x2B, 0x02, 0xD1,
+      0x02, 0x23, 0x83, 0x74, 0x08, 0xE0, 0x00, 0x20, 0x02, 0x2B, 0x00, 0xD1,
+      0x01, 0x20, 0x00, 0x28, 0x02, 0xD1, 0x00, 0x06, 0x00, 0x0E, 0x00, 0xE0,
+      0x01, 0x20, 0x70, 0x47,
+0x4C, 0xFC, 0x5C, 0x24, 0xC3, 0x08, 0x00, 0x00, 0x23, 0x13, 0x48, 0x03, 0x60,
+      0x70, 0x47, 0x10, 0xB5, 0x04, 0x1C, 0x00, 0x20, 0x10, 0x49, 0x0B, 0x68,
+      0x03, 0x2B, 0x09, 0xD2, 0x10, 0x20, 0x9F, 0xF7, 0x16, 0xFD, 0x00, 0x28,
+      0x04, 0xD0, 0x0B, 0x49, 0x0B, 0x68, 0x01, 0x33, 0x0B, 0x60, 0x05, 0xE0,
+      0xE3, 0x7B, 0xDB, 0x07, 0x02, 0xD5, 0x00, 0x23, 0x08, 0x49, 0x0B, 0x70,
+      0x10, 0xBD, 0x00, 0xB5, 0x01, 0xF0, 0x9D, 0xF9, 0x04, 0x4A, 0x11, 0x68,
+      0x00, 0x29, 0x01, 0xD0, 0x4B, 0x1E, 0x13, 0x60, 0x01, 0xF0, 0x9D, 0xF9,
+      0x00, 0xBD, 0x44, 0xD8, 0x08, 0x00, 0xC4, 0x6A, 0x08, 0x00,
+0x4C, 0xFC, 0x9C, 0x90, 0xC3, 0x08, 0x00, 0x00, 0xB5, 0x0B, 0x7B, 0x0C, 0x31,
+      0x1B, 0x06, 0x5B, 0x0E, 0x03, 0x2B, 0x06, 0xD1, 0x49, 0x78, 0x17, 0x29,
+      0x03, 0xD3, 0x18, 0x29, 0x01, 0xD8, 0x00, 0xF0, 0x01, 0xF8, 0x00, 0xBD,
+      0xF0, 0xB5, 0x00, 0x68, 0x43, 0x01, 0x1B, 0x48, 0xC5, 0x18, 0x80, 0x27,
+      0x0F, 0x40, 0x49, 0x06, 0x49, 0x0E, 0xAC, 0x68, 0x00, 0x2C, 0x2D, 0xD0,
+      0x26, 0x68, 0x32, 0x1C, 0x10, 0x1C, 0x00, 0x2F, 0x06, 0xD0, 0x43, 0x7B,
+      0x8B, 0x42, 0x01, 0xD0, 0x00, 0x23, 0x00, 0xE0, 0x01, 0x23, 0x07, 0xE0,
+      0x03, 0x7B, 0x1B, 0x06, 0x5B, 0x0E, 0x8B, 0x42, 0x01, 0xD0, 0x00, 0x23,
+      0x00, 0xE0, 0x01, 0x23, 0x00, 0x2B, 0x14, 0xD0, 0x21, 0x1C, 0x00, 0xE0,
+      0x19, 0x1C, 0x0B, 0x68, 0x93, 0x42, 0xFB, 0xD1, 0x91, 0x42, 0x02, 0xD1,
+      0x00, 0x23, 0xAB, 0x60, 0x04, 0xE0, 0x94, 0x42, 0x00, 0xD1, 0xA9, 0x60,
+      0x13, 0x68, 0x0B, 0x60, 0x00, 0x23, 0x13, 0x60, 0x9F, 0xF7, 0xBD, 0xFC,
+      0x02, 0xE0, 0x12, 0x68, 0xB2, 0x42, 0xD3, 0xD1, 0xF0, 0xBD, 0x14, 0x24,
+      0x08, 0x00,
+0x4C, 0xFC, 0x3C, 0x40, 0xC4, 0x08, 0x00, 0x00, 0x21, 0x88, 0x00, 0x0B, 0x18,
+      0x9B, 0x01, 0x0A, 0x48, 0x18, 0x18, 0xD0, 0x30, 0x00, 0x68, 0xC0, 0x04,
+      0x01, 0xD5, 0x01, 0x20, 0x03, 0xE0, 0x01, 0x31, 0x03, 0x29, 0xF1, 0xD3,
+      0x00, 0x20, 0x70, 0x47, 0x00, 0xB5, 0xFF, 0xF7, 0xEC, 0xFF, 0x00, 0x28,
+      0x01, 0xD0, 0x00, 0x20, 0x00, 0xE0, 0x01, 0x20, 0x00, 0xBD, 0x40, 0x20,
+      0x08, 0x00,
+0x4C, 0xFC, 0x54, 0xEC, 0xC7, 0x08, 0x00, 0x10, 0xB5, 0x82, 0xB0, 0x82, 0x7B,
+      0x0D, 0x4C, 0x22, 0x60, 0x0D, 0x4C, 0x23, 0x68, 0x00, 0x93, 0x0C, 0x4C,
+      0x23, 0x68, 0x00, 0x93, 0x0C, 0x4C, 0x22, 0x68, 0x01, 0x92, 0x9B, 0x07,
+      0x9B, 0x0F, 0x03, 0x2B, 0x07, 0xD1, 0x09, 0x4C, 0x23, 0x68, 0x9A, 0x42,
+      0x03, 0xD9, 0x92, 0xF7, 0x99, 0xFE, 0x01, 0x20, 0x00, 0xE0, 0x00, 0x20,
+      0x02, 0xB0, 0x10, 0xBD, 0xC0, 0x46, 0x64, 0x82, 0x0E, 0x00, 0x88, 0x80,
+      0x0E, 0x00, 0x3C, 0x93, 0x0E, 0x00, 0x8C, 0x82, 0x0E, 0x00, 0x74, 0x05,
+      0x08, 0x00,
+0x4C, 0xFC, 0xA0, 0x50, 0xC8, 0x08, 0x00, 0x70, 0xB5, 0x04, 0x1C, 0x0D, 0x1C,
+      0x01, 0x20, 0x1E, 0x49, 0x0B, 0x78, 0x00, 0x2B, 0x01, 0xD0, 0x00, 0x2C,
+      0x03, 0xD1, 0x00, 0x20, 0x90, 0xF7, 0x0A, 0xFA, 0x30, 0xE0, 0x01, 0x2D,
+      0x2A, 0xD1, 0xE1, 0x7B, 0x00, 0x29, 0x0A, 0xD1, 0x18, 0x49, 0x08, 0x68,
+      0x01, 0x23, 0x5B, 0x02, 0x18, 0x40, 0x98, 0x42, 0x20, 0xD1, 0x08, 0x60,
+      0x00, 0x23, 0xA3, 0x81, 0x1A, 0xE0, 0x00, 0x21, 0xCB, 0x43, 0x12, 0x4E,
+      0x33, 0x60, 0x31, 0x68, 0x01, 0x22, 0x12, 0x04, 0x0A, 0x40, 0x01, 0xD1,
+      0x10, 0x06, 0x00, 0x0E, 0x8A, 0x03, 0x0B, 0xD5, 0x0E, 0x4A, 0x13, 0x68,
+      0x19, 0x06, 0x09, 0x0E, 0x0D, 0x4A, 0x13, 0x78, 0x99, 0x42, 0x07, 0xD3,
+      0x0C, 0x4A, 0x13, 0x78, 0x99, 0x42, 0x03, 0xD8, 0x01, 0x28, 0x01, 0xD1,
+      0x79, 0xF7, 0x4B, 0xFE, 0x29, 0x1C, 0x20, 0x1C, 0x90, 0xF7, 0x83, 0xFB,
+      0x00, 0x20, 0x70, 0xBD, 0xC0, 0x46, 0xC2, 0x6C, 0x08, 0x00, 0x0C, 0x80,
+      0x0E, 0x00, 0x08, 0x93, 0x0E, 0x00, 0x30, 0x86, 0x0E, 0x00, 0x94, 0x05,
+      0x08, 0x00, 0x95, 0x05, 0x08, 0x00,
+0x4C, 0xFC, 0xFF, 0xF8, 0xC8, 0x08, 0x00, 0x30, 0xB5, 0x04, 0x1C, 0xA5, 0x6C,
+      0xA3, 0x7C, 0x05, 0x2B, 0x06, 0xD1, 0xE0, 0x6C, 0x76, 0xF7, 0x1E, 0xFC,
+      0x20, 0x6D, 0x76, 0xF7, 0xFF, 0xFB, 0x2E, 0xE0, 0x04, 0x2B, 0x03, 0xD1,
+      0x20, 0x1C, 0x7A, 0xF7, 0x69, 0xF9, 0x85, 0xE0, 0xA3, 0x7C, 0x03, 0x2B,
+      0x03, 0xD1, 0x20, 0x1C, 0x7D, 0xF7, 0xEF, 0xFA, 0x7E, 0xE0, 0x00, 0x2B,
+      0x7C, 0xD0, 0x01, 0x21, 0xA0, 0x7C, 0x06, 0x28, 0x04, 0xD0, 0x08, 0x28,
+      0x02, 0xD0, 0x07, 0x28, 0x00, 0xD0, 0x00, 0x21, 0x00, 0x29, 0x71, 0xD1,
+      0xA3, 0x7C, 0x09, 0x2B, 0x08, 0xD1, 0x20, 0x1C, 0x7D, 0xF7, 0xDB, 0xFA,
+      0xE0, 0x6C, 0x76, 0xF7, 0xF7, 0xFB, 0x20, 0x6D, 0x76, 0xF7, 0xD8, 0xFB,
+      0x20, 0x1C, 0x01, 0x21, 0x7A, 0xF7, 0x7E, 0xFC, 0x00, 0x28, 0x02, 0xDB,
+      0x20, 0x1C, 0x7A, 0xF7, 0x3F, 0xF9, 0x63, 0x8C, 0x02, 0x2B, 0x59, 0xD1,
+      0xA8, 0x7B, 0x2D, 0x4A, 0x10, 0x60, 0x2D, 0x4A, 0x10, 0x68, 0x2D, 0x4A,
+      0x10, 0x68, 0x40, 0x08, 0x8C, 0x23, 0x59, 0x59, 0x9F, 0xF7, 0xF5, 0xFB,
+      0x92, 0x23, 0x59, 0x5B, 0x00, 0x29, 0x10, 0xD0, 0x88, 0x42, 0x0E, 0xD9,
+      0xA3, 0x7C, 0x06, 0x2B, 0x0B, 0xD0, 0x08, 0x2B, 0x09, 0xD0, 0x20, 0x1C,
+      0x7A, 0xF7, 0x10, 0xF8, 0x5C, 0x35, 0x29, 0x7F, 0x01, 0x20, 0x80, 0x03,
+      0x82, 0xF7, 0xCA, 0xF9, 0x38, 0xE0, 0x6B, 0x6F, 0x5C, 0x35, 0x00, 0x2B,
+      0x1E, 0xD1, 0x01, 0x21, 0x28, 0x7F, 0x81, 0x40, 0x1D, 0x4A, 0x10, 0x68,
+      0x08, 0x40, 0x2D, 0xD0, 0x5C, 0x34, 0x23, 0x78, 0x28, 0x1C, 0x00, 0x2B,
+      0x0A, 0xD0, 0x00, 0x22, 0xD1, 0x43, 0x97, 0xF7, 0x7A, 0xF9, 0xAB, 0x69,
+      0x00, 0x2B, 0x21, 0xD0, 0x01, 0x23, 0x6B, 0x75, 0xA3, 0x70, 0x1D, 0xE0,
+      0x01, 0x22, 0xD1, 0x43, 0x97,
+0x4C, 0xFC, 0x51, 0xF3, 0xC9, 0x08, 0x00, 0xF7, 0x6F, 0xF9, 0xAB, 0x69, 0x00,
+      0x2B, 0x16, 0xD0, 0x09, 0xE0, 0x28, 0x1C, 0x43, 0x7D, 0x0C, 0x30, 0x00,
+      0x2B, 0x10, 0xD1, 0x03, 0x68, 0x5B, 0x06, 0x1B, 0x0F, 0x03, 0x2B, 0x02,
+      0xD1, 0x01, 0x23, 0x6B, 0x75, 0x08, 0xE0, 0x00, 0x23, 0xAB, 0x61, 0x01,
+      0x23, 0xC3, 0x72, 0x00, 0x23, 0x83, 0x72, 0x28, 0x7F, 0x97, 0xF7, 0x59,
+      0xFC, 0x30, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0x64, 0x82, 0x0E, 0x00, 0x88,
+      0x80, 0x0E, 0x00, 0x3C, 0x93, 0x0E, 0x00, 0x94, 0x25, 0x08, 0x00,
+0x4C, 0xFC, 0x2C, 0x5C, 0xCA, 0x08, 0x00, 0x5C, 0x30, 0x01, 0x23, 0x00, 0x7F,
+      0x83, 0x40, 0x05, 0x4A, 0x10, 0x68, 0x05, 0x4A, 0x11, 0x68, 0x08, 0x43,
+      0x18, 0x40, 0x01, 0xD0, 0x00, 0x20, 0x00, 0xE0, 0x01, 0x20, 0x70, 0x47,
+      0xC0, 0x46, 0x74, 0x0D, 0x08, 0x00, 0x94, 0x25, 0x08, 0x00,
+0x4C, 0xFC, 0x32, 0x98, 0xCA, 0x08, 0x00, 0x80, 0x6C, 0x83, 0x6E, 0xDB, 0x05,
+      0x02, 0xD5, 0xA3, 0x30, 0x00, 0x21, 0x01, 0x70, 0x70, 0x47, 0x10, 0xB5,
+      0x02, 0x24, 0x88, 0x30, 0x00, 0x88, 0x06, 0x21, 0x41, 0x43, 0xC8, 0x20,
+      0xAF, 0xF7, 0xBF, 0xFE, 0x02, 0x28, 0x01, 0xDB, 0x04, 0x04, 0x24, 0x0C,
+      0x20, 0x1C, 0x10, 0xBD,
+0x4C, 0xFC, 0x54, 0xD4, 0xCA, 0x08, 0x00, 0x70, 0xB5, 0x04, 0x1C, 0x0E, 0x1C,
+      0x20, 0x7F, 0x7F, 0xF7, 0xAD, 0xFF, 0x05, 0x1C, 0x31, 0x1C, 0x20, 0x1C,
+      0x7F, 0xF7, 0xD4, 0xFA, 0x92, 0x35, 0x28, 0x78, 0x13, 0x28, 0x16, 0xD1,
+      0x23, 0x68, 0x5B, 0x06, 0x1B, 0x0F, 0x01, 0x2B, 0x11, 0xD9, 0x60, 0x68,
+      0xC3, 0x04, 0x9B, 0x0D, 0x0D, 0xD0, 0x80, 0x07, 0x80, 0x0F, 0x0A, 0xD0,
+      0x03, 0x28, 0x08, 0xD0, 0x01, 0x23, 0x63, 0x72, 0xE3, 0x68, 0xFF, 0x20,
+      0x01, 0x30, 0x83, 0x43, 0xE3, 0x60, 0x01, 0x20, 0x00, 0xE0, 0x00, 0x20,
+      0x70, 0xBD,
+0x4C, 0xFC, 0xF8, 0x48, 0xCB, 0x08, 0x00, 0x10, 0xB5, 0x04, 0x1C, 0x21, 0x69,
+      0x0B, 0x06, 0xDB, 0x0E, 0x08, 0x2B, 0x03, 0xD3, 0x01, 0x21, 0x88, 0xF7,
+      0x06, 0xFC, 0x05, 0xE0, 0x00, 0x29, 0x03, 0xD5, 0x20, 0x1C, 0x00, 0x21,
+      0x83, 0xF7, 0xD5, 0xFB, 0x20, 0x1C, 0x97, 0xF7, 0xAD, 0xFE, 0x10, 0xBD,
+      0x00, 0x00, 0x30, 0xB5, 0x1E, 0x4D, 0x00, 0x29, 0x2F, 0xD1, 0x04, 0x1C,
+      0x5A, 0x23, 0x18, 0x5D, 0x1C, 0x49, 0x08, 0x60, 0x63, 0x6D, 0x1B, 0x49,
+      0x0B, 0x60, 0x45, 0x23, 0x18, 0x5D, 0x7F, 0xF7, 0x6C, 0xFA, 0x19, 0x48,
+      0xE8, 0x67, 0xA3, 0x6C, 0x5C, 0x33, 0x5B, 0x7F, 0x18, 0x48, 0x02, 0x2B,
+      0x0B, 0xD1, 0x17, 0x4B, 0x03, 0x60, 0x17, 0x4B, 0x18, 0x48, 0x03, 0x60,
+      0x18, 0x4B, 0x43, 0x60, 0x18, 0x4B, 0x18, 0x48, 0x03, 0x60, 0x18, 0x4B,
+      0x0D, 0xE0, 0x18, 0x4B, 0x03, 0x60, 0x18, 0x4B, 0x19, 0x48, 0x03, 0x60,
+      0x19, 0x4B, 0x10, 0x48, 0x03, 0x60, 0x18, 0x4B, 0x43, 0x60, 0x18, 0x4B,
+      0x11, 0x48, 0x03, 0x60, 0x18, 0x4B, 0x43, 0x60, 0x05, 0xE0, 0x2B, 0x68,
+      0x9B, 0x08, 0x9B, 0x00, 0x01, 0x21, 0x19, 0x43, 0x29, 0x60, 0x30, 0xBC,
+      0x08, 0xBC, 0x18, 0x47, 0xC0, 0x46, 0x88, 0x89, 0x0E, 0x00, 0x0C, 0x94,
+      0x0E, 0x00, 0x64, 0x8A, 0x0E, 0x00, 0x63, 0x8C, 0x31, 0x00, 0x08, 0x8A,
+      0x0E, 0x00, 0x89, 0x10, 0xF2, 0x01, 0xAA, 0x94, 0xF2, 0x01, 0x20, 0x8A,
+      0x0E, 0x00, 0xCD, 0x18, 0xF3, 0x01, 0xEB, 0x8C, 0xF3, 0x01, 0x30, 0x8A,
+      0x0E, 0x00, 0x0E, 0x21, 0xF4, 0x01, 0x89, 0xA4, 0xF4, 0x01, 0xEC, 0x33,
+      0x66, 0x01, 0x18, 0x8A, 0x0E, 0x00, 0xAA, 0x28, 0x25, 0x1F, 0xCD, 0xB4,
+      0xF6, 0x01, 0xEB, 0xAC, 0xF5, 0x01, 0x0E, 0x39, 0xF7, 0x01,
+0x4C, 0xFC, 0x34, 0x44, 0xCC, 0x08, 0x00, 0x06, 0x49, 0x01, 0x23, 0x06, 0x4A,
+      0x13, 0x60, 0x06, 0x4B, 0x0B, 0x60, 0x48, 0x60, 0x00, 0x20, 0x88, 0x60,
+      0x05, 0x48, 0xC8, 0x60, 0x05, 0x48, 0x08, 0x61, 0x70, 0x47, 0x00, 0x81,
+      0x0C, 0x00, 0x98, 0x8A, 0x0E, 0x00, 0x00, 0x8B, 0x0E, 0x00, 0xF0, 0x20,
+      0x0A, 0x0C, 0xC7, 0xF0, 0x00, 0x00,
+0x4C, 0xFC, 0xFF, 0xB8, 0xCC, 0x08, 0x00, 0xF0, 0xB5, 0x82, 0xB0, 0x05, 0x1C,
+      0x3C, 0x4F, 0x3E, 0x1C, 0x40, 0x36, 0x30, 0x88, 0x01, 0x1C, 0x69, 0x84,
+      0xFA, 0x6A, 0x13, 0x0E, 0x9A, 0x07, 0x02, 0xD5, 0xF4, 0x88, 0x84, 0x42,
+      0x00, 0xD3, 0x00, 0x24, 0x2C, 0x84, 0x2C, 0x8C, 0x35, 0x4A, 0x13, 0x68,
+      0x00, 0x2B, 0x28, 0xD1, 0x34, 0x4A, 0x53, 0x79, 0x00, 0x2B, 0x2E, 0xD0,
+      0x13, 0x78, 0x00, 0x2B, 0x2B, 0xD0, 0x31, 0x4A, 0x12, 0x68, 0x01, 0x92,
+      0x00, 0x2A, 0x18, 0xD0, 0x30, 0x4A, 0x13, 0x68, 0x00, 0x2B, 0x14, 0xD0,
+      0x2F, 0x4A, 0x13, 0x78, 0x00, 0x2B, 0x10, 0xD0, 0x01, 0x98, 0x40, 0x89,
+      0x00, 0x90, 0x88, 0x42, 0x05, 0xD2, 0xAF, 0xF7, 0x8E, 0xFD, 0x00, 0x9A,
+      0x01, 0x1C, 0x51, 0x43, 0x00, 0xE0, 0x01, 0x1C, 0x69, 0x84, 0x69, 0x8C,
+      0x01, 0x9A, 0x10, 0x89, 0x0A, 0xE0, 0x25, 0x4A, 0x13, 0x78, 0x00, 0x2B,
+      0x09, 0xD1, 0xB3, 0x88, 0x5A, 0x10, 0x82, 0x42, 0x01, 0xDA, 0x10, 0x1C,
+      0x00, 0xE0, 0x40, 0x10, 0x00, 0x19, 0x28, 0x84, 0x2C, 0x8C, 0xFB, 0x6A,
+      0x9B, 0x00, 0x05, 0xD5, 0x70, 0x88, 0x43, 0x00, 0x8B, 0x42, 0x01, 0xDC,
+      0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x4B, 0x23, 0x58, 0x55, 0x3B, 0x68,
+      0x9B, 0x00, 0x9B, 0x0F, 0x98, 0x00, 0x20, 0x22, 0x02, 0x43, 0x2A, 0x63,
+      0x16, 0x48, 0x03, 0x68, 0x00, 0x2B, 0x00, 0xD0, 0x01, 0x23, 0x00, 0x2B,
+      0x03, 0xD0, 0x40, 0x30, 0x00, 0x88, 0x88, 0x42, 0x09, 0xD3, 0x11, 0x48,
+      0x03, 0x68, 0x00, 0x2B, 0x00, 0xD0, 0x01, 0x23, 0x00, 0x2B, 0x05, 0xD0,
+      0x80, 0x8C, 0x88, 0x42, 0x02, 0xD2, 0x09, 0x1A, 0x69, 0x84, 0x69, 0x8C,
+      0x8C, 0x42, 0x01, 0xD9, 0x63, 0x1A, 0x2B, 0x84, 0x02, 0xB0, 0xF0, 0xBD,
+      0xC0, 0x46, 0xA0, 0x1E, 0x08,
+0x4C, 0xFC, 0x8D, 0xB3, 0xCD, 0x08, 0x00, 0x00, 0x88, 0x0D, 0x08, 0x00, 0x98,
+      0x1C, 0x08, 0x00, 0x10, 0x12, 0x08, 0x00, 0x0C, 0x12, 0x08, 0x00, 0x09,
+      0x15, 0x08, 0x00, 0xA0, 0x04, 0x08, 0x00, 0x88, 0x2E, 0x08, 0x00, 0x5C,
+      0x2E, 0x08, 0x00, 0x10, 0xB5, 0x12, 0x4C, 0x21, 0x68, 0x82, 0x00, 0x83,
+      0x18, 0xD9, 0x40, 0xC9, 0x06, 0xC9, 0x0E, 0x05, 0xD0, 0x01, 0x23, 0x83,
+      0x40, 0x0E, 0x4A, 0x10, 0x78, 0x18, 0x43, 0x10, 0x70, 0x48, 0x00, 0x10,
+      0xBD, 0x10, 0xB5, 0x01, 0x1C, 0x01, 0x23, 0x8B, 0x40, 0x09, 0x4A, 0x10,
+      0x78, 0x18, 0x40, 0x0A, 0xD0, 0x06, 0x4C, 0x20, 0x68, 0x8A, 0x00, 0x89,
+      0x18, 0x0F, 0x31, 0xC8, 0x40, 0xC0, 0x06, 0xC0, 0x0E, 0x14, 0x23, 0x18,
+      0x1A, 0x40, 0x00, 0x10, 0xBD, 0xC0, 0x46, 0x1C, 0x0E, 0x0E, 0x00, 0x8E,
+      0xD8, 0x08, 0x00, 0x00, 0x23, 0x1E, 0x49, 0x1E, 0x4A, 0x0B, 0x70, 0x13,
+      0x70, 0x1E, 0x48, 0x03, 0x60, 0x1E, 0x48, 0x03, 0x60, 0x00, 0xBD,
+0x4C, 0xFC, 0xB6, 0x56, 0xCE, 0x08, 0x00, 0x00, 0xF0, 0x33, 0xF8, 0x00, 0xBD,
+      0x38, 0x1C, 0xFF, 0xF7, 0xCA, 0xFF, 0x00, 0x28, 0x08, 0xD1, 0x68, 0x69,
+      0x4E, 0x23, 0xC1, 0x5E, 0x75, 0xF7, 0x79, 0xFE, 0x10, 0x48, 0x62, 0x21,
+      0x40, 0x18, 0x87, 0x46, 0x04, 0x1C, 0xFB, 0x00, 0x0E, 0x48, 0x1E, 0x18,
+      0x76, 0xF7, 0xD3, 0xFC, 0x01, 0xB4, 0x38, 0x1C, 0xFF, 0xF7, 0xA4, 0xFF,
+      0x00, 0x28, 0x06, 0xD0, 0xFB, 0x00, 0x0A, 0x49, 0x5D, 0x18, 0x04, 0x1C,
+      0x01, 0xBC, 0x76, 0xF7, 0xF4, 0xFC, 0x01, 0xBC, 0x76, 0xF7, 0x29, 0xFD,
+      0x8F, 0xD8, 0x08, 0x00, 0x8E, 0xD8, 0x08, 0x00, 0x00, 0x0E, 0x0E, 0x00,
+      0x2C, 0x0E, 0x0E, 0x00, 0xF7, 0x37, 0x00, 0x00, 0x08, 0x0E, 0x0E, 0x00,
+      0x04, 0x0E, 0x0E, 0x00, 0x10, 0xB5, 0x03, 0x1C, 0x1C, 0x33, 0x01, 0x21,
+      0x99, 0x40, 0x01, 0x22, 0x82, 0x40, 0xD2, 0x43, 0x09, 0x4B, 0x18, 0x78,
+      0x10, 0x40, 0x18, 0x70, 0x08, 0x4C, 0x23, 0x78, 0x13, 0x40, 0x23, 0x70,
+      0x00, 0x28, 0x04, 0xD1, 0x01, 0x20, 0x01, 0x43, 0x00, 0x23, 0x05, 0x48,
+      0x03, 0x60, 0x05, 0x48, 0x03, 0x68, 0x8B, 0x43, 0x03, 0x60, 0x10, 0xBD,
+      0x8F, 0xD8, 0x08, 0x00, 0x8E, 0xD8, 0x08, 0x00, 0x2C, 0x0E, 0x0E, 0x00,
+      0x00, 0x0E, 0x0E, 0x00,
+0x4C, 0xFC, 0x66, 0x10, 0xCF, 0x08, 0x00, 0x70, 0xB5, 0x00, 0x25, 0x02, 0x6A,
+      0x00, 0x2A, 0x1A, 0xD0, 0x53, 0x68, 0x14, 0x68, 0x63, 0x60, 0x1C, 0x60,
+      0x15, 0xE0, 0x64, 0x68, 0x63, 0x68, 0x26, 0x68, 0x73, 0x60, 0x1E, 0x60,
+      0x46, 0x69, 0x44, 0x61, 0x03, 0x1C, 0x10, 0x33, 0x23, 0x60, 0x66, 0x60,
+      0x34, 0x60, 0x04, 0x1C, 0x4C, 0x34, 0x26, 0x88, 0x63, 0x88, 0x9B, 0x1B,
+      0x63, 0x80, 0xAD, 0x19, 0x43, 0x6B, 0x9B, 0x19, 0x43, 0x63, 0x8D, 0x42,
+      0x04, 0xD2, 0x04, 0x1C, 0xA3, 0x68, 0x08, 0x34, 0xA3, 0x42, 0xE2, 0xD1,
+      0x00, 0x2A, 0x06, 0xD0, 0x81, 0x68, 0x4A, 0x60, 0x11, 0x60, 0x03, 0x1C,
+      0x08, 0x33, 0x53, 0x60, 0x82, 0x60, 0x70, 0xBD,
+0x4C, 0xFC, 0x14, 0x8C, 0xCF, 0x08, 0x00, 0x03, 0x68, 0x5B, 0x06, 0x1B, 0x0F,
+      0x00, 0x20, 0x03, 0x2B, 0x00, 0xD1, 0x01, 0x20, 0x70, 0x47,
+0x4C, 0xFC, 0x84, 0x20, 0xD0, 0x08, 0x00, 0x30, 0xB5, 0x01, 0x1C, 0xE4, 0x20,
+      0x43, 0x58, 0x5B, 0x01, 0x5B, 0x0F, 0x10, 0xD1, 0x17, 0x4A, 0xB4, 0x23,
+      0xE4, 0x25, 0x68, 0x58, 0x00, 0x03, 0x80, 0x0F, 0x00, 0x01, 0x14, 0x4C,
+      0x20, 0x18, 0x58, 0x50, 0xC1, 0x60, 0x13, 0x4D, 0x2B, 0x7B, 0x0A, 0x2B,
+      0x10, 0xD1, 0x12, 0x4A, 0x0E, 0xE0, 0x10, 0x48, 0x03, 0x7B, 0x0A, 0x2B,
+      0x0D, 0xD1, 0xB4, 0x23, 0xE4, 0x22, 0x50, 0x58, 0x00, 0x03, 0x80, 0x0F,
+      0x00, 0x01, 0x0A, 0x4A, 0x10, 0x18, 0x58, 0x50, 0xC1, 0x60, 0x0B, 0x4A,
+      0x82, 0x60, 0x77, 0xF7, 0xD6, 0xFE, 0x30, 0xBD, 0x10, 0xB5, 0x04, 0x1C,
+      0xB4, 0x34, 0x20, 0x68, 0x00, 0x28, 0x03, 0xD0, 0x77, 0xF7, 0xDE, 0xFE,
+      0x00, 0x23, 0x23, 0x60, 0x10, 0xBD, 0x93, 0x29, 0x00, 0x00, 0x10, 0x20,
+      0x08, 0x00, 0xC0, 0x1E, 0x08, 0x00, 0x41, 0x29, 0x00, 0x00, 0x55, 0x29,
+      0x00, 0x00,
+0x4C, 0xFC, 0x50, 0xB0, 0xD0, 0x08, 0x00, 0x00, 0xB5, 0x00, 0x23, 0x0E, 0x49,
+      0x4B, 0x70, 0xFF, 0x20, 0x00, 0x02, 0xA9, 0xF7, 0x5E, 0xFB, 0x00, 0x20,
+      0x08, 0xBC, 0x18, 0x47, 0x00, 0x00, 0x00, 0xB5, 0x0A, 0x48, 0x03, 0x68,
+      0x00, 0x2B, 0x09, 0xD0, 0x09, 0x48, 0x03, 0x78, 0x6F, 0x2B, 0x05, 0xD1,
+      0x00, 0x23, 0x03, 0x70, 0xFF, 0x20, 0x00, 0x02, 0xA9, 0xF7, 0x4B, 0xFB,
+      0x01, 0x20, 0x08, 0xBC, 0x18, 0x47, 0x00, 0x00, 0xC0, 0x46, 0xB0, 0x5F,
+      0x08, 0x00, 0xD4, 0x09, 0x08, 0x00, 0xB1, 0x5F, 0x08, 0x00,
+0x4C, 0xFC, 0x68, 0x0C, 0xD1, 0x08, 0x00, 0x00, 0xB5, 0x04, 0x4A, 0x13, 0x78,
+      0x59, 0x42, 0x09, 0x06, 0x09, 0x16, 0x00, 0xF0, 0x15, 0xF8, 0x00, 0xBD,
+      0xC0, 0x46, 0xD8, 0x03, 0x08, 0x00, 0x00, 0x21, 0xFF, 0x23, 0x15, 0x33,
+      0x4B, 0x43, 0x0E, 0x4A, 0x9A, 0x18, 0x90, 0x42, 0x03, 0xD1, 0x8B, 0x00,
+      0x0D, 0x48, 0xC0, 0x56, 0x03, 0xE0, 0x01, 0x31, 0x0A, 0x29, 0xF1, 0xDB,
+      0x00, 0x20, 0x70, 0x47, 0x10, 0xB5, 0x00, 0x22, 0xFF, 0x23, 0x15, 0x33,
+      0x53, 0x43, 0x05, 0x4C, 0x1B, 0x19, 0x98, 0x42, 0x03, 0xD1, 0x93, 0x00,
+      0x04, 0x48, 0xC1, 0x54, 0x02, 0xE0, 0x01, 0x32, 0x0A, 0x2A, 0xF1, 0xDB,
+      0x10, 0xBD, 0x4C, 0x32, 0x08, 0x00, 0x48, 0xD8, 0x08, 0x00,
+0x4C, 0xFC, 0xFF, 0x9C, 0xD1, 0x08, 0x00, 0x01, 0x1C, 0x00, 0x20, 0x88, 0x4B,
+      0x1A, 0x78, 0x13, 0x07, 0x03, 0xD5, 0xCB, 0x6A, 0x5B, 0x01, 0x00, 0xD5,
+      0x01, 0x20, 0x70, 0x47, 0x85, 0x49, 0x01, 0x22, 0x00, 0x68, 0x82, 0x40,
+      0x08, 0x88, 0x10, 0x43, 0x08, 0x80, 0x70, 0x47, 0x82, 0x49, 0x01, 0x22,
+      0x00, 0x68, 0x82, 0x40, 0x08, 0x88, 0x10, 0x43, 0x08, 0x80, 0x70, 0x47,
+      0xF0, 0xB5, 0x85, 0xB0, 0x06, 0x1C, 0x85, 0xF7, 0xF4, 0xFB, 0x01, 0x90,
+      0x35, 0x1C, 0x88, 0x35, 0xAC, 0x78, 0x29, 0x79, 0x00, 0x91, 0x30, 0x1C,
+      0xFF, 0xF7, 0xD7, 0xFF, 0x00, 0x28, 0x03, 0xD1, 0x30, 0x1C, 0x82, 0xF7,
+      0x40, 0xFC, 0x39, 0xE0, 0x01, 0x27, 0x74, 0x49, 0x4B, 0x68, 0x98, 0x7B,
+      0x01, 0x28, 0x03, 0xD3, 0x0B, 0xD0, 0x02, 0x28, 0x10, 0xD0, 0x11, 0xE0,
+      0x01, 0x98, 0x43, 0x1E, 0x9C, 0x42, 0x02, 0xD0, 0x01, 0x34, 0x9C, 0x42,
+      0x0A, 0xD1, 0x03, 0x27, 0x08, 0xE0, 0x00, 0x98, 0x84, 0x42, 0x02, 0xD0,
+      0x01, 0x3C, 0x84, 0x42, 0x02, 0xD1, 0x00, 0xE0, 0x00, 0x9C, 0x02, 0x27,
+      0xAC, 0x70, 0x20, 0x1C, 0x85, 0xF7, 0xCF, 0xFB, 0x01, 0x1C, 0x30, 0x1C,
+      0x7F, 0xF7, 0x6F, 0xFD, 0x00, 0x20, 0x00, 0x21, 0x01, 0x22, 0x82, 0x40,
+      0x52, 0x07, 0x00, 0xD0, 0x39, 0x1C, 0x83, 0x00, 0x02, 0xAA, 0xD1, 0x50,
+      0x01, 0x30, 0x03, 0x28, 0xF3, 0xD3, 0x10, 0x1C, 0x16, 0xC8, 0x90, 0x00,
+      0x01, 0x43, 0x23, 0x01, 0x19, 0x43, 0x30, 0x1C, 0x00, 0xF0, 0x69, 0xF8,
+      0x05, 0xB0, 0xF0, 0xBC, 0x08, 0xBC, 0x18, 0x47, 0xF0, 0xB5, 0x83, 0xB0,
+      0x01, 0x24, 0x01, 0x68, 0x8C, 0x40, 0x06, 0x1C, 0xFF, 0xF7, 0x8B, 0xFF,
+      0x00, 0x28, 0x03, 0xD1, 0x30, 0x1C, 0x82, 0xF7, 0xF4, 0xFB, 0x38, 0xE0,
+      0x4D, 0x4A, 0x4D, 0x4D, 0xFF,
+0x4C, 0xFC, 0xFF, 0x97, 0xD2, 0x08, 0x00, 0x27, 0x11, 0x37, 0xF3, 0x59, 0x01,
+      0x20, 0xC0, 0x06, 0x83, 0x43, 0xF3, 0x51, 0x4A, 0x4F, 0x78, 0x68, 0x81,
+      0x7B, 0x8B, 0x07, 0x9B, 0x0F, 0x00, 0x93, 0x0B, 0x07, 0x9B, 0x0F, 0x01,
+      0x93, 0x8B, 0x06, 0x9B, 0x0F, 0x02, 0x93, 0x00, 0x21, 0x8B, 0x00, 0x68,
+      0x46, 0xC0, 0x58, 0x01, 0x28, 0x04, 0xD3, 0x07, 0xD0, 0x03, 0x28, 0x0C,
+      0xD3, 0x0F, 0xD0, 0x15, 0xE0, 0x4B, 0x00, 0xD0, 0x5A, 0x20, 0x43, 0x0D,
+      0xE0, 0x4B, 0x00, 0xD0, 0x5A, 0xA0, 0x43, 0xD0, 0x52, 0xE8, 0x5A, 0xA0,
+      0x43, 0x09, 0xE0, 0x4B, 0x00, 0xD0, 0x5A, 0x20, 0x43, 0xF7, 0xE7, 0x4B,
+      0x00, 0xD0, 0x5A, 0xA0, 0x43, 0xD0, 0x52, 0xE8, 0x5A, 0x20, 0x43, 0xE8,
+      0x52, 0x01, 0x31, 0x03, 0x29, 0xDC, 0xD3, 0x03, 0xB0, 0xF0, 0xBC, 0x08,
+      0xBC, 0x18, 0x47, 0x30, 0xB5, 0x05, 0x1C, 0x0C, 0x1C, 0x82, 0xF7, 0xE7,
+      0xFD, 0x01, 0x1C, 0x2B, 0x69, 0x1B, 0x04, 0xDB, 0x0F, 0xFE, 0x20, 0x18,
+      0x43, 0x08, 0x73, 0x1F, 0x23, 0x4B, 0x73, 0x8C, 0x73, 0xFF, 0x22, 0x11,
+      0x32, 0xAB, 0x58, 0x01, 0x20, 0xC0, 0x06, 0x03, 0x43, 0xAB, 0x50, 0x28,
+      0x1C, 0x96, 0xF7, 0x25, 0xFF, 0x30, 0xBD, 0x30, 0xB5, 0x04, 0x1C, 0x0D,
+      0x1C, 0x82, 0xF7, 0xCD, 0xFD, 0x23, 0x69, 0x1B, 0x04, 0xDB, 0x17, 0x59,
+      0x1C, 0xFE, 0x22, 0x0A, 0x43, 0x02, 0x73, 0x20, 0x23, 0x43, 0x73, 0x85,
+      0x73, 0x01, 0x1C, 0x20, 0x1C, 0x96, 0xF7, 0x11, 0xFF, 0x30, 0xBD, 0x70,
+      0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x16, 0x1C, 0xA3, 0x6A, 0x01, 0x20, 0x80,
+      0x04, 0x03, 0x40, 0x00, 0xD0, 0x01, 0x23, 0x00, 0x2B, 0x1F, 0xD0, 0x23,
+      0x6C, 0x5B, 0x00, 0x1C, 0xD4, 0x20, 0x1C, 0xFF, 0xF7, 0x08, 0xFF, 0x00,
+      0x28, 0x11, 0xD0, 0xFF, 0x20,
+0x4C, 0xFC, 0x46, 0x92, 0xD3, 0x08, 0x00, 0x11, 0x30, 0x23, 0x58, 0x1B, 0x01,
+      0x12, 0xD4, 0x1F, 0x2D, 0x05, 0xD1, 0x01, 0x21, 0x00, 0x2E, 0x00, 0xD0,
+      0x02, 0x21, 0x20, 0x1C, 0x01, 0xE0, 0x20, 0x1C, 0x00, 0x21, 0xFF, 0xF7,
+      0xAD, 0xFF, 0x03, 0xE0, 0x29, 0x1C, 0x20, 0x1C, 0x85, 0xF7, 0x8E, 0xFA,
+      0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x70, 0xBD, 0xA8, 0x03, 0x08, 0x00,
+      0x80, 0xD8, 0x08, 0x00, 0x86, 0xD8, 0x08, 0x00, 0x84, 0x3F, 0x08, 0x00,
+0x4C, 0xFC, 0xFF, 0xE4, 0xD3, 0x08, 0x00, 0xF0, 0xB5, 0x86, 0xB0, 0x5A, 0x4E,
+      0x5B, 0x49, 0x0B, 0x68, 0x9B, 0x05, 0x00, 0xD4, 0xAC, 0xE0, 0x00, 0x21,
+      0x02, 0x91, 0x58, 0x4D, 0x2B, 0x69, 0x18, 0x06, 0xC0, 0x0E, 0xDB, 0x02,
+      0x00, 0xD4, 0x9A, 0xE0, 0x08, 0x28, 0x02, 0xD0, 0x0C, 0x28, 0x00, 0xD0,
+      0x95, 0xE0, 0x28, 0x68, 0x90, 0xF7, 0xFE, 0xFF, 0x00, 0x28, 0x00, 0xD0,
+      0x8F, 0xE0, 0x00, 0x22, 0x11, 0x1C, 0x03, 0xAB, 0x07, 0xC3, 0x02, 0x99,
+      0x01, 0x31, 0x01, 0x91, 0x01, 0x24, 0x8C, 0x40, 0x8B, 0x19, 0x1F, 0x1D,
+      0x18, 0x79, 0x00, 0x28, 0x01, 0xD0, 0x01, 0x38, 0x18, 0x71, 0x28, 0x1C,
+      0xFF, 0xF7, 0xAD, 0xFE, 0x00, 0x28, 0x17, 0xD0, 0x69, 0x46, 0x03, 0x31,
+      0x01, 0x98, 0x7E, 0xF7, 0xF1, 0xFD, 0x28, 0x1C, 0xFF, 0xF7, 0x67, 0xFE,
+      0x6A, 0x46, 0x03, 0x21, 0x51, 0x56, 0x43, 0x1A, 0x40, 0x4A, 0x00, 0x20,
+      0x10, 0x56, 0x83, 0x42, 0x02, 0xDB, 0x01, 0x22, 0x03, 0x92, 0x05, 0x92,
+      0x28, 0x1C, 0xFF, 0xF7, 0x69, 0xFE, 0x07, 0xE0, 0x3B, 0x78, 0x00, 0x2B,
+      0x04, 0xD1, 0x30, 0x88, 0x20, 0x40, 0x01, 0xD0, 0x01, 0x21, 0x03, 0x91,
+      0x70, 0x88, 0x20, 0x40, 0x05, 0xD0, 0x38, 0x7B, 0x00, 0x28, 0x08, 0xD0,
+      0x01, 0x38, 0x38, 0x73, 0x05, 0xE0, 0x32, 0x49, 0xCB, 0x78, 0x3B, 0x73,
+      0x70, 0x88, 0x20, 0x43, 0x70, 0x80, 0x3B, 0x7B, 0x00, 0x2B, 0x01, 0xD1,
+      0x01, 0x21, 0x04, 0x91, 0x03, 0x98, 0x00, 0x28, 0x03, 0xD1, 0x92, 0xF7,
+      0x0D, 0xF9, 0x00, 0x28, 0x1E, 0xD0, 0x2A, 0x48, 0x41, 0x88, 0x02, 0x88,
+      0x0A, 0x40, 0x80, 0x88, 0x10, 0x40, 0x20, 0x40, 0x37, 0xD1, 0x05, 0x9A,
+      0x1F, 0x21, 0x28, 0x1C, 0xFF, 0xF7, 0x49, 0xFF, 0x00, 0x28, 0x30, 0xD0,
+      0x28, 0x1C, 0xFF, 0xF7, 0x5E,
+0x4C, 0xFC, 0xFF, 0xDF, 0xD4, 0x08, 0x00, 0xFE, 0x00, 0x28, 0x03, 0xD1, 0x21,
+      0x48, 0x03, 0x88, 0xA3, 0x43, 0x03, 0x80, 0x1D, 0x48, 0x83, 0x78, 0x3B,
+      0x70, 0x33, 0x88, 0xA3, 0x43, 0x33, 0x80, 0x20, 0xE0, 0x04, 0x98, 0x00,
+      0x28, 0x1D, 0xD0, 0x1A, 0x48, 0x41, 0x88, 0x02, 0x88, 0x0A, 0x40, 0x80,
+      0x88, 0x10, 0x40, 0x20, 0x40, 0x15, 0xD1, 0x20, 0x21, 0x28, 0x1C, 0x00,
+      0x22, 0xFF, 0xF7, 0x27, 0xFF, 0x00, 0x28, 0x0E, 0xD0, 0x28, 0x1C, 0xFF,
+      0xF7, 0x3C, 0xFE, 0x00, 0x28, 0x03, 0xD1, 0x0F, 0x48, 0x03, 0x88, 0xA3,
+      0x43, 0x03, 0x80, 0x0C, 0x49, 0xCB, 0x78, 0x3B, 0x73, 0x70, 0x88, 0x20,
+      0x43, 0x70, 0x80, 0xFF, 0x23, 0x15, 0x33, 0xED, 0x18, 0x02, 0x98, 0x01,
+      0x30, 0x02, 0x90, 0x0A, 0x28, 0x00, 0xD2, 0x55, 0xE7, 0x06, 0xB0, 0xF0,
+      0xBD, 0xC0, 0x46, 0xCC, 0x0E, 0x08, 0x00, 0x80, 0x1C, 0x08, 0x00, 0x4C,
+      0x32, 0x08, 0x00, 0x90, 0xD8, 0x08, 0x00, 0xD8, 0x03, 0x08, 0x00, 0x80,
+      0xD8, 0x08, 0x00, 0x86, 0xD8, 0x08, 0x00, 0x70, 0xB5, 0x1E, 0x4D, 0x01,
+      0x24, 0x84, 0x40, 0x06, 0x1C, 0x7F, 0xF7, 0x5E, 0xFA, 0xFF, 0xF7, 0x0D,
+      0xFE, 0x1B, 0x49, 0x0B, 0x88, 0xA3, 0x43, 0x24, 0x04, 0x24, 0x0C, 0x0B,
+      0x80, 0x4B, 0x88, 0x00, 0x28, 0x0E, 0xD0, 0xA3, 0x43, 0x4B, 0x80, 0x8B,
+      0x88, 0xA3, 0x43, 0x8B, 0x80, 0x15, 0x48, 0x03, 0x88, 0xA3, 0x43, 0x03,
+      0x80, 0x43, 0x88, 0xA3, 0x43, 0x43, 0x80, 0x83, 0x88, 0xA3, 0x43, 0x0D,
+      0xE0, 0x23, 0x43, 0x4B, 0x80, 0x8B, 0x88, 0x23, 0x43, 0x8B, 0x80, 0x0D,
+      0x48, 0x03, 0x88, 0xA3, 0x43, 0x03, 0x80, 0x43, 0x88, 0x23, 0x43, 0x43,
+      0x80, 0x83, 0x88, 0x23, 0x43, 0x83, 0x80, 0x2B, 0x88, 0xA3, 0x43, 0x2B,
+      0x80, 0x68, 0x88, 0x20, 0x43,
+0x4C, 0xFC, 0xFF, 0xDA, 0xD5, 0x08, 0x00, 0x68, 0x80, 0x06, 0x49, 0x73, 0x19,
+      0x18, 0x1D, 0x8B, 0x78, 0x03, 0x70, 0xCB, 0x78, 0x03, 0x73, 0x70, 0xBD,
+      0xCC, 0x0E, 0x08, 0x00, 0x80, 0xD8, 0x08, 0x00, 0x86, 0xD8, 0x08, 0x00,
+      0xD8, 0x03, 0x08, 0x00, 0x30, 0xB5, 0x1E, 0x4B, 0x1A, 0x78, 0x13, 0x07,
+      0x02, 0xD4, 0x98, 0xF7, 0x0B, 0xFD, 0x22, 0xE0, 0x0D, 0x1C, 0x04, 0x1C,
+      0x28, 0x23, 0x02, 0x21, 0x19, 0x54, 0x05, 0x23, 0xC3, 0x70, 0x28, 0x79,
+      0x00, 0x02, 0xE9, 0x78, 0x08, 0x43, 0xA0, 0x73, 0x03, 0x0A, 0xE3, 0x73,
+      0x08, 0x34, 0x7E, 0xF7, 0x72, 0xFF, 0x00, 0x28, 0x02, 0xD0, 0x69, 0x79,
+      0x01, 0x29, 0x02, 0xD9, 0x12, 0x23, 0x63, 0x71, 0x09, 0xE0, 0x00, 0x23,
+      0x63, 0x71, 0x85, 0xF7, 0xAD, 0xF9, 0x00, 0x21, 0x0A, 0x19, 0x10, 0x72,
+      0x01, 0x31, 0x03, 0x29, 0xFA, 0xD3, 0x30, 0xBD, 0x30, 0xB5, 0x05, 0x1C,
+      0x4C, 0x79, 0x08, 0x79, 0x00, 0x02, 0xC9, 0x78, 0x08, 0x43, 0x7E, 0xF7,
+      0x56, 0xFF, 0x00, 0x28, 0x02, 0xD1, 0x12, 0x23, 0x2B, 0x70, 0x02, 0xE0,
+      0x21, 0x1C, 0xFF, 0xF7, 0x4B, 0xFE, 0x30, 0xBD, 0xA8, 0x03, 0x08, 0x00,
+      0x78, 0x47, 0x00, 0x00, 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1,
+      0x34, 0xBD, 0x03, 0x00, 0x78, 0x47, 0x00, 0x00, 0x00, 0xC0, 0x9F, 0xE5,
+      0x1C, 0xFF, 0x2F, 0xE1, 0x28, 0xC1, 0x03, 0x00, 0x78, 0x47, 0x00, 0x00,
+      0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1, 0x50, 0x28, 0x03, 0x00,
+      0x78, 0x47, 0x00, 0x00, 0x00, 0xC0, 0x9F, 0xE5, 0x1C, 0xFF, 0x2F, 0xE1,
+      0x64, 0x28, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB1, 0xBA, 0x08, 0x00,
+      0x08, 0x00, 0x00, 0x00, 0xC9, 0xD0, 0x08, 0x00, 0x0C, 0x00, 0x00, 0x00,
+      0xB1, 0xD0, 0x08, 0x00, 0x0D,
+0x4C, 0xFC, 0xE7, 0xD5, 0xD6, 0x08, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xB9, 0x08,
+      0x00, 0x0E, 0x00, 0x00, 0x00, 0x99, 0xBB, 0x08, 0x00, 0x21, 0x00, 0x00,
+      0x00, 0x51, 0xBB, 0x08, 0x00, 0x23, 0x00, 0x00, 0x00, 0xE9, 0x4B, 0x08,
+      0x00, 0x24, 0x00, 0x00, 0x00, 0xFD, 0xAD, 0x08, 0x00, 0x1E, 0x00, 0x00,
+      0x00, 0x1E, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
+      0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xD3, 0xD1, 0x08,
+      0x00, 0x03, 0x00, 0x00, 0x00, 0x77, 0xD2, 0x08, 0x00, 0x03, 0x00, 0x00,
+      0x00, 0x01, 0xA0, 0xE1, 0x00, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x18, 0xE1, 0x00, 0x00, 0xAB, 0x00, 0xAB, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0xA0, 0xE1, 0x00, 0x00, 0xD0, 0x00, 0xD0, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x18, 0xE1, 0x00, 0x00, 0x8C, 0x00, 0x8C, 0x00, 0x00, 0x00,
+      0x00, 0x00, 0x34, 0xC6, 0x39, 0x1A, 0x4A, 0x00, 0xC1, 0xFF, 0x4A, 0x00,
+      0xF2, 0xC4, 0x1A, 0x1C, 0xBF, 0x05, 0xBE, 0xF5, 0xBF, 0x05, 0x94, 0xC3,
+      0x14, 0x1E, 0xE1, 0x12, 0x79, 0xDC, 0xE1, 0x12, 0x88, 0xC2, 0x73, 0x1F,
+      0x1B, 0x1D, 0x94, 0xC8, 0x1B, 0x1D, 0x34, 0xC6, 0x39, 0x1A, 0x4A, 0x00,
+      0xC1, 0xFF, 0x4A, 0x00, 0xF2, 0xC4, 0x1A, 0x1C, 0xBF, 0x05, 0xBE, 0xF5,
+      0xBF, 0x05, 0x94, 0xC3, 0x14, 0x1E, 0xE1, 0x12, 0x79, 0xDC, 0xE1, 0x12,
+      0x88, 0xC2, 0x73, 0x1F, 0x1B, 0x1D, 0x94, 0xC8, 0x1B, 0x1D, 0x00, 0x00,
+      0x00, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xF0, 0xE2, 0x00, 0x08, 0xED, 0x07,
+      0xE0, 0x08, 0xAE, 0x09, 0x00
+};
+const int bcm2048_patch_ram_length = sizeof(bcm2048_patchram);
+
+const unsigned char HCI_READ_LOCAL_VERSION_INFORMATION[] = {0x01, 0x10, 0x00};
+const unsigned char HCI_DOWNLOAD_MINIDRIVER[] = {0x01, 0x2E, 0xFC, 0x00};
+const unsigned char HCI_WRITE_DNLD_CONFIG_COMPLETE[] = {0x58, 0xFC, 0x07, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00};
+const unsigned char HCI_LAUNCH_RAM[] = {0x01, 0x4E, 0xFC, 0x04, 0xFF, 0xFF, 0xFF, 0xFF};
+const unsigned int HCI_VS_LAUNCH_RAM_ADDRESS = 0xffffffff;
+
+unsigned char write_ram_buff[272];
+
+char	*gpHcdFilename = NULL;
+
+unsigned char write_mac_buff[18];
+char	*MACFilename = NULL;
+#endif
+
 static volatile sig_atomic_t __io_canceled = 0;
 
+static void hci_baswap(bdaddr_t *dst, const bdaddr_t *src)
+{
+	register unsigned char *d = (unsigned char *) dst;
+	register const unsigned char *s = (const unsigned char *) src;
+	register int i;
+	for (i = 0; i < 6; i++)
+		d[i] = s[5-i];
+}
+
+static int hci_str2ba(const char *str, bdaddr_t *ba)
+{
+	uint8_t b[6];
+	const char *ptr = str;
+	int i;
+
+	for (i = 0; i < 6; i++) {
+		b[i] = (uint8_t) strtol(ptr, NULL, 16);
+		if ((i != 5) && !(ptr = strchr(ptr, ':')))
+			ptr = ":00:00:00:00:00";
+		ptr++;
+	}
+	hci_baswap(ba, (bdaddr_t *) b);
+	return 0;
+}
+
 static void sig_hup(int sig)
 {
 }
@@ -144,10 +1544,10 @@
 	return tcsetattr(fd, TCSANOW, ti);
 }
 
-/*
+/* 
  * Read an HCI event from the given file descriptor.
  */
-int read_hci_event(int fd, unsigned char* buf, int size)
+int read_hci_event(int fd, unsigned char* buf, int size) 
 {
 	int remain, r;
 	int count = 0;
@@ -161,6 +1561,7 @@
 		r = read(fd, buf, 1);
 		if (r <= 0)
 			return -1;
+		
 		if (buf[0] == 0x04)
 			break;
 	}
@@ -175,9 +1576,9 @@
 	}
 
 	/* Now we read the parameters. */
-	if (buf[2] < (size - 3))
+	if (buf[2] < (size - 3)) 
 		remain = buf[2];
-	else
+	else 
 		remain = size - 3;
 
 	while ((count - 3) < remain) {
@@ -190,9 +1591,32 @@
 	return count;
 }
 
-/*
- * Ericsson specific initialization
+#if defined(PATCHRAM_INCLUDED)
+/* 
+ * Read an HCI data from the given file descriptor.
  */
+static int read_hci_data(int fd, unsigned char* buf, int size) 
+{
+	int remain, r;
+	if (size <= 0)
+		return -1;
+
+	remain = size;
+	while (remain) {
+		r = read(fd, buf, size);
+		if (r <= 0){
+			printf( "failed to read hci data\n" );
+			return -1;
+		}
+            remain = remain - r;
+	}
+	return size- remain;
+}
+#endif
+
+/* 
+ * Ericsson specific initialization 
+ */
 static int ericsson(int fd, struct uart_t *u, struct termios *ti)
 {
 	struct timespec tm = {0, 50000};
@@ -245,8 +1669,8 @@
 	return 0;
 }
 
-/*
- * Digianswer specific initialization
+/* 
+ * Digianswer specific initialization 
  */
 static int digi(int fd, struct uart_t *u, struct termios *ti)
 {
@@ -282,6 +1706,7 @@
 	return 0;
 }
 
+#if 0	//unuse 
 static int texas(int fd, struct uart_t *u, struct termios *ti)
 {
 	return texas_init(fd, ti);
@@ -296,6 +1721,7 @@
 {
 	return texasalt_init(fd, u->speed, ti);
 }
+#endif
 
 static int read_check(int fd, void *buf, int count)
 {
@@ -304,7 +1730,7 @@
 	do {
 		res = read(fd, buf, count);
 		if (res != -1) {
-			buf += res;
+			buf += res; 
 			count -= res;
 		}
 	} while (count && (errno == 0 || errno == EINTR));
@@ -324,8 +1750,7 @@
 static void bcsp_tshy_sig_alarm(int sig)
 {
 	unsigned char bcsp_sync_pkt[10] = {0xc0,0x00,0x41,0x00,0xbe,0xda,0xdc,0xed,0xed,0xc0};
-	int len;
-	static int retries = 0;
+	int len, retries = 0;
 
 	if (retries < bcsp_max_retries) {
 		retries++;
@@ -342,8 +1767,7 @@
 static void bcsp_tconf_sig_alarm(int sig)
 {
 	unsigned char bcsp_conf_pkt[10] = {0xc0,0x00,0x41,0x00,0xbe,0xad,0xef,0xac,0xed,0xc0};
-	int len;
-	static int retries = 0;
+	int len, retries = 0;
 
 	if (retries < bcsp_max_retries){
 		retries++;
@@ -480,8 +1904,8 @@
 	return 0;
 }
 
-/*
- * CSR specific initialization
+/* 
+ * CSR specific initialization 
  * Inspired strongly by code in OpenBT and experimentations with Brainboxes
  * Pcmcia card.
  * Jean Tourrilhes <jt@hpl.hp.com> - 14.11.01
@@ -544,7 +1968,7 @@
 			return -1;
 		}
 
-	/* Event code 0xFF is for vendor-specific events, which is
+	/* Event code 0xFF is for vendor-specific events, which is 
 	 * what we're looking for. */
 	} while (resp[1] != 0xFF);
 
@@ -560,7 +1984,7 @@
 	}
 #endif
 	/* Display that to user */
-	fprintf(stderr, "CSR build ID 0x%02X-0x%02X\n",
+	fprintf(stderr, "CSR build ID 0x%02X-0x%02X\n", 
 		resp[15] & 0xFF, resp[14] & 0xFF);
 
 	/* Try to read the current speed of the CSR chip */
@@ -588,7 +2012,7 @@
 			return -1;
 		}
 
-	/* Event code 0xFF is for vendor-specific events, which is
+	/* Event code 0xFF is for vendor-specific events, which is 
 	 * what we're looking for. */
 	} while (resp[1] != 0xFF);
 
@@ -602,7 +2026,7 @@
 #endif
 
 	if (u->speed > 1500000) {
-		fprintf(stderr, "Speed %d too high. Remaining at %d baud\n",
+		fprintf(stderr, "Speed %d too high. Remaining at %d baud\n", 
 			u->speed, u->init_speed);
 		u->speed = u->init_speed;
 	} else if (u->speed != 57600 && uart_speed(u->speed) == B57600) {
@@ -652,8 +2076,8 @@
 	return 0;
 }
 
-/*
- * Silicon Wave specific initialization
+/* 
+ * Silicon Wave specific initialization 
  * Thomas Moser <thomas.moser@tmoser.ch>
  */
 static int swave(int fd, struct uart_t *u, struct termios *ti)
@@ -669,7 +2093,7 @@
 	// Subcommand", e.g. "soft reset" to make the changes effective.
 
 	cmd[0] = HCI_COMMAND_PKT;	// it's a command packet
-	cmd[1] = 0x0B;			// OCF 0x0B	= param access set
+	cmd[1] = 0x0B;			// OCF 0x0B	= param access set	
 	cmd[2] = 0xfc;			// OGF bx111111 = vendor specific
 	cmd[3] = 0x06;			// 6 bytes of data following
 	cmd[4] = 0x01;			// param sub command
@@ -703,9 +2127,9 @@
 		return -1;
 	}
 
-	// We should wait for a "GET Event" to confirm the success of
-	// the baud rate setting. Wait some time before reading. Better:
-	// read with timeout, parse data
+	// We should wait for a "GET Event" to confirm the success of 
+	// the baud rate setting. Wait some time before reading. Better:  
+	// read with timeout, parse data 
 	// until correct answer, else error handling ... todo ...
 
 	nanosleep(&tm, NULL);
@@ -749,7 +2173,7 @@
 	// now the uart baud rate on the silicon wave module is set and effective.
 	// change our own baud rate as well. Then there is a reset event comming in
  	// on the *new* baud rate. This is *undocumented*! The packet looks like this:
-	// 04 FF 01 0B (which would make that a confirmation of 0x0B = "Param
+	// 04 FF 01 0B (which would make that a confirmation of 0x0B = "Param 
 	// subcommand class". So: change to new baud rate, read with timeout, parse
 	// data, error handling. BTW: all param access in Silicon Wave is done this way.
 	// Maybe this code would belong in a seperate file, or at least code reuse...
@@ -813,6 +2237,7 @@
 	return 0;
 }
 
+#if 0	//unuse
 static int stlc2500(int fd, struct uart_t *u, struct termios *ti)
 {
 	bdaddr_t bdaddr;
@@ -849,7 +2274,7 @@
 	}
 #endif
 
-	str2ba(u->bdaddr, &bdaddr);
+	hci_str2ba(u->bdaddr, &bdaddr);
 	return stlc2500_init(fd, &bdaddr);
 }
 
@@ -857,10 +2282,11 @@
 {
 	bdaddr_t bdaddr;
 
-	str2ba(u->bdaddr, &bdaddr);
+	hci_str2ba(u->bdaddr, &bdaddr);
 
 	return bgb2xx_init(fd, &bdaddr);
 }
+#endif
 
 /*
  * Broadcom specific initialization
@@ -899,7 +2325,7 @@
 		cmd[1] = 0x01;
 		cmd[2] = 0xfc;
 		cmd[3] = 0x06;
-		str2ba(u->bdaddr, (bdaddr_t *) (cmd + 4));
+		hci_str2ba(u->bdaddr, (bdaddr_t *) (cmd + 4));
 
 		/* Send command */
 		if (write(fd, cmd, 10) != 10) {
@@ -1003,6 +2429,632 @@
 	return 0;
 }
 
+#ifdef BCM2048_SUPPORTED

+static int BRCM_WriteVoiceSetting(int fd)
+{
+	int n;
+	unsigned char cmd[30], resp[30];
+
+	#if defined(BCM2048_DEBUG)
+	int iLoop = 0;
+	#endif
+
+	printf( "bcm2048 start Write_Voice_Setting\n" );
+	memset(cmd, 0, sizeof(cmd));
+	memset(resp, 0, sizeof(resp));
+	cmd[0] = HCI_COMMAND_PKT;
+	cmd[1] = 0x26;//Write_Voice_Setting
+	cmd[2] = 0x0c;
+	cmd[3] = 0x02;
+	cmd[4] = 0x60;
+	cmd[5] = 0x00;
+	
+	/* Send command */
+	if (write(fd, cmd, 6) != 6) {
+		fprintf(stderr, "Failed to write reset command\n");
+		return -1;
+	}	
+	  
+	/* Read reply */
+	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+		fprintf(stderr, "Failed to reset chip\n");
+		return -1;
+	}
+	#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < 7 ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+	#endif
+	
+	if ((n != 7) || (resp[1] != 0x0E) || (resp[6] != 0x00))
+	{
+		return -1;
+	}
+
+	return 0;
+}
+
+//
+// There are serveral PCM settings, should configure these according to platform setting if need.
+// 1. voice setting op: 0x0c26
+// 2. general PCM setting (code below)
+// 3. PCM data format setting (code below)
+// 4. SCO time slot
+//
+static int BRCM_SetPCMParam(int fd)
+{
+	int n;
+	unsigned char cmd[30], resp[30];
+
+	#if defined(BCM2048_DEBUG)
+	int iLoop = 0;
+	#endif
+
+	printf( "bcm2048 start Write_SCO_PCM_Int_Param\n" );
+	memset(cmd, 0, sizeof(cmd));
+	memset(resp, 0, sizeof(resp));
+	cmd[0] = HCI_COMMAND_PKT;
+	cmd[1] = 0x1c;//Write_SCO_PCM_Int_Param
+	cmd[2] = 0xfc;
+	cmd[3] = 0x05;
+	cmd[4] = 0x00;//
+	cmd[5] = 0x04;// clck:2048k,,2048 KBps
+	cmd[6] = 0x00;
+	cmd[7] = 0x01;//Master
+	cmd[8] = 0x01;//Master
+	
+	/* Send command */
+	if (write(fd, cmd, 9) != 9) {
+		fprintf(stderr, "Failed to write reset command\n");
+		return -1;
+	}
+
+	/* Read reply */
+	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+		fprintf(stderr, "Failed to reset chip\n");
+		return -1;
+	}
+	#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < 7 ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+	#endif
+
+	if ((n != 7) || (resp[1] != 0x0E) || (resp[6] != 0x00))
+	{
+ 		return -1;
+	}
+
+	printf( "bcm2048 start Write_PCM_Data_Format_Param\n" );
+	memset(cmd, 0, sizeof(cmd));
+	memset(resp, 0, sizeof(resp));
+	cmd[0] = HCI_COMMAND_PKT;
+	cmd[1] = 0x1e;//Write_PCM_Data_Format_Param
+	cmd[2] = 0xfc;
+	cmd[3] = 0x05;
+	cmd[4] = 0x00;// lsb
+	cmd[5] = 0x00;// 
+	cmd[6] = 0x00;
+	cmd[7] = 0x03;
+	cmd[8] = 0x00;
+	
+	/* Send command */
+	if (write(fd, cmd, 9) != 9) {
+		fprintf(stderr, "Failed to write reset command\n");
+		return -1;
+	}
+
+	/* Read reply */
+	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+		fprintf(stderr, "Failed to reset chip\n");
+		return -1;
+	}
+	#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < 7 ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+	#endif
+
+	if ((n != 7) || (resp[1] != 0x0E) || (resp[6] != 0x00))
+	{
+ 		return -1;
+	}
+
+	return 0;
+}
+
+static int BRCM_WriteScanEnable(int fd)
+{
+	int n;
+	unsigned char cmd[30], resp[30];
+
+	#if defined(BCM2048_DEBUG)
+	int iLoop = 0;
+	#endif
+
+	usleep(100*1000);
+
+	/* Write_Scan_Enable */
+	printf( "start Write_Scan_Enable bcm2048\n" );
+	memset(cmd, 0, sizeof(cmd));
+	memset(resp, 0, sizeof(resp));
+	cmd[0] = HCI_COMMAND_PKT;
+	cmd[1] = 0x1a;//Write_Scan_Enable
+	cmd[2] = 0x0c;
+	cmd[3] = 0x01;
+	cmd[4] = 0x03;
+
+	/* Send command */
+	if (write(fd, cmd, 5) != 5) {
+		fprintf(stderr, "Failed to write reset command\n");
+		return -1;
+	}
+
+	/* Read reply */
+	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+		fprintf(stderr, "Failed to reset chip\n");
+		return -1;
+	}
+	#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < 7 ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+	#endif
+
+	return 0;
+}
+
+#if defined(PATCHRAM_INCLUDED)
+static int BRCM_PatchRamByHCD(int fd)
+{
+	FILE	*fp;
+
+	unsigned short	*vscmd = (unsigned short*) &write_ram_buff[1];
+	#if defined(BCM2048_DEBUG)
+	int iLoop2 = 0;
+	#endif
+
+	unsigned int  bytes_read = 0;
+	unsigned int  read_bytes = 0;	
+	unsigned char resp[30];
+	int n;
+
+	if (NULL == gpHcdFilename)  {
+		fprintf(stderr, "no hcd file!\n");
+		return -1;
+	}
+	else
+		printf("to load HCD file %s.\n", gpHcdFilename);
+
+	if ((fp = fopen(gpHcdFilename, "rb")) != NULL)  {
+		write_ram_buff[0] = HCI_COMMAND_PKT;       // HCI_Command
+		while (!feof(fp))  {
+			if (fread(write_ram_buff+1, 1, 3, fp) != 3)
+				break;
+
+			if (fread(write_ram_buff+4, 1, write_ram_buff[3], fp) != write_ram_buff[3])  {
+				break;
+			}
+			bytes_read = write_ram_buff[3] + 3;
+
+			#if defined(BCM2048_DEBUG) && 0
+			printf( "\n" );
+			for( iLoop2 = 0 ; iLoop2 < (bytes_read + 1 ) ; iLoop2++ )  {
+				printf( "%02x " , write_ram_buff[iLoop2] );
+				if( ( iLoop2 % 16 ) == 15 )
+					printf( "\n" );
+			}
+			#endif
+
+			// ingore 0xFC4E VS command
+			if (0xFC4E == *vscmd)  {
+				printf("ignore 0xfc4e vs command from hcd file!\n");
+				break;
+			}
+ 			read_bytes = write(fd, write_ram_buff, bytes_read + 1);
+			if (read_bytes != bytes_read + 1) {
+				printf("read_bytes = %d; bytes_read + 1 = %d\n", read_bytes, bytes_read);				
+				fprintf(stderr, "Failed to download pathcram\n");
+				return -1;
+			}	
+			memset(resp, 0, sizeof(resp));
+			if ((n = read_hci_event(fd, resp, 7)) < 0) {
+				fprintf(stderr, "Failed to get respond\n");
+				return -1;
+			}					
+
+			if ((n != 7) || (resp[1] != 0x0E) || (resp[6] != 0x00))
+			{
+				fprintf(stderr, "Failed to download pathcram!!\n");
+				printf("n=%d; resp[1]=%0x%X; resp[6]=0x%X\n", n, resp[1], resp[6]);
+				return -1;
+			}
+		}
+
+		fclose(fp);
+	}
+	else  {
+		fprintf(stderr, "open hcd file error!\n");
+		return -1;
+	}
+
+	return 0;
+}
+
+static int BRCM_PatchRamByArray(int fd)
+{
+	unsigned char resp[30];
+	int n;
+
+	unsigned char *pConfigData = NULL;
+	unsigned int  dwDataLen = 0;
+	unsigned long data_index;
+	unsigned int  bytes_read = 0;
+
+	int iLoop = 0;
+	#if defined(BCM2048_DEBUG)
+	int iLoop2 = 0;
+	#endif
+
+	printf( "bcm2048_patch_ram_length:%d\n" , bcm2048_patch_ram_length );
+	printf( "\n" );
+	pConfigData = bcm2048_patchram;
+	dwDataLen   = bcm2048_patch_ram_length;
+
+	write_ram_buff[0] = HCI_COMMAND_PKT;       // HCI_Command
+	iLoop = 0;
+	for (data_index = 0; data_index < dwDataLen;)
+	{
+		bytes_read = *(pConfigData + data_index + 2 ) + 3;
+		memcpy((write_ram_buff + 1 ), (pConfigData+data_index), bytes_read);
+
+		data_index += bytes_read;
+		printf( "iLoop%d   bytes_read:%02x , data_index:%ld\n" , iLoop , bytes_read - 3 ,data_index );
+
+		#if defined(BCM2048_DEBUG)
+		{
+			printf( "\n" );
+			for( iLoop2 = 0 ; iLoop2 < (bytes_read + 1 ) ; iLoop2++ ){
+				printf( "%02x " , write_ram_buff[iLoop2] );
+				if( ( iLoop2 % 16 ) == 15 )
+					printf( "\n" );
+			}
+		}
+		#endif
+ 
+		if (write(fd, write_ram_buff, bytes_read + 1) != bytes_read + 1) {
+			fprintf(stderr, "Failed to download pathcram\n");
+			return -1;
+		}	
+		memset(resp, 0, sizeof(resp));
+		if ((n = read_hci_event(fd, resp, 7)) < 0) {
+			fprintf(stderr, "Failed to get respond\n");
+			return -1;
+		}					
+
+		if ((n != 7) || (resp[1] != 0x0E) || (resp[6] != 0x00))
+		{
+			fprintf(stderr, "Failed to download pathcram!!\n");
+			printf("n=%d; resp[1]=%d; resp[6]=%d\n", n, resp[1], resp[6]);
+			return -1;
+		}
+		iLoop ++;
+	}
+
+	return 0;
+}
+#endif
+
+/*
+ * Broadcom specific initialization
+ * 
+ */
+static int bcm2048(int fd, struct uart_t *u, struct termios *ti)
+{
+	int n;
+	unsigned char cmd[30], resp[30];
+
+	int	*baud_rate;
+
+	#if defined(BCM2048_DEBUG)
+	int iLoop = 0;
+	#endif
+	FILE	*fp;
+
+	/* Reset the BT Chip */
+	printf( "start reset bcm2048\n" );
+	memset(cmd, 0, sizeof(cmd));
+	memset(resp, 0, sizeof(resp));
+	cmd[0] = HCI_COMMAND_PKT;
+	cmd[1] = 0x03;
+	cmd[2] = 0x0c;
+	cmd[3] = 0x00;
+
+#if 1
+	/* Send command */
+	if (write(fd, cmd, 4) != 4) {
+		fprintf(stderr, "Failed to write reset command\n");
+		return -1;
+	}
+	/* Read reply */
+	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+		fprintf(stderr, "Failed to reset chip\n");
+		return -1;
+	}
+	#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < 7 ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+	#endif
+#endif
+
+#if defined(PATCHRAM_INCLUDED)  //download configure file
+	memset(cmd, 0, sizeof(cmd));
+	memset(resp, 0, sizeof(resp));
+	printf( "bcm2048 start HCI_DOWNLOAD_MINIDRIVER\n" );
+	if (write(fd, HCI_DOWNLOAD_MINIDRIVER, 4) != 4) {
+		fprintf(stderr, "Failed to download mimidriver command\n");
+		return -1;
+	}
+	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+		fprintf(stderr, "Failed to get respond\n");
+		return -1;
+	}
+	#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < 7 ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+	#endif
+
+	if (resp[1] != 0x0e&&resp[6] != 0x00) {
+		fprintf(stderr, "Failed to donload mini driver\n");
+		return -1;
+	}
+
+	memset(resp, 0, sizeof(resp));
+	if ((n = read_hci_data(fd, resp, 2)) < 0) {
+		fprintf(stderr, "Failed to get respond\n");
+		return -1;
+	}
+	#if defined(BCM2048_DEBUG)
+	for( iLoop = 0; iLoop < 2 ; iLoop ++ )
+	{
+		printf( "resp[%d]:%02x\n" , iLoop , resp[iLoop]  );
+	}
+	#endif
+
+	printf( "\n" );
+	printf( "bcm2048 start download pram\n" );
+	if (BRCM_PatchRamByHCD(fd) && BRCM_PatchRamByArray(fd))
+		return -1;
+
+	printf( "bcm2048 start HCI_LAUNCH_RAM\n" );
+       	if (write(fd, HCI_LAUNCH_RAM, 8) != 8) {
+       		fprintf(stderr, "Failed to launch ram\n");
+       		return -1;
+       	}
+
+	memset(resp, 0, sizeof(resp));
+ 	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+ 		fprintf(stderr, "Failed to get respond\n");
+ 		return -1;
+ 	}
+	printf("finished launch ram:\n");
+		
+	#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < 7 ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+	#endif
+
+	if ((n != 7) || (resp[1] != 0x0E) || (resp[6] != 0x00))
+	{
+		printf( "download configure file error\n" );
+		return -1;
+	}
+
+#if 0
+	/* Reset the BT Chip */
+	usleep(500*1000);
+	printf( "start reset bcm2048\n" );
+	memset(cmd, 0, sizeof(cmd));
+	memset(resp, 0, sizeof(resp));
+	cmd[0] = HCI_COMMAND_PKT;
+	cmd[1] = 0x03;
+	cmd[2] = 0x0c;
+	cmd[3] = 0x00;
+
+	/* Send command */
+	if (write(fd, cmd, 4) != 4) {
+		fprintf(stderr, "Failed to write reset command\n");
+		return -1;
+	}
+
+	/* Read reply */
+	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+		fprintf(stderr, "Failed to reset chip\n");
+		return -1;
+	}
+	#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < 7 ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+	#endif
+#endif
+#endif
+
+	usleep(500*1000);
+#if 1
+	if (BRCM_WriteVoiceSetting(fd))
+		return -1;
+		
+	if (BRCM_SetPCMParam(fd))
+		return -1;
+		
+#endif
+	
+#if 1
+	if (NULL == MACFilename)  
+	{	
+		if (u->bdaddr != NULL) {
+			/* Set BD_ADDR */
+			printf( "bcm2048 start Write_BD_ADDR %s\n", u->bdaddr );
+			memset(cmd, 0, sizeof(cmd));
+			memset(resp, 0, sizeof(resp));
+			cmd[0] = HCI_COMMAND_PKT;
+			cmd[1] = 0x01;//Write_BD_ADDR
+			cmd[2] = 0xfc;
+			cmd[3] = 0x06;
+			hci_str2ba(u->bdaddr, (bdaddr_t *) (cmd + 4));
+
+			/* Send command */
+			if (write(fd, cmd, 10) != 10) {
+				fprintf(stderr, "Failed to write BD_ADDR command\n");
+				return -1;
+			}
+
+			/* Read reply */
+			if ((n = read_hci_event(fd, resp, 10)) < 0) {
+				fprintf(stderr, "Failed to set BD_ADDR\n");
+				return -1;
+			}
+		#if defined(BCM2048_DEBUG)
+			printf("\tresp:");
+			for( iLoop = 0; iLoop < n ; iLoop ++ )
+				printf(" %02x", resp[iLoop]);
+			printf("\n");
+		#endif
+		}
+	}
+	else
+	{
+		printf("Read MAC Address file and prepare to write MAC address\n");	
+		if ((fp = fopen(MACFilename, "rb")) != NULL)  {			
+			if (fread(write_mac_buff, 1, 17, fp) != 17)
+			{
+				printf("Read MAC address fail!!\n");				
+			}							
+			else
+			{
+				/* Set BD_ADDR */
+				printf( "bcm2048 start Write_BD_ADDR %s\n", write_mac_buff );
+				memset(cmd, 0, sizeof(cmd));
+				memset(resp, 0, sizeof(resp));
+				cmd[0] = HCI_COMMAND_PKT;
+				cmd[1] = 0x01;//Write_BD_ADDR
+				cmd[2] = 0xfc;
+				cmd[3] = 0x06;
+				hci_str2ba(write_mac_buff, (bdaddr_t *) (cmd + 4));
+
+				/* Send command */
+				if (write(fd, cmd, 10) != 10) {
+					fprintf(stderr, "Failed to write BD_ADDR command\n");
+					return -1;
+				}
+
+				/* Read reply */
+				if ((n = read_hci_event(fd, resp, 10)) < 0) {
+					fprintf(stderr, "Failed to set BD_ADDR\n");
+					return -1;
+				}
+			#if defined(BCM2048_DEBUG)
+				printf("\tresp:");
+				for( iLoop = 0; iLoop < n ; iLoop ++ )
+					printf(" %02x", resp[iLoop]);
+				printf("\n");
+			#endif				
+			}
+		}
+		else{
+			printf("Cannot Read MAC Address file!!\n");			
+		}
+	}
+#endif
+	
+	/* Set the baud rate */
+	printf( "bcm2048 start Update_UART_Baud_Rate\n" );
+	memset(cmd, 0, sizeof(cmd));
+	memset(resp, 0, sizeof(resp));
+	cmd[0] = HCI_COMMAND_PKT;
+	cmd[1] = 0x18;//Update_UART_Baud_Rate
+	cmd[2] = 0xfc;
+	cmd[3] = 0x06;
+
+	baud_rate = (int*) &cmd[6];
+	*baud_rate = u->speed;
+//	*baud_rate = 115200;
+	fprintf(stderr, "Baud rate parameters: %d\n", *baud_rate);
+
+	/* Send command */
+	if (write(fd, cmd, 10) != 10) {
+		fprintf(stderr, "Failed to write \"set baud rate\" command\n");
+		return -1;
+	}
+
+	if ((n = read_hci_event(fd, resp, 7)) < 0) {
+		fprintf(stderr, "Failed to set baud rate\n");
+		return -1;
+	}
+#if defined(BCM2048_DEBUG)
+	printf("\tresp:");
+	for( iLoop = 0; iLoop < n ; iLoop ++ )
+		printf(" %02x", resp[iLoop]);
+	printf("\n");
+#endif
+#if 0
+	if (BRCM_WriteScanEnable(fd))
+		return -1;
+#endif
+
+	return 0;
+}
+#endif
+
 struct uart_t uart[] = {
 	{ "any",        0x0000, 0x0000, HCI_UART_H4,   115200, 115200, FLOW_CTL, NULL, NULL     },
 	{ "ericsson",   0x0000, 0x0000, HCI_UART_H4,   57600,  115200, FLOW_CTL, NULL, ericsson },
@@ -1022,21 +3074,23 @@
 	/* Silicon Wave kits */
 	{ "swave",      0x0000, 0x0000, HCI_UART_H4,   115200, 115200, FLOW_CTL, NULL, swave    },
 
+	/* ST Microelectronics minikits based on STLC2410/STLC2415 */
+	{ "st",         0x0000, 0x0000, HCI_UART_H4,    57600, 115200, FLOW_CTL, NULL, st       },
+
+	/* Philips generic Ericsson IP core based */
+	{ "philips",    0x0000, 0x0000, HCI_UART_H4,   115200, 115200, FLOW_CTL, NULL, NULL     },
+
+#if 0	//unuse
 	/* Texas Instruments Bluelink (BRF) modules */
 	{ "texas",      0x0000, 0x0000, HCI_UART_LL,   115200, 115200, FLOW_CTL, NULL, texas,    texas2 },
 	{ "texasalt",   0x0000, 0x0000, HCI_UART_LL,   115200, 115200, FLOW_CTL, NULL, texasalt, NULL   },
 
-	/* ST Microelectronics minikits based on STLC2410/STLC2415 */
-	{ "st",         0x0000, 0x0000, HCI_UART_H4,    57600, 115200, FLOW_CTL, NULL, st       },
-
 	/* ST Microelectronics minikits based on STLC2500 */
 	{ "stlc2500",   0x0000, 0x0000, HCI_UART_H4,   115200, 115200, FLOW_CTL, "00:80:E1:00:AB:BA", stlc2500 },
 
-	/* Philips generic Ericsson IP core based */
-	{ "philips",    0x0000, 0x0000, HCI_UART_H4,   115200, 115200, FLOW_CTL, NULL, NULL     },
-
 	/* Philips BGB2xx Module */
 	{ "bgb2xx",    0x0000, 0x0000, HCI_UART_H4,   115200, 115200, FLOW_CTL, "BD:B2:10:00:AB:BA", bgb2xx },
+#endif
 
 	/* Sphinx Electronics PICO Card */
 	{ "picocard",   0x025e, 0x1000, HCI_UART_H4,   115200, 115200, FLOW_CTL, NULL, NULL     },
@@ -1071,6 +3125,11 @@
 	/* Broadcom BCM2035 */
 	{ "bcm2035",    0x0A5C, 0x2035, HCI_UART_H4,   115200, 460800, FLOW_CTL, NULL, bcm2035  },
 
+#ifdef BCM2048_SUPPORTED
+	/* Broadcom BCM2048 */
+	{ "bcmbt",    0x0A5C, 0x2048, HCI_UART_H4,   115200, 115200, FLOW_CTL, "00:80:E1:00:AB:01", bcm2048  },
+#endif
+
 	{ NULL, 0 }
 };
 
@@ -1094,48 +3153,174 @@
 	return NULL;
 }
 
+static int set_opt(int fd,int nSpeed, int nBits, char nEvent, int nStop, int flowcontrol)
+{
+   struct termios newtio,oldtio;
+   
+   bzero( &newtio, sizeof( newtio ) ); 
+
+   if  ( tcgetattr( fd,&newtio)  !=  0) { 
+      printf("SetupSerial 1, tcgetattr = %d\n", tcgetattr( fd,&newtio));
+      return -1;
+   }
+	     
+   	cfmakeraw(&newtio); 
+
+   bzero( &newtio, sizeof( newtio ) ); 
+
+   newtio.c_cflag  |=  CLOCAL | CREAD ;
+   newtio.c_cflag &= ~CSIZE;
+	if (flowcontrol & FLOW_CTL){    
+   		newtio.c_cflag |= CRTSCTS;
+   	}
+   	else{
+    	newtio.c_cflag &= ~ CRTSCTS;     	 		
+   	}
+   switch( nBits )
+   {
+   case 7:
+      newtio.c_cflag |= CS7;
+      break;
+   case 8:
+      newtio.c_cflag |= CS8;
+      break;
+   }
+   switch( nEvent )
+   {
+   case 'O':
+      newtio.c_cflag |= PARENB;
+      newtio.c_cflag |= PARODD;
+      newtio.c_iflag |= (INPCK | ISTRIP);
+      break;
+   case 'E': 
+      newtio.c_iflag |= (INPCK | ISTRIP);
+      newtio.c_cflag |= PARENB;
+      newtio.c_cflag &= ~PARODD;
+      break;
+   case 'N':  
+      newtio.c_cflag &= ~PARENB;
+      break;
+   }
+   tcflush(fd,TCIFLUSH);
+switch( nSpeed )
+   {
+   case 2400:
+      cfsetispeed(&newtio, B2400);
+      cfsetospeed(&newtio, B2400);
+      break;
+   case 4800:
+      cfsetispeed(&newtio, B4800);
+      cfsetospeed(&newtio, B4800);
+      break;
+   case 9600:
+      cfsetispeed(&newtio, B9600);
+      cfsetospeed(&newtio, B9600);
+      break;
+   case 115200:
+      cfsetispeed(&newtio, B115200);
+      cfsetospeed(&newtio, B115200);
+      break;
+   case 230400:
+      cfsetispeed(&newtio, B230400);
+      cfsetospeed(&newtio, B230400);
+      break;
+   case 460800:
+      cfsetispeed(&newtio, B460800);
+      cfsetospeed(&newtio, B460800);
+      break;
+   case 500000:
+      cfsetispeed(&newtio, B500000);
+      cfsetospeed(&newtio, B500000);
+      break;
+   case 576000:
+      cfsetispeed(&newtio, B576000);
+      cfsetospeed(&newtio, B576000);
+      break;
+   case 921600:
+      cfsetispeed(&newtio, B921600);
+      cfsetospeed(&newtio, B921600);
+      break;
+   case 1000000:
+      cfsetispeed(&newtio, B1000000);
+      cfsetospeed(&newtio, B1000000);
+      break;
+   case 1152000:
+      cfsetispeed(&newtio, B1152000);
+      cfsetospeed(&newtio, B1152000);
+      break;
+   case 1500000:
+      cfsetispeed(&newtio, B1500000);
+      cfsetospeed(&newtio, B1500000);
+      break;
+   case 2000000:
+      cfsetispeed(&newtio, B2000000);
+      cfsetospeed(&newtio, B2000000);
+      break;
+#ifdef B2500000
+   case 2500000:
+      cfsetispeed(&newtio, B2500000);
+      cfsetospeed(&newtio, B2500000);
+      break;
+#endif      
+#ifdef B3000000      
+   case 3000000:
+      cfsetispeed(&newtio, B3000000);
+      cfsetospeed(&newtio, B3000000);
+      break;
+#endif      
+#ifdef B3500000      
+   case 3500000:
+      cfsetispeed(&newtio, B3500000);
+      cfsetospeed(&newtio, B3500000);
+      break;
+#endif      
+#ifdef B4000000      
+   case 4000000:
+      cfsetispeed(&newtio, B4000000);
+      cfsetospeed(&newtio, B4000000);
+      break;
+#endif                                                 
+   default:
+      cfsetispeed(&newtio, B9600);
+      cfsetospeed(&newtio, B9600);
+      break;
+   }
+   if( nStop == 1 )
+      newtio.c_cflag &=  ~CSTOPB;
+   else if ( nStop == 2 )
+   newtio.c_cflag |=  CSTOPB;
+
+   newtio.c_cc[VTIME]  = 0;
+   newtio.c_cc[VMIN] = 1;
+
+   tcflush(fd,TCIFLUSH);		
+
+   if((tcsetattr(fd,TCSANOW,&newtio))!=0)
+   {
+      printf("com set error\n");
+      return -1;
+   }
+   return 0;
+}
+
 /* Initialize UART driver */
-static int init_uart(char *dev, struct uart_t *u, int send_break, int raw)
+static int init_uart(char *dev, struct uart_t *u, int send_break)
 {
 	struct termios ti;
 	int fd, i;
-	unsigned long flags = 0;
 
-	if (raw)
-		flags |= 1 << HCI_UART_RAW_DEVICE;
-
 	fd = open(dev, O_RDWR | O_NOCTTY);
 	if (fd < 0) {
 		perror("Can't open serial port");
 		return -1;
 	}
-
 	tcflush(fd, TCIOFLUSH);
 
-	if (tcgetattr(fd, &ti) < 0) {
-		perror("Can't get port settings");
-		return -1;
-	}
+   if((i=set_opt(fd, u->init_speed, 8, 'N', 1, u->flags))<0){
+	  printf("bluetooth : write set_opt error\n");
+	  return -1;
+   } 
 
-	cfmakeraw(&ti);
-
-	ti.c_cflag |= CLOCAL;
-	if (u->flags & FLOW_CTL)
-		ti.c_cflag |= CRTSCTS;
-	else
-		ti.c_cflag &= ~CRTSCTS;
-
-	if (tcsetattr(fd, TCSANOW, &ti) < 0) {
-		perror("Can't set port settings");
-		return -1;
-	}
-
-	/* Set initial baudrate */
-	if (set_speed(fd, &ti, u->init_speed) < 0) {
-		perror("Can't set initial baud rate");
-		return -1;
-	}
-
 	tcflush(fd, TCIOFLUSH);
 
 	if (send_break) {
@@ -1149,28 +3334,27 @@
 	tcflush(fd, TCIOFLUSH);
 
 	/* Set actual baudrate */
-	if (set_speed(fd, &ti, u->speed) < 0) {
-		perror("Can't set baud rate");
-		return -1;
-	}
+   if((i=set_opt(fd, u->speed, 8, 'N', 1, u->flags))<0){
+	  printf("bluetooth : write set_opt error\n");
+	  return -1;
+   } 
+	/* Set TTY to N_HCI line discipline */
+	usleep(100*1000);
 
-	/* Set TTY to N_HCI line discipline */
+	if (BRCM_WriteScanEnable(fd))
+		return -1;	
+	
 	i = N_HCI;
 	if (ioctl(fd, TIOCSETD, &i) < 0) {
 		perror("Can't set line discipline");
 		return -1;
 	}
 
-	if (flags && ioctl(fd, HCIUARTSETFLAGS, flags) < 0) {
-		perror("Can't set UART flags");
-		return -1;
-	}
-
+	usleep(100*1000);
 	if (ioctl(fd, HCIUARTSETPROTO, u->proto) < 0) {
 		perror("Can't set device");
 		return -1;
 	}
-
 	if (u->post && u->post(fd, u, &ti) < 0)
 		return -1;
 
@@ -1181,14 +3365,15 @@
 {
 	printf("hciattach - HCI UART driver initialization utility\n");
 	printf("Usage:\n");
-	printf("\thciattach [-n] [-p] [-b] [-r] [-t timeout] [-s initial_speed] <tty> <type | id> [speed] [flow|noflow] [bdaddr]\n");
+	printf("\thciattach [-n] [-p] [-b] [-t timeout] [-s initial_speed] [-f hcd_file] [-m MAC_file] <tty> <type | id> [speed] [flow|noflow] [bdaddr]\n");
 	printf("\thciattach -l\n");
+	printf("\thciattach -v\n");	
 }
 
 int main(int argc, char *argv[])
 {
 	struct uart_t *u = NULL;
-	int detach, printpid, raw, opt, i, n, ld, err;
+	int detach, printpid, opt, i, n, ld, err;
 	int to = 10;
 	int init_speed = 0;
 	int send_break = 0;
@@ -1197,12 +3382,13 @@
 	struct pollfd p;
 	sigset_t sigs;
 	char dev[PATH_MAX];
+	struct termios ti;
+	int j;
 
 	detach = 1;
 	printpid = 0;
-	raw = 0;
 
-	while ((opt=getopt(argc, argv, "bnpt:s:lr")) != EOF) {
+	while ((opt=getopt(argc, argv, "bnpt:s:f:m:l:v")) != EOF) {
 		switch(opt) {
 		case 'b':
 			send_break = 1;
@@ -1224,6 +3410,19 @@
 			init_speed = atoi(optarg);
 			break;
 
+#if defined(BCM2048_SUPPORTED)
+		case 'f':
+			gpHcdFilename = optarg;
+			break;
+#endif
+
+		case 'm':
+			MACFilename = optarg;
+			break;
+
 		case 'l':
 			for (i = 0; uart[i].type; i++) {
 				printf("%-10s0x%04x,0x%04x\n", uart[i].type,
@@ -1231,10 +3430,10 @@
 			}
 			exit(0);
 
-		case 'r':
-			raw = 1;
-			break;
-
+		case 'v':
+			printf("%Hciattach version : %s\n", VERSION);
+			exit(0);
+			
 		default:
 			usage();
 			exit(1);
@@ -1273,7 +3472,7 @@
 				fprintf(stderr, "Unknown device type or id\n");
 				exit(1);
 			}
-
+			
 			break;
 
 		case 2:
@@ -1312,14 +3511,13 @@
 	alarm(to);
 	bcsp_max_retries = to;
 
-	n = init_uart(dev, u, send_break, raw);
+	n = init_uart(dev, u, send_break);
 	if (n < 0) {
-		perror("Can't initialize device");
+		perror("Can't initialize device"); 
 		exit(1);
 	}
 
 	printf("Device setup complete\n");
-
 	alarm(0);
 
 	memset(&sa, 0, sizeof(sa));
@@ -1335,10 +3533,16 @@
 	sa.sa_handler = sig_hup;
 	sigaction(SIGHUP, &sa, NULL);
 
+	if (tcgetattr(n, &ti) < 0) {
+		perror("Can't get port settings");
+		return -1;
+	}
+
 	if (detach) {
 		if ((pid = fork())) {
-			if (printpid)
-				printf("%d\n", pid);
+			if (printpid){				
+				printf("pid : %d\n", pid);
+			}		
 			return 0;
 		}
 
@@ -1346,7 +3550,6 @@
 			if (i != n)
 				close(i);
 	}
-
 	p.fd = n;
 	p.events = POLLERR | POLLHUP;
 
@@ -1357,7 +3560,8 @@
 	sigdelset(&sigs, SIGINT);
 	sigdelset(&sigs, SIGHUP);
 
-	while (!__io_canceled) {
+	usleep(100*1000);
+	while (!__io_canceled) {	
 		p.revents = 0;
 		err = ppoll(&p, 1, NULL, &sigs);
 		if (err < 0 && errno == EINTR)
@@ -1372,6 +3576,6 @@
 		perror("Can't restore line discipline");
 		exit(1);
 	}
-
 	return 0;
 }
+
Index: system/bluetooth/bluedroid/bluetooth.c
===================================================================
--- system/bluetooth/bluedroid/bluetooth.c	(revision 704)
+++ system/bluetooth/bluedroid/bluetooth.c	(working copy)
@@ -130,6 +130,7 @@
              errno);
         goto out;
     }
+    usleep(500000);
     ret = 0;
 
 out:
Index: vendor/thinkware/conf/init.rc
===================================================================
--- vendor/thinkware/conf/init.rc	(revision 704)
+++ vendor/thinkware/conf/init.rc	(working copy)
@@ -273,6 +284,13 @@
     setprop net.tcp.buffersize.edge    4093,26280,35040,4096,16384,35040
     setprop net.tcp.buffersize.gprs    4092,8760,11680,4096,8760,11680
 
+# +++++++++++++++++++++++++++++++++++++++++++
+    # bluetooth power up/down interface
+    chown bluetooth bluetooth /dev/s3c2410_serial1
+    chmod 0666 /dev/s3c2410_serial1
+    chmod 0777 /sys/class/rfkill/rfkill0/state
+    chown bluetooth bluetooth /sys/class/rfkill/rfkill0/state
+
     class_start default
 
 ## Daemon processes to be run by init.
@@ -404,6 +422,29 @@
+# Bluetooth    
+service hciattach /system/bin/hciattach -p -n -f /system/etc/BCM4329.hcd -m /system/etc/bt_mac.txt /dev/s3c2410_serial1 bcmbt 2000000 flow
+	user bluetooth
+	group bluetooth net_bt_admin misc
+	disabled
+	oneshot
+
 service dumpstate /system/bin/dumpstate -s
     socket dumpstate stream 0660 shell log
     disabled
Index: vendor/sec/smdkv210/BoardConfig.mk
===================================================================
--- vendor/sec/smdkv210/BoardConfig.mk	(revision 704)
+++ vendor/sec/smdkv210/BoardConfig.mk	(working copy)
@@ -30,8 +30,8 @@
 TARGET_CPU_ABI := armeabi-v7a
 TARGET_CPU_ABI2 := armeabi
 
-BOARD_HAVE_BLUETOOTH := false
-BOARD_HAVE_BLUETOOTH_BCM := false
+BOARD_HAVE_BLUETOOTH := true
+BOARD_HAVE_BLUETOOTH_BCM := true
 
 TARGET_NO_BOOTLOADER := true
 
Index: vendor/sec/smdkv210/AndroidBoard.mk
===================================================================
---vendor/sec/smdkv210/AndroidBoard.mk	(revision 704)
+++ vendor/sec/smdkv210/AndroidBoard.mk	(working copy)
 # The OpenGL ES API level that is natively supported by this device.
@@ -134,6 +135,14 @@
 PRODUCT_COPY_FILES += \
     $(LOCAL_KERNEL):kernel
 
+PRODUCT_COPY_FILES += \
+	vendor/sec/smdkv210/conf/BCM4329.hcd:system/etc/BCM4329.hcd	\
+	vendor/sec/smdkv210/conf/bt_mac.txt:system/etc/bt_mac.txt
+
 # See comment at the top of this file. This is where the other
 # half of the device-specific product definition file takes care
 # of the aspects that require proprietary drivers that aren't

